#include <Arduino.h>
#include <Wire.h>

// Your custom I2C pins
#define I2C_SDA 21  // Default SDA, available
#define I2C_SCL 25  // Alternative SCL (GPIO 22 used by RS485)

void identifyDevice(byte address) {
    switch (address) {
        case 0x20:
        case 0x21:
        case 0x22:
        case 0x23:
        case 0x24:
        case 0x25:
        case 0x26:
        case 0x27:
            Serial.println("PCF8574/PCF8575 I/O Expander");
            break;
        case 0x48:
        case 0x49:
        case 0x4A:
        case 0x4B:
            Serial.println("ADS1115/ADS1015 ADC or PCF8591");
            break;
        case 0x50:
        case 0x51:
        case 0x52:
        case 0x53:
        case 0x54:
        case 0x55:
        case 0x56:
        case 0x57:
            Serial.println("EEPROM (24C series)");
            break;
        case 0x68:
            Serial.println("DS1307/DS3231 RTC or MPU6050 Gyro");
            break;
        case 0x76:
        case 0x77:
            Serial.println("BMP280/BME280 Pressure Sensor");
            break;
        case 0x3C:
        case 0x3D:
            Serial.println("SSD1306 OLED Display");
            break;
        case 0x40:
            Serial.println("PCA9685 PWM Driver");
            break;
        default:
            Serial.println("Unknown device");
            break;
    }
}


void setup() {
    Serial.begin(115200);
    while (!Serial);  // Wait for serial monitor to open
    
    Serial.println("\nI2C Scanner Starting...");
    
    // Initialize I2C with custom pins
    Wire.begin(I2C_SDA, I2C_SCL);
    
    // Set I2C clock speed (optional)
    Wire.setClock(100000);  // 100kHz standard mode
    
    Serial.println("Scanning I2C bus...");
    Serial.println("SDA Pin: " + String(I2C_SDA));
    Serial.println("SCL Pin: " + String(I2C_SCL));
    Serial.println("--------------------");
}

void loop() {
    byte error, address;
    int deviceCount = 0;
    
    Serial.println("Scanning for I2C devices...");
    
    // Scan all possible I2C addresses (0x08 to 0x77)
    for (address = 8; address < 120; address++) {
        // Begin transmission to the address
        Wire.beginTransmission(address);
        error = Wire.endTransmission();
        
        if (error == 0) {
            // Device found
            Serial.print("I2C device found at address 0x");
            if (address < 16) Serial.print("0");
            Serial.print(address, HEX);
            Serial.print(" (");
            Serial.print(address);
            Serial.print(") - ");
            
            // Identify common devices
            identifyDevice(address);
            
            deviceCount++;
        }
        else if (error == 4) {
            // Unknown error
            Serial.print("Unknown error at address 0x");
            if (address < 16) Serial.print("0");
            Serial.println(address, HEX);
        }
    }
    
    Serial.println("--------------------");
    if (deviceCount == 0) {
        Serial.println("No I2C devices found!");
        Serial.println("Check connections:");
        Serial.println("- SDA connected to GPIO " + String(I2C_SDA));
        Serial.println("- SCL connected to GPIO " + String(I2C_SCL));
        Serial.println("- Pull-up resistors (4.7kÎ©) on SDA and SCL");
        Serial.println("- Device power supply");
    } else {
        Serial.print("Found ");
        Serial.print(deviceCount);
        Serial.println(" device(s)");
    }
    
    Serial.println("\nNext scan in 5 seconds...\n");
    delay(5000);  // Wait 5 seconds before next scan
}

