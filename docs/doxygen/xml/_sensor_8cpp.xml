<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="_sensor_8cpp" kind="file" language="C++">
    <compoundname>Sensor.cpp</compoundname>
    <includes refid="_sensor_8h" local="yes">Sensor.h</includes>
    <incdepgraph>
      <node id="2">
        <label>Sensor.h</label>
        <link refid="_sensor_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/Sensor.cpp</label>
        <link refid="_sensor_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Adafruit_MAX31865.h</label>
      </node>
      <node id="3">
        <label>Arduino.h</label>
      </node>
      <node id="5">
        <label>DallasTemperature.h</label>
      </node>
      <node id="4">
        <label>OneWire.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
<para>Implementation of temperature sensor abstraction layer. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Claude Code Session 20250720_221011 </para>
</simplesect>
<simplesect kind="date"><para>2025-01-20</para>
</simplesect>
Implements unified sensor interface for DS18B20 and PT1000 temperature sensors with error handling, temperature tracking, and alarm management.</para>
<sect1 id="_time_manager_8cpp_1dependencies">
<title>Dependencies</title><para><itemizedlist>
<listitem><para><ref refid="_sensor_8h" kindref="compound">Sensor.h</ref> for class definition</para>
</listitem><listitem><para>OneWire and DallasTemperature for DS18B20</para>
</listitem><listitem><para>Adafruit_MAX31865 for PT1000 RTD sensors</para>
</listitem></itemizedlist>
</para>
</sect1>
<sect1 id="_time_manager_8cpp_1hardware">
<title>Hardware Requirements</title><para><itemizedlist>
<listitem><para>DS18B20: OneWire digital sensors on GPIO pins</para>
</listitem><listitem><para>PT1000: RTD sensors with MAX31865 on SPI bus </para>
</listitem></itemizedlist>
</para>
</sect1>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_sensor_8h" kindref="compound">Sensor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//SPI<sp/>PINs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>SCK_PIN<sp/><sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>MISO_PIN<sp/><sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>MOSI_PIN<sp/><sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="class_sensor_1a3dc84897044b5f1848fd0f5444235eee" refkind="member"><highlight class="normal"><ref refid="class_sensor_1a3dc84897044b5f1848fd0f5444235eee" kindref="member">Sensor::Sensor</ref>(<ref refid="_sensor_8h_1a213c434cb928c4ca22513e2302632435" kindref="member">SensorType</ref><sp/><ref refid="class_sensor_1a59be498582043f581a78851506f8e322" kindref="member">type</ref>,<sp/>uint8_t<sp/><ref refid="class_sensor_1a75b4ea06bdcd22f6591f24ae3a46983a" kindref="member">address</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String&amp;<sp/><ref refid="class_sensor_1a9cf70c3e41501d89f6f9f48a3e9d1296" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_sensor_1a75b4ea06bdcd22f6591f24ae3a46983a" kindref="member">address</ref>(<ref refid="class_sensor_1a75b4ea06bdcd22f6591f24ae3a46983a" kindref="member">address</ref>),<sp/><ref refid="class_sensor_1a9cf70c3e41501d89f6f9f48a3e9d1296" kindref="member">name</ref>(<ref refid="class_sensor_1a9cf70c3e41501d89f6f9f48a3e9d1296" kindref="member">name</ref>),<sp/><ref refid="class_sensor_1a59be498582043f581a78851506f8e322" kindref="member">type</ref>(<ref refid="class_sensor_1a59be498582043f581a78851506f8e322" kindref="member">type</ref>),</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sensor_1a1ad6234aa9a0d89ce962c61ee0580b0c" kindref="member">currentTemp</ref>(0),<sp/><ref refid="class_sensor_1a70160b5ef0eadb7b131f4993011a6174" kindref="member">minTemp</ref>(32767),<sp/><ref refid="class_sensor_1a0752a16bf3b329064102d1110c8aa22c" kindref="member">maxTemp</ref>(-32768),</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sensor_1a3a695e6c5e1fc511abb6aa0f93f4965c" kindref="member">lowAlarmThreshold</ref>(-40),<sp/><ref refid="class_sensor_1ad3088c793422688847fc7bd0c83e1c7a" kindref="member">highAlarmThreshold</ref>(85),</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sensor_1a4700db8ae10648ce63e9c40097af2bf0" kindref="member">alarmStatus</ref>(0),<sp/><ref refid="class_sensor_1a90c9d7cb2e9a0d1ca02eb0e03a4b8ceb" kindref="member">errorStatus</ref>(0),</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sensor_1ae6e1281c6284fe26cc5617789aa3a3bf" kindref="member">oneWire</ref>(nullptr),<sp/><ref refid="class_sensor_1ab0c028d4df2e4e568075b622965b0a76" kindref="member">dallasTemperature</ref>(nullptr),<sp/><ref refid="class_sensor_1a23b7a05faf6c66d07aed361c4ad8c896" kindref="member">max31865</ref>(nullptr)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sensor_1a59be498582043f581a78851506f8e322" kindref="member">type</ref><sp/>==<sp/><ref refid="_sensor_8h_1a213c434cb928c4ca22513e2302632435aac1bc058b939e1c55e1496c8574f3691" kindref="member">SensorType::DS18B20</ref>)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sensor_1adaacf2cbc3623d86bad4c32496340a74" kindref="member">connection</ref>.ds18b20.oneWirePin<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<ref refid="class_sensor_1adaacf2cbc3623d86bad4c32496340a74" kindref="member">connection</ref>.ds18b20.oneWireAddress,<sp/>0,<sp/>8);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sensor_1adaacf2cbc3623d86bad4c32496340a74" kindref="member">connection</ref>.pt1000.csPin<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sensor_1adaacf2cbc3623d86bad4c32496340a74" kindref="member">connection</ref>.pt1000.maxAddress<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="class_sensor_1aee8c70e7ef05ce65e7ee33686b5d7db2" refkind="member"><highlight class="normal"><ref refid="class_sensor_1aee8c70e7ef05ce65e7ee33686b5d7db2" kindref="member">Sensor::~Sensor</ref>()<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sensor_1ae6e1281c6284fe26cc5617789aa3a3bf" kindref="member">oneWire</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1ae6e1281c6284fe26cc5617789aa3a3bf" kindref="member">oneWire</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sensor_1ae6e1281c6284fe26cc5617789aa3a3bf" kindref="member">oneWire</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sensor_1ab0c028d4df2e4e568075b622965b0a76" kindref="member">dallasTemperature</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1ab0c028d4df2e4e568075b622965b0a76" kindref="member">dallasTemperature</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sensor_1ab0c028d4df2e4e568075b622965b0a76" kindref="member">dallasTemperature</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sensor_1a23b7a05faf6c66d07aed361c4ad8c896" kindref="member">max31865</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1a23b7a05faf6c66d07aed361c4ad8c896" kindref="member">max31865</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sensor_1a23b7a05faf6c66d07aed361c4ad8c896" kindref="member">max31865</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_sensor_1afefa1f627a7d2ab5a1157c271e7f2556" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1afefa1f627a7d2ab5a1157c271e7f2556" kindref="member">Sensor::setupDS18B20</ref>(uint8_t<sp/>pin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>deviceAddress)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sensor_1adaacf2cbc3623d86bad4c32496340a74" kindref="member">connection</ref>.ds18b20.oneWirePin<sp/>=<sp/>pin;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(<ref refid="class_sensor_1adaacf2cbc3623d86bad4c32496340a74" kindref="member">connection</ref>.ds18b20.oneWireAddress,<sp/>deviceAddress,<sp/>8);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="class_sensor_1aef73c8dc894e3695f50b4bece9601750" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1aef73c8dc894e3695f50b4bece9601750" kindref="member">Sensor::setupPT1000</ref>(uint8_t<sp/><ref refid="class_sensor_1ae982d7fa79bdc6e223632c69ca512b34" kindref="member">csPin</ref>,<sp/>uint8_t<sp/><ref refid="class_sensor_1a3f0651eab49ddc023248a11c3937bc23" kindref="member">maxAddress</ref>)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sensor_1adaacf2cbc3623d86bad4c32496340a74" kindref="member">connection</ref>.pt1000.csPin<sp/>=<sp/><ref refid="class_sensor_1ae982d7fa79bdc6e223632c69ca512b34" kindref="member">csPin</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sensor_1adaacf2cbc3623d86bad4c32496340a74" kindref="member">connection</ref>.pt1000.maxAddress<sp/>=<sp/><ref refid="class_sensor_1a3f0651eab49ddc023248a11c3937bc23" kindref="member">maxAddress</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="class_sensor_1a59dd5483b75d9366a0c50ccdd0345dec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1a59dd5483b75d9366a0c50ccdd0345dec" kindref="member">Sensor::initialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sensor_1a59be498582043f581a78851506f8e322" kindref="member">type</ref><sp/>==<sp/><ref refid="_sensor_8h_1a213c434cb928c4ca22513e2302632435aac1bc058b939e1c55e1496c8574f3691" kindref="member">SensorType::DS18B20</ref>)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sensor_1ae6e1281c6284fe26cc5617789aa3a3bf" kindref="member">oneWire</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>OneWire(<ref refid="class_sensor_1adaacf2cbc3623d86bad4c32496340a74" kindref="member">connection</ref>.ds18b20.oneWirePin);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sensor_1ab0c028d4df2e4e568075b622965b0a76" kindref="member">dallasTemperature</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DallasTemperature(<ref refid="class_sensor_1ae6e1281c6284fe26cc5617789aa3a3bf" kindref="member">oneWire</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sensor_1ab0c028d4df2e4e568075b622965b0a76" kindref="member">dallasTemperature</ref>-&gt;begin();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DeviceAddress<sp/>deviceAddress;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(deviceAddress,<sp/><ref refid="class_sensor_1adaacf2cbc3623d86bad4c32496340a74" kindref="member">connection</ref>.ds18b20.oneWireAddress,<sp/>8);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sensor_1ab0c028d4df2e4e568075b622965b0a76" kindref="member">dallasTemperature</ref>-&gt;setResolution(deviceAddress,<sp/>12);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1ab0c028d4df2e4e568075b622965b0a76" kindref="member">dallasTemperature</ref>-&gt;isConnected(deviceAddress);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sensor_1a59be498582043f581a78851506f8e322" kindref="member">type</ref><sp/>==<sp/><ref refid="_sensor_8h_1a213c434cb928c4ca22513e2302632435a481caba3768b84e8b68fb58b04ec595e" kindref="member">SensorType::PT1000</ref>)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sensor_1a23b7a05faf6c66d07aed361c4ad8c896" kindref="member">max31865</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Adafruit_MAX31865(<ref refid="class_sensor_1adaacf2cbc3623d86bad4c32496340a74" kindref="member">connection</ref>.pt1000.csPin);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>begin<sp/>the<sp/>MAX31865</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>beginSuccess<sp/>=<sp/><ref refid="class_sensor_1a23b7a05faf6c66d07aed361c4ad8c896" kindref="member">max31865</ref>-&gt;begin(MAX31865_3WIRE);<sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>for<sp/>your<sp/>wiring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(!beginSuccess)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>errorStatus<sp/>|=<sp/>ERROR_COMMUNICATION;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>Check<sp/>for<sp/>faults<sp/>immediately<sp/>after<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uint8_t<sp/>fault<sp/>=<sp/>max31865-&gt;readFault();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(fault)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>max31865-&gt;clearFault();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>errorStatus<sp/>|=<sp/>ERROR_COMMUNICATION;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>Read<sp/>RTD<sp/>value<sp/>to<sp/>verify<sp/>communication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uint16_t<sp/>rtd<sp/>=<sp/>max31865-&gt;readRTD();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(rtd<sp/>==<sp/>0<sp/>||<sp/>rtd<sp/>==<sp/>0xFFFF)<sp/>{<sp/><sp/>//<sp/>Common<sp/>values<sp/>when<sp/>module<sp/>is<sp/>not<sp/>connected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>errorStatus<sp/>|=<sp/>ERROR_COMMUNICATION;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>Calculate<sp/>resistance<sp/>to<sp/>check<sp/>if<sp/>it&apos;s<sp/>within<sp/>reasonable<sp/>range<sp/>for<sp/>PT1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>float<sp/>ratio<sp/>=<sp/>rtd<sp/>/<sp/>32768.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>float<sp/>resistance<sp/>=<sp/>4300.0<sp/>*<sp/>ratio;<sp/><sp/>//<sp/>Using<sp/>RREF<sp/>of<sp/>4300<sp/>for<sp/>PT1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>PT1000<sp/>should<sp/>be<sp/>roughly<sp/>1000<sp/>ohms<sp/>at<sp/>0°C,<sp/>with<sp/>reasonable<sp/>range<sp/>between<sp/>800-1400<sp/>ohms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>for<sp/>normal<sp/>temperature<sp/>measurements<sp/>(-50°C<sp/>to<sp/>+100°C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(resistance<sp/>&lt;<sp/>800.0<sp/>||<sp/>resistance<sp/>&gt;<sp/>2200.0)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>errorStatus<sp/>|=<sp/>ERROR_DISCONNECTED;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="class_sensor_1a5f3828beedd045bf82b3542ec626bc7b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1a5f3828beedd045bf82b3542ec626bc7b" kindref="member">Sensor::readTemperature</ref>()<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tempC<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sensor_1a90c9d7cb2e9a0d1ca02eb0e03a4b8ceb" kindref="member">errorStatus</ref><sp/>&amp;=<sp/>~(<ref refid="_sensor_8h_1a2414e990a5472bc239f99ae14c9ed66f" kindref="member">ERROR_COMMUNICATION</ref><sp/>|<sp/><ref refid="_sensor_8h_1a5e765138e11b96eed4933eec3611b571" kindref="member">ERROR_OUT_OF_RANGE</ref><sp/>|<sp/><ref refid="_sensor_8h_1ab65c92ee1954ab03e64f69b1706726a8" kindref="member">ERROR_DISCONNECTED</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sensor_1a59be498582043f581a78851506f8e322" kindref="member">type</ref><sp/>==<sp/><ref refid="_sensor_8h_1a213c434cb928c4ca22513e2302632435aac1bc058b939e1c55e1496c8574f3691" kindref="member">SensorType::DS18B20</ref>)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sensor_1ab0c028d4df2e4e568075b622965b0a76" kindref="member">dallasTemperature</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DeviceAddress<sp/>deviceAddress;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(deviceAddress,<sp/><ref refid="class_sensor_1adaacf2cbc3623d86bad4c32496340a74" kindref="member">connection</ref>.ds18b20.oneWireAddress,<sp/>8);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sensor_1ab0c028d4df2e4e568075b622965b0a76" kindref="member">dallasTemperature</ref>-&gt;isConnected(deviceAddress))<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sensor_1ab0c028d4df2e4e568075b622965b0a76" kindref="member">dallasTemperature</ref>-&gt;requestTemperaturesByAddress(deviceAddress);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempC<sp/>=<sp/><ref refid="class_sensor_1ab0c028d4df2e4e568075b622965b0a76" kindref="member">dallasTemperature</ref>-&gt;getTempC(deviceAddress);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tempC<sp/>!=<sp/>DEVICE_DISCONNECTED_C)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sensor_1a90c9d7cb2e9a0d1ca02eb0e03a4b8ceb" kindref="member">errorStatus</ref><sp/>|=<sp/><ref refid="_sensor_8h_1ab65c92ee1954ab03e64f69b1706726a8" kindref="member">ERROR_DISCONNECTED</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sensor_1a90c9d7cb2e9a0d1ca02eb0e03a4b8ceb" kindref="member">errorStatus</ref><sp/>|=<sp/><ref refid="_sensor_8h_1a2414e990a5472bc239f99ae14c9ed66f" kindref="member">ERROR_COMMUNICATION</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sensor_1a59be498582043f581a78851506f8e322" kindref="member">type</ref><sp/>==<sp/><ref refid="_sensor_8h_1a213c434cb928c4ca22513e2302632435a481caba3768b84e8b68fb58b04ec595e" kindref="member">SensorType::PT1000</ref>)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sensor_1a23b7a05faf6c66d07aed361c4ad8c896" kindref="member">max31865</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>fault<sp/>=<sp/><ref refid="class_sensor_1a23b7a05faf6c66d07aed361c4ad8c896" kindref="member">max31865</ref>-&gt;readFault();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(fault)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>if<sp/>(fault<sp/>&amp;<sp/>MAX31865_FAULT_HIGHTHRESH<sp/>||<sp/>fault<sp/>&amp;<sp/>MAX31865_FAULT_LOWTHRESH)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/><sp/>errorStatus<sp/>|=<sp/>ERROR_OUT_OF_RANGE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fault<sp/>&amp;<sp/>(MAX31865_FAULT_REFINLOW<sp/>|<sp/>MAX31865_FAULT_REFINHIGH<sp/>|</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAX31865_FAULT_RTDINLOW<sp/>|<sp/>MAX31865_FAULT_OVUV))<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sensor_1a90c9d7cb2e9a0d1ca02eb0e03a4b8ceb" kindref="member">errorStatus</ref><sp/>|=<sp/><ref refid="_sensor_8h_1a2414e990a5472bc239f99ae14c9ed66f" kindref="member">ERROR_COMMUNICATION</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sensor_1a23b7a05faf6c66d07aed361c4ad8c896" kindref="member">max31865</ref>-&gt;clearFault();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempC<sp/>=<sp/><ref refid="class_sensor_1a23b7a05faf6c66d07aed361c4ad8c896" kindref="member">max31865</ref>-&gt;temperature(1000.0,<sp/>4300.0);<sp/></highlight><highlight class="comment">//<sp/>PT1000:<sp/>1000<sp/>ohm<sp/>at<sp/>0°C,<sp/>adjust<sp/>reference<sp/>as<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(success)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tempC<sp/>&lt;<sp/>-40.0<sp/>||<sp/>tempC<sp/>&gt;<sp/>200.0)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sensor_1a90c9d7cb2e9a0d1ca02eb0e03a4b8ceb" kindref="member">errorStatus</ref><sp/>|=<sp/><ref refid="_sensor_8h_1a5e765138e11b96eed4933eec3611b571" kindref="member">ERROR_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sensor_1a1ad6234aa9a0d89ce962c61ee0580b0c" kindref="member">currentTemp</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int16_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(round(tempC));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sensor_1a1ad6234aa9a0d89ce962c61ee0580b0c" kindref="member">currentTemp</ref><sp/>&lt;<sp/><ref refid="class_sensor_1a70160b5ef0eadb7b131f4993011a6174" kindref="member">minTemp</ref>)<sp/><ref refid="class_sensor_1a70160b5ef0eadb7b131f4993011a6174" kindref="member">minTemp</ref><sp/>=<sp/><ref refid="class_sensor_1a1ad6234aa9a0d89ce962c61ee0580b0c" kindref="member">currentTemp</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sensor_1a1ad6234aa9a0d89ce962c61ee0580b0c" kindref="member">currentTemp</ref><sp/>&gt;<sp/><ref refid="class_sensor_1a0752a16bf3b329064102d1110c8aa22c" kindref="member">maxTemp</ref>)<sp/><ref refid="class_sensor_1a0752a16bf3b329064102d1110c8aa22c" kindref="member">maxTemp</ref><sp/>=<sp/><ref refid="class_sensor_1a1ad6234aa9a0d89ce962c61ee0580b0c" kindref="member">currentTemp</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sensor_1a2f0b7d29f7a924deb465d2462698564d" kindref="member">updateAlarmStatus</ref>();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="class_sensor_1a0f6f095e7cfdfffb2a395dfdae7cfa53" refkind="member"><highlight class="normal"><ref refid="_sensor_8h_1a213c434cb928c4ca22513e2302632435" kindref="member">SensorType</ref><sp/><ref refid="class_sensor_1a0f6f095e7cfdfffb2a395dfdae7cfa53" kindref="member">Sensor::getType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1a59be498582043f581a78851506f8e322" kindref="member">type</ref>;<sp/>}</highlight></codeline>
<codeline lineno="172" refid="class_sensor_1afa9861dabcb4cd9c7a83356873013946" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_sensor_1afa9861dabcb4cd9c7a83356873013946" kindref="member">Sensor::getAddress</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1a75b4ea06bdcd22f6591f24ae3a46983a" kindref="member">address</ref>;<sp/>}</highlight></codeline>
<codeline lineno="173" refid="class_sensor_1a60ec96ed03660b42681c1bcc99007033" refkind="member"><highlight class="normal">String<sp/><ref refid="class_sensor_1a60ec96ed03660b42681c1bcc99007033" kindref="member">Sensor::getName</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1a9cf70c3e41501d89f6f9f48a3e9d1296" kindref="member">name</ref>;<sp/>}</highlight></codeline>
<codeline lineno="174" refid="class_sensor_1a95fe437024716bfdf3703e2c50a0756a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1a95fe437024716bfdf3703e2c50a0756a" kindref="member">Sensor::setName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String&amp;<sp/>newName)<sp/>{<sp/><ref refid="class_sensor_1a9cf70c3e41501d89f6f9f48a3e9d1296" kindref="member">name</ref><sp/>=<sp/>newName;<sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="class_sensor_1a3def93a2aff034f403af576b40b6f3f1" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="class_sensor_1a3def93a2aff034f403af576b40b6f3f1" kindref="member">Sensor::getCurrentTemp</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1a1ad6234aa9a0d89ce962c61ee0580b0c" kindref="member">currentTemp</ref>;<sp/>}</highlight></codeline>
<codeline lineno="177" refid="class_sensor_1a0897378dd7971fded81bf12d433833c5" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="class_sensor_1a0897378dd7971fded81bf12d433833c5" kindref="member">Sensor::getMinTemp</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1a70160b5ef0eadb7b131f4993011a6174" kindref="member">minTemp</ref>;<sp/>}</highlight></codeline>
<codeline lineno="178" refid="class_sensor_1abcaa8954ad75cf20e7c5aa1ef47b28ec" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="class_sensor_1abcaa8954ad75cf20e7c5aa1ef47b28ec" kindref="member">Sensor::getMaxTemp</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1a0752a16bf3b329064102d1110c8aa22c" kindref="member">maxTemp</ref>;<sp/>}</highlight></codeline>
<codeline lineno="179" refid="class_sensor_1aad2114350beb8e278e4b273f62439579" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="class_sensor_1aad2114350beb8e278e4b273f62439579" kindref="member">Sensor::getLowAlarmThreshold</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1a3a695e6c5e1fc511abb6aa0f93f4965c" kindref="member">lowAlarmThreshold</ref>;<sp/>}</highlight></codeline>
<codeline lineno="180" refid="class_sensor_1a8799541c60822f7600cde784aae36039" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="class_sensor_1a8799541c60822f7600cde784aae36039" kindref="member">Sensor::getHighAlarmThreshold</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1ad3088c793422688847fc7bd0c83e1c7a" kindref="member">highAlarmThreshold</ref>;<sp/>}</highlight></codeline>
<codeline lineno="181" refid="class_sensor_1a70c7d2dbd1ad8782933301b367e64d09" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_sensor_1a70c7d2dbd1ad8782933301b367e64d09" kindref="member">Sensor::getAlarmStatus</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1a4700db8ae10648ce63e9c40097af2bf0" kindref="member">alarmStatus</ref>;<sp/>}</highlight></codeline>
<codeline lineno="182" refid="class_sensor_1a72ab978055decc37539815dfbc09f2a1" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_sensor_1a72ab978055decc37539815dfbc09f2a1" kindref="member">Sensor::getErrorStatus</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1a90c9d7cb2e9a0d1ca02eb0e03a4b8ceb" kindref="member">errorStatus</ref>;<sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="class_sensor_1aaa9739e019c01dba6fb55c58a27d9642" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1aaa9739e019c01dba6fb55c58a27d9642" kindref="member">Sensor::setAddress</ref>(uint8_t<sp/>newAddress)<sp/>{<sp/><ref refid="class_sensor_1a75b4ea06bdcd22f6591f24ae3a46983a" kindref="member">address</ref><sp/>=<sp/>newAddress;<sp/>}</highlight></codeline>
<codeline lineno="185" refid="class_sensor_1ae2e32117bfa426768afd692d062a13f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1ae2e32117bfa426768afd692d062a13f0" kindref="member">Sensor::setLowAlarmThreshold</ref>(int16_t<sp/>threshold)<sp/>{<sp/><ref refid="class_sensor_1a3a695e6c5e1fc511abb6aa0f93f4965c" kindref="member">lowAlarmThreshold</ref><sp/>=<sp/>threshold;<sp/><ref refid="class_sensor_1a2f0b7d29f7a924deb465d2462698564d" kindref="member">updateAlarmStatus</ref>();<sp/>}</highlight></codeline>
<codeline lineno="186" refid="class_sensor_1a300550ed551df5688ff101e132c82d3e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1a300550ed551df5688ff101e132c82d3e" kindref="member">Sensor::setHighAlarmThreshold</ref>(int16_t<sp/>threshold)<sp/>{<sp/><ref refid="class_sensor_1ad3088c793422688847fc7bd0c83e1c7a" kindref="member">highAlarmThreshold</ref><sp/>=<sp/>threshold;<sp/><ref refid="class_sensor_1a2f0b7d29f7a924deb465d2462698564d" kindref="member">updateAlarmStatus</ref>();<sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="class_sensor_1aebfce8b65a6bce594e406236bba4a469" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/><ref refid="class_sensor_1aebfce8b65a6bce594e406236bba4a469" kindref="member">Sensor::getDS18B20Address</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sensor_1a59be498582043f581a78851506f8e322" kindref="member">type</ref><sp/>==<sp/><ref refid="_sensor_8h_1a213c434cb928c4ca22513e2302632435aac1bc058b939e1c55e1496c8574f3691" kindref="member">SensorType::DS18B20</ref>)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1adaacf2cbc3623d86bad4c32496340a74" kindref="member">connection</ref>.ds18b20.oneWireAddress;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="class_sensor_1a578bbc9664e2af30cc837301039e5ecb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1a578bbc9664e2af30cc837301039e5ecb" kindref="member">Sensor::resetMinMaxTemp</ref>()<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sensor_1a70160b5ef0eadb7b131f4993011a6174" kindref="member">minTemp</ref><sp/>=<sp/><ref refid="class_sensor_1a1ad6234aa9a0d89ce962c61ee0580b0c" kindref="member">currentTemp</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sensor_1a0752a16bf3b329064102d1110c8aa22c" kindref="member">maxTemp</ref><sp/>=<sp/><ref refid="class_sensor_1a1ad6234aa9a0d89ce962c61ee0580b0c" kindref="member">currentTemp</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="class_sensor_1a2f0b7d29f7a924deb465d2462698564d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1a2f0b7d29f7a924deb465d2462698564d" kindref="member">Sensor::updateAlarmStatus</ref>()<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sensor_1a4700db8ae10648ce63e9c40097af2bf0" kindref="member">alarmStatus</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sensor_1a90c9d7cb2e9a0d1ca02eb0e03a4b8ceb" kindref="member">errorStatus</ref><sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sensor_1a1ad6234aa9a0d89ce962c61ee0580b0c" kindref="member">currentTemp</ref><sp/>&lt;<sp/><ref refid="class_sensor_1a3a695e6c5e1fc511abb6aa0f93f4965c" kindref="member">lowAlarmThreshold</ref>)<sp/><ref refid="class_sensor_1a4700db8ae10648ce63e9c40097af2bf0" kindref="member">alarmStatus</ref><sp/>|=<sp/><ref refid="_sensor_8h_1a23317a6f5a20f7fff89a69642e417b1f" kindref="member">ALARM_LOW_TEMP</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sensor_1a1ad6234aa9a0d89ce962c61ee0580b0c" kindref="member">currentTemp</ref><sp/>&gt;<sp/><ref refid="class_sensor_1ad3088c793422688847fc7bd0c83e1c7a" kindref="member">highAlarmThreshold</ref>)<sp/><ref refid="class_sensor_1a4700db8ae10648ce63e9c40097af2bf0" kindref="member">alarmStatus</ref><sp/>|=<sp/><ref refid="_sensor_8h_1a69ac9fe143e56b941b2e467e700f9f98" kindref="member">ALARM_HIGH_TEMP</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="class_sensor_1a6f57825e90b759ccdb9fe07b3a36953d" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_sensor_1a6f57825e90b759ccdb9fe07b3a36953d" kindref="member">Sensor::getPT1000ChipSelectPin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sensor_1a59be498582043f581a78851506f8e322" kindref="member">type</ref><sp/>==<sp/><ref refid="_sensor_8h_1a213c434cb928c4ca22513e2302632435a481caba3768b84e8b68fb58b04ec595e" kindref="member">SensorType::PT1000</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1adaacf2cbc3623d86bad4c32496340a74" kindref="member">connection</ref>.pt1000.csPin;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="class_sensor_1a9f793cde2918130fbc77dad1aebfe53a" refkind="member"><highlight class="normal">String<sp/><ref refid="class_sensor_1a9f793cde2918130fbc77dad1aebfe53a" kindref="member">Sensor::getDS18B20RomString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sensor_1a59be498582043f581a78851506f8e322" kindref="member">type</ref><sp/>!=<sp/><ref refid="_sensor_8h_1a213c434cb928c4ca22513e2302632435aac1bc058b939e1c55e1496c8574f3691" kindref="member">SensorType::DS18B20</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[17];<sp/></highlight><highlight class="comment">//<sp/>16<sp/>hex<sp/>chars<sp/>+<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>rom<sp/>=<sp/><ref refid="class_sensor_1adaacf2cbc3623d86bad4c32496340a74" kindref="member">connection</ref>.ds18b20.oneWireAddress;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf<sp/>+<sp/>i*2,<sp/></highlight><highlight class="stringliteral">&quot;%02X&quot;</highlight><highlight class="normal">,<sp/>rom[i]);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>String(buf);</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="class_sensor_1a3003106c642cc8a9ec5638ea06052ff4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1a3003106c642cc8a9ec5638ea06052ff4" kindref="member">Sensor::getDS18B20RomArray</ref>(uint8_t<sp/>out[8])</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sensor_1a59be498582043f581a78851506f8e322" kindref="member">type</ref><sp/>==<sp/><ref refid="_sensor_8h_1a213c434cb928c4ca22513e2302632435aac1bc058b939e1c55e1496c8574f3691" kindref="member">SensorType::DS18B20</ref>)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(out,<sp/><ref refid="class_sensor_1adaacf2cbc3623d86bad4c32496340a74" kindref="member">connection</ref>.ds18b20.oneWireAddress,<sp/>8);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/Sensor.cpp"/>
  </compounddef>
</doxygen>
