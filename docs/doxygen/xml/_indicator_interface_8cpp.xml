<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="_indicator_interface_8cpp" kind="file" language="C++">
    <compoundname>IndicatorInterface.cpp</compoundname>
    <includes refid="_indicator_interface_8h" local="yes">IndicatorInterface.h</includes>
    <incdepgraph>
      <node id="2">
        <label>IndicatorInterface.h</label>
        <link refid="_indicator_interface_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>LoggerManager.h</label>
        <link refid="_logger_manager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>TimeManager.h</label>
        <link refid="_time_manager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/IndicatorInterface.cpp</label>
        <link refid="_indicator_interface_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Arduino.h</label>
      </node>
      <node id="18">
        <label>ArduinoJson.h</label>
      </node>
      <node id="11">
        <label>FS.h</label>
      </node>
      <node id="16">
        <label>NTPClient.h</label>
      </node>
      <node id="7">
        <label>PCF8575.h</label>
      </node>
      <node id="15">
        <label>RTClib.h</label>
      </node>
      <node id="12">
        <label>SD.h</label>
      </node>
      <node id="8">
        <label>U8g2lib.h</label>
      </node>
      <node id="14">
        <label>WiFi.h</label>
      </node>
      <node id="17">
        <label>WiFiUdp.h</label>
      </node>
      <node id="4">
        <label>Wire.h</label>
      </node>
      <node id="5">
        <label>map</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
<para>Implementation of user interface with OLED display and input handling. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Claude Code Session 20250720_221011 </para>
</simplesect>
<simplesect kind="date"><para>2025-01-20</para>
</simplesect>
Implements <ref refid="class_indicator_interface" kindref="compound">IndicatorInterface</ref> class for managing OLED display output, button/encoder input through PCF8575 I/O expander, and LED indicators.</para>
<sect1 id="_time_manager_8cpp_1dependencies">
<title>Dependencies</title><para><itemizedlist>
<listitem><para><ref refid="_indicator_interface_8h" kindref="compound">IndicatorInterface.h</ref> for class definition</para>
</listitem><listitem><para>U8g2lib for OLED display control</para>
</listitem><listitem><para>PCF8575 library for I/O expansion</para>
</listitem><listitem><para>Wire library for I2C communication</para>
</listitem></itemizedlist>
</para>
</sect1>
<sect1 id="_time_manager_8cpp_1hardware">
<title>Hardware Requirements</title><para><itemizedlist>
<listitem><para>SSD1306 OLED display (128x64)</para>
</listitem><listitem><para>PCF8575 I/O expander for buttons/encoders</para>
</listitem><listitem><para>Optional interrupt pin for input detection</para>
</listitem><listitem><para>LEDs connected to PCF8575 outputs </para>
</listitem></itemizedlist>
</para>
</sect1>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_indicator_interface_8h" kindref="compound">IndicatorInterface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Static<sp/>instance<sp/>for<sp/>interrupt<sp/>handling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><ref refid="class_indicator_interface" kindref="compound">IndicatorInterface</ref>*<sp/><ref refid="class_indicator_interface_1adefd227476c9f85bc7fb1302c99fb60b" kindref="member">IndicatorInterface::_instance</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" refkind="member"><highlight class="normal"><ref refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" kindref="member">IndicatorInterface::IndicatorInterface</ref>(TwoWire&amp;<sp/>i2cBus,<sp/>uint8_t<sp/>pcf_i2cAddress,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intPin)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_indicator_interface_1a2d448f416c41a0faa436e951764133ae" kindref="member">_i2cBus</ref>(&amp;i2cBus),<sp/><ref refid="class_indicator_interface_1aa53e601aa0ea14bafc2260097067a341" kindref="member">_pcf_i2cAddress</ref>(pcf_i2cAddress),<sp/><ref refid="class_indicator_interface_1ac99448e370702160d9a0d164fcaa6fc9" kindref="member">_intPin</ref>(intPin),<sp/><ref refid="class_indicator_interface_1a90bbc0d232433baeb2cc326a86070570" kindref="member">_pcf8575</ref>(pcf_i2cAddress),</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1aa86f0bf7ac0aa21e3dd58e9f22a9d006" kindref="member">_directionMask</ref>(0x0000),<sp/><ref refid="class_indicator_interface_1aa55179bd0567655980bef4f29df366c7" kindref="member">_modeMask</ref>(0x0000),<sp/><ref refid="class_indicator_interface_1a9cebce08d61558a1c8f60bfd558ea656" kindref="member">_currentState</ref>(0xFFFF),<sp/><ref refid="class_indicator_interface_1ab7a2790dc55140d67ca7280ea3625002" kindref="member">_lastState</ref>(0xFFFF),</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a219fe74846bda45250104f2d60e90d8a" kindref="member">_lastReadTime</ref>(0),<sp/><ref refid="class_indicator_interface_1a7f534e3c6ff085592acf3cc2b047b859" kindref="member">_pollInterval</ref>(50),<sp/><ref refid="class_indicator_interface_1adac6de445ff7c1d1bc1afa660849c272" kindref="member">_interruptFlag</ref>(false),<sp/><ref refid="class_indicator_interface_1a93e019715a500012887e2bfc589c44b4" kindref="member">_useInterrupts</ref>(false),</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a7a520f568f2ce58dd2692b9e7a217d21" kindref="member">_interruptCallback</ref>(nullptr),</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1ad22a15d0f7561db46969879a10aa1de5" kindref="member">_oledSleepDelay</ref>(30000),<sp/><ref refid="class_indicator_interface_1ab74bae75e78806a6eb4df3ad364321cd" kindref="member">_oledLines</ref>(3),<sp/><ref refid="class_indicator_interface_1afc6b2600d29f5d85758fd75cae83b0b9" kindref="member">_textBufferSize</ref>(0),<sp/><ref refid="class_indicator_interface_1a942bea540c40919390bc25816cc5b064" kindref="member">_oledOn</ref>(true),</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1ab944524710a5026f7f20d62d44a2dee7" kindref="member">_oledBlink</ref>(false),<sp/><ref refid="class_indicator_interface_1aa85df0334d9959edc154bed17747ae04" kindref="member">_blinkTimeOn</ref>(500),<sp/><ref refid="class_indicator_interface_1a3080269e210288582ea05cf63afd16d5" kindref="member">_blinkTimeOff</ref>(500),<sp/><ref refid="class_indicator_interface_1a5026d82e76d2b3efd1eab90878803e8d" kindref="member">_lastBlinkTime</ref>(0),</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a5b059b24e3fa66de2165fb17e9026fd7" kindref="member">_blinkState</ref>(true),<sp/><ref refid="class_indicator_interface_1a608486f8f9a8373d4363b753d61b8968" kindref="member">_lastActivityTime</ref>(0),<sp/><ref refid="class_indicator_interface_1a36e848846a6ca0327c1f0d3f0a8e80ed" kindref="member">_oledSleeping</ref>(false),</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a4a32b171da54c67284aebede765d976d" kindref="member">_lastScrollTime</ref>(0),<sp/><ref refid="class_indicator_interface_1a247d77090e8e2bb0db34c401c89cb002" kindref="member">_scrollDelay</ref>(200),<sp/><ref refid="class_indicator_interface_1a12aa1363cd7159475c7ca7b145b688cd" kindref="member">_charWidth</ref>(6),<sp/><ref refid="class_indicator_interface_1aa0218f414dcc1be0b62c29e7d39b985d" kindref="member">_lineHeight</ref>(12),</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a54182aa1c8eb74b781bea42002efb18e" kindref="member">_maxCharsPerLine</ref>(21),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1aca206ae7f20a60f0fd4661cebc9c113f" kindref="member">_savedTextBufferSize</ref>(0),<sp/><ref refid="class_indicator_interface_1a4017512513ab2ada6ec2791d481708fb" kindref="member">_savedOledLines</ref>(3),<sp/><ref refid="class_indicator_interface_1a3e32b13b3477abe772192591a20a907e" kindref="member">_isBlinkingOK</ref>(false),<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a603d635417e1a1c3ed705296051ac32c" kindref="member">_isBlinkingCross</ref>(false),<sp/><ref refid="class_indicator_interface_1a13c8569b739cf6e99de0bd3ad7c20801" kindref="member">_blinkDelayTime</ref>(500),<sp/><ref refid="class_indicator_interface_1af2d0c2c932ac0b9ebe7e6266b63a218b" kindref="member">_lastBlinkToggle</ref>(0),<sp/><ref refid="class_indicator_interface_1a5b4a1c66db5909b0eeef1016287f8a75" kindref="member">_blinkShowSpecial</ref>(true)<sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>static<sp/>instance<sp/>for<sp/>interrupt<sp/>handling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1adefd227476c9f85bc7fb1302c99fb60b" kindref="member">_instance</ref><sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>interrupt<sp/>usage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a93e019715a500012887e2bfc589c44b4" kindref="member">_useInterrupts</ref><sp/>=<sp/>(intPin<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>scroll<sp/>offsets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1ae2a7330b015b9da1a2c151821756a4d6" kindref="member">_scrollOffset</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">U8G2_SH1106_128X64_NONAME_F_HW_I2C<sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">IndicatorInterface::u8g2</ref>(U8G2_R0,<sp/></highlight><highlight class="comment">/*<sp/>reset=*/</highlight><highlight class="normal"><sp/>U8X8_PIN_NONE);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="class_indicator_interface_1aa39afb334632d4c84a44086985c7274b" refkind="member"><highlight class="normal"><ref refid="class_indicator_interface_1aa39afb334632d4c84a44086985c7274b" kindref="member">IndicatorInterface::~IndicatorInterface</ref>()<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_indicator_interface_1a93e019715a500012887e2bfc589c44b4" kindref="member">_useInterrupts</ref><sp/>&amp;&amp;<sp/><ref refid="class_indicator_interface_1ac99448e370702160d9a0d164fcaa6fc9" kindref="member">_intPin</ref><sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detachInterrupt(digitalPinToInterrupt(<ref refid="class_indicator_interface_1ac99448e370702160d9a0d164fcaa6fc9" kindref="member">_intPin</ref>));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1adefd227476c9f85bc7fb1302c99fb60b" kindref="member">_instance</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="class_indicator_interface_1a6083d92cd6b29de3ceb7a9619b9cb03b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a6083d92cd6b29de3ceb7a9619b9cb03b" kindref="member">IndicatorInterface::begin</ref>()<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>I2C<sp/>if<sp/>not<sp/>already<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_indicator_interface_1a2d448f416c41a0faa436e951764133ae" kindref="member">_i2cBus</ref>)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>PCF8575</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_indicator_interface_1a90bbc0d232433baeb2cc326a86070570" kindref="member">_pcf8575</ref>.begin())<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>interrupt<sp/>pin<sp/>if<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_indicator_interface_1a93e019715a500012887e2bfc589c44b4" kindref="member">_useInterrupts</ref>)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a2c93b45764662f0db2348fd0fa9635db" kindref="member">_configureInterruptPin</ref>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>all<sp/>pins<sp/>as<sp/>inputs<sp/>(HIGH<sp/>state)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a90bbc0d232433baeb2cc326a86070570" kindref="member">_pcf8575</ref>.write16(0xFFFF);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(100);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a55da41c64cf3538a8bbb5252dd38b885" kindref="member">_clearInterrupt</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>initial<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a9cebce08d61558a1c8f60bfd558ea656" kindref="member">_currentState</ref><sp/>=<sp/><ref refid="class_indicator_interface_1aad7f389062d31610e8b0d01e6c75413e" kindref="member">_readPCF</ref>();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1ab7a2790dc55140d67ca7280ea3625002" kindref="member">_lastState</ref><sp/>=<sp/><ref refid="class_indicator_interface_1a9cebce08d61558a1c8f60bfd558ea656" kindref="member">_currentState</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a219fe74846bda45250104f2d60e90d8a" kindref="member">_lastReadTime</ref><sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//OLED<sp/>INIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.begin();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a57958896691800d0526ad7941e305136" kindref="member">_initOLED</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="class_indicator_interface_1a2c93b45764662f0db2348fd0fa9635db" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a2c93b45764662f0db2348fd0fa9635db" kindref="member">IndicatorInterface::_configureInterruptPin</ref>()<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_indicator_interface_1ac99448e370702160d9a0d164fcaa6fc9" kindref="member">_intPin</ref><sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>pin<sp/>based<sp/>on<sp/>ESP32<sp/>capabilities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_indicator_interface_1ac99448e370702160d9a0d164fcaa6fc9" kindref="member">_intPin</ref><sp/>==<sp/>34<sp/>||<sp/><ref refid="class_indicator_interface_1ac99448e370702160d9a0d164fcaa6fc9" kindref="member">_intPin</ref><sp/>==<sp/>35<sp/>||<sp/><ref refid="class_indicator_interface_1ac99448e370702160d9a0d164fcaa6fc9" kindref="member">_intPin</ref><sp/>==<sp/>36<sp/>||<sp/><ref refid="class_indicator_interface_1ac99448e370702160d9a0d164fcaa6fc9" kindref="member">_intPin</ref><sp/>==<sp/>39)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input-only<sp/>pins<sp/>without<sp/>internal<sp/>pull-up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(<ref refid="class_indicator_interface_1ac99448e370702160d9a0d164fcaa6fc9" kindref="member">_intPin</ref>,<sp/>INPUT);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>External<sp/>pull-up<sp/>resistor<sp/>(4.7kΩ)<sp/>required!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Regular<sp/>GPIO<sp/>pins<sp/>with<sp/>internal<sp/>pull-up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(<ref refid="class_indicator_interface_1ac99448e370702160d9a0d164fcaa6fc9" kindref="member">_intPin</ref>,<sp/>INPUT_PULLUP);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Attach<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>attachInterrupt(digitalPinToInterrupt(<ref refid="class_indicator_interface_1ac99448e370702160d9a0d164fcaa6fc9" kindref="member">_intPin</ref>),<sp/><ref refid="class_indicator_interface_1ad4fddb918d5f80046ab61a70fbc9eed2" kindref="member">_staticInterruptHandler</ref>,<sp/>FALLING);</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="class_indicator_interface_1aac59d81d86b39af42b24afc4378736f9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1aac59d81d86b39af42b24afc4378736f9" kindref="member">IndicatorInterface::setDirection</ref>(uint16_t<sp/>directionMask)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1aa86f0bf7ac0aa21e3dd58e9f22a9d006" kindref="member">_directionMask</ref><sp/>=<sp/>directionMask;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>PCF8575<sp/>state<sp/>to<sp/>reflect<sp/>direction<sp/>changes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>newState<sp/>=<sp/><ref refid="class_indicator_interface_1a9cebce08d61558a1c8f60bfd558ea656" kindref="member">_currentState</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>input<sp/>pins<sp/>HIGH<sp/>(input<sp/>mode<sp/>for<sp/>PCF8575)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>16;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_indicator_interface_1a0a785a20dd66dbe0077d60e779930140" kindref="member">isOutput</ref>(i))<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newState<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>i);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a850e37bb28d58c3acad37496fa101e64" kindref="member">_writePCF</ref>(newState);</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="class_indicator_interface_1a427021193bee0fcb775b4975ddd5fa54" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a427021193bee0fcb775b4975ddd5fa54" kindref="member">IndicatorInterface::setMode</ref>(uint16_t<sp/>modeMask)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1aa55179bd0567655980bef4f29df366c7" kindref="member">_modeMask</ref><sp/>=<sp/>modeMask;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="class_indicator_interface_1a5d7c083ac206b53e5530709cc6d1df81" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a5d7c083ac206b53e5530709cc6d1df81" kindref="member">IndicatorInterface::setPortNames</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>uint8_t&gt;&amp;<sp/>portNames)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a412495eaf75665fa714b37fc36a3b82d" kindref="member">_portNames</ref><sp/>=<sp/>portNames;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>reverse<sp/>mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a14a57c25bda0a46008b2184fa04517ac" kindref="member">_portNumbers</ref>.clear();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>pair<sp/>:<sp/><ref refid="class_indicator_interface_1a412495eaf75665fa714b37fc36a3b82d" kindref="member">_portNames</ref>)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a14a57c25bda0a46008b2184fa04517ac" kindref="member">_portNumbers</ref>[pair.second]<sp/>=<sp/>pair.first;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="class_indicator_interface_1a37cacef74b1515a3401941d9559eb828" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a37cacef74b1515a3401941d9559eb828" kindref="member">IndicatorInterface::setPortName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/>uint8_t<sp/>portNumber)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(portNumber<sp/>&gt;<sp/>15)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a412495eaf75665fa714b37fc36a3b82d" kindref="member">_portNames</ref>[name]<sp/>=<sp/>portNumber;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a14a57c25bda0a46008b2184fa04517ac" kindref="member">_portNumbers</ref>[portNumber]<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="class_indicator_interface_1a89a41cb1580141ed65c07ced6692322e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a89a41cb1580141ed65c07ced6692322e" kindref="member">IndicatorInterface::writePort</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>portName,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>state)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_indicator_interface_1a412495eaf75665fa714b37fc36a3b82d" kindref="member">_portNames</ref>.find(portName);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/><ref refid="class_indicator_interface_1a412495eaf75665fa714b37fc36a3b82d" kindref="member">_portNames</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a89a41cb1580141ed65c07ced6692322e" kindref="member">writePort</ref>(it-&gt;second,<sp/>state);</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="class_indicator_interface_1a6b01cb93befc42d644388756ff986f6e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a89a41cb1580141ed65c07ced6692322e" kindref="member">IndicatorInterface::writePort</ref>(uint8_t<sp/>portNumber,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>state)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(portNumber<sp/>&gt;<sp/>15<sp/>||<sp/>!<ref refid="class_indicator_interface_1a0a785a20dd66dbe0077d60e779930140" kindref="member">isOutput</ref>(portNumber))<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>mode<sp/>logic<sp/>(inversion<sp/>if<sp/>needed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>actualState<sp/>=<sp/><ref refid="class_indicator_interface_1a79a3f596138d02404e732cc354b6e78b" kindref="member">_applyModeLogic</ref>(portNumber,<sp/>state);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>current<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>newState<sp/>=<sp/><ref refid="class_indicator_interface_1a9cebce08d61558a1c8f60bfd558ea656" kindref="member">_currentState</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Always<sp/>keep<sp/>input<sp/>pins<sp/>HIGH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>16;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_indicator_interface_1a0a785a20dd66dbe0077d60e779930140" kindref="member">isOutput</ref>(i))<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newState<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>i);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>specific<sp/>output<sp/>pin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actualState)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newState<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>portNumber);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newState<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>portNumber);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a850e37bb28d58c3acad37496fa101e64" kindref="member">_writePCF</ref>(newState);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="class_indicator_interface_1afb68095f494956d24c4013a048b083bf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1afb68095f494956d24c4013a048b083bf" kindref="member">IndicatorInterface::writePorts</ref>(uint16_t<sp/>portMask)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>newState<sp/>=<sp/><ref refid="class_indicator_interface_1a9cebce08d61558a1c8f60bfd558ea656" kindref="member">_currentState</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>direction<sp/>mask<sp/>-<sp/>only<sp/>write<sp/>to<sp/>outputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>16;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_indicator_interface_1a0a785a20dd66dbe0077d60e779930140" kindref="member">isOutput</ref>(i))<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>state<sp/>=<sp/>(portMask<sp/>&gt;&gt;<sp/>i)<sp/>&amp;<sp/>0x01;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>actualState<sp/>=<sp/><ref refid="class_indicator_interface_1a79a3f596138d02404e732cc354b6e78b" kindref="member">_applyModeLogic</ref>(i,<sp/>state);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actualState)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newState<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>i);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newState<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>i);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>input<sp/>pins<sp/>HIGH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newState<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>i);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a850e37bb28d58c3acad37496fa101e64" kindref="member">_writePCF</ref>(newState);</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="class_indicator_interface_1a52dd1fa732e288e344fe017f100d6c0d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a52dd1fa732e288e344fe017f100d6c0d" kindref="member">IndicatorInterface::setAllOutputs</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>state)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>newState<sp/>=<sp/><ref refid="class_indicator_interface_1a9cebce08d61558a1c8f60bfd558ea656" kindref="member">_currentState</ref>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>16;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_indicator_interface_1a0a785a20dd66dbe0077d60e779930140" kindref="member">isOutput</ref>(i))<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>actualState<sp/>=<sp/><ref refid="class_indicator_interface_1a79a3f596138d02404e732cc354b6e78b" kindref="member">_applyModeLogic</ref>(i,<sp/>state);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actualState)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newState<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>i);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newState<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>i);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>input<sp/>pins<sp/>HIGH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newState<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>i);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a850e37bb28d58c3acad37496fa101e64" kindref="member">_writePCF</ref>(newState);</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="class_indicator_interface_1ada8f967d6d074b194ab4876b10869357" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1ada8f967d6d074b194ab4876b10869357" kindref="member">IndicatorInterface::setAllOutputsHigh</ref>()<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a52dd1fa732e288e344fe017f100d6c0d" kindref="member">setAllOutputs</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="class_indicator_interface_1a7da1cedbcb4ab157e483afcd02f35066" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a7da1cedbcb4ab157e483afcd02f35066" kindref="member">IndicatorInterface::setAllOutputsLow</ref>()<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a52dd1fa732e288e344fe017f100d6c0d" kindref="member">setAllOutputs</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="class_indicator_interface_1a6e69fba966a59153449facfac1e04057" refkind="member"><highlight class="normal">uint16_t<sp/><ref refid="class_indicator_interface_1a6e69fba966a59153449facfac1e04057" kindref="member">IndicatorInterface::getCurrentState</ref>()<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_indicator_interface_1a93e019715a500012887e2bfc589c44b4" kindref="member">_useInterrupts</ref>)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>interrupt<sp/>mode,<sp/>state<sp/>is<sp/>updated<sp/>automatically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a9cebce08d61558a1c8f60bfd558ea656" kindref="member">_currentState</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>polling<sp/>mode,<sp/>read<sp/>current<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(millis()<sp/>-<sp/><ref refid="class_indicator_interface_1a219fe74846bda45250104f2d60e90d8a" kindref="member">_lastReadTime</ref><sp/>&gt;=<sp/><ref refid="class_indicator_interface_1a7f534e3c6ff085592acf3cc2b047b859" kindref="member">_pollInterval</ref>)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1aea37934542bbe7b6c50941dff4646fef" kindref="member">_updateState</ref>();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a9cebce08d61558a1c8f60bfd558ea656" kindref="member">_currentState</ref>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="class_indicator_interface_1ae2b56d143ce0f191549656e8a95335cc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1ae2b56d143ce0f191549656e8a95335cc" kindref="member">IndicatorInterface::readPort</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>portName)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_indicator_interface_1a412495eaf75665fa714b37fc36a3b82d" kindref="member">_portNames</ref>.find(portName);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/><ref refid="class_indicator_interface_1a412495eaf75665fa714b37fc36a3b82d" kindref="member">_portNames</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1ae2b56d143ce0f191549656e8a95335cc" kindref="member">readPort</ref>(it-&gt;second);</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="class_indicator_interface_1a9e7d2c4cadd548e3fe2a16e41f8ae8d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1ae2b56d143ce0f191549656e8a95335cc" kindref="member">IndicatorInterface::readPort</ref>(uint8_t<sp/>portNumber)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(portNumber<sp/>&gt;<sp/>15)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>currentState<sp/>=<sp/><ref refid="class_indicator_interface_1a6e69fba966a59153449facfac1e04057" kindref="member">getCurrentState</ref>();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rawState<sp/>=<sp/>(currentState<sp/>&gt;&gt;<sp/>portNumber)<sp/>&amp;<sp/>0x01;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>mode<sp/>logic<sp/>(reverse<sp/>inversion<sp/>for<sp/>reading)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a8571bc4adfb0efb4f230b8c9d1b6bda7" kindref="member">_reverseModeLogic</ref>(portNumber,<sp/>rawState);</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="class_indicator_interface_1a0a785a20dd66dbe0077d60e779930140" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a0a785a20dd66dbe0077d60e779930140" kindref="member">IndicatorInterface::isOutput</ref>(uint8_t<sp/>portNumber)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_indicator_interface_1aa86f0bf7ac0aa21e3dd58e9f22a9d006" kindref="member">_directionMask</ref><sp/>&gt;&gt;<sp/>portNumber)<sp/>&amp;<sp/>0x01;</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="class_indicator_interface_1a962c3af9c6eb2c1af86ae52630249563" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a962c3af9c6eb2c1af86ae52630249563" kindref="member">IndicatorInterface::isInput</ref>(uint8_t<sp/>portNumber)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="class_indicator_interface_1a0a785a20dd66dbe0077d60e779930140" kindref="member">isOutput</ref>(portNumber);</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="class_indicator_interface_1a3b900f1de29de5489f19b94b27f4b5c1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a3b900f1de29de5489f19b94b27f4b5c1" kindref="member">IndicatorInterface::isInverted</ref>(uint8_t<sp/>portNumber)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_indicator_interface_1aa55179bd0567655980bef4f29df366c7" kindref="member">_modeMask</ref><sp/>&gt;&gt;<sp/>portNumber)<sp/>&amp;<sp/>0x01;</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="class_indicator_interface_1a72e0284ed13aa7d2a22fe26ce90c0e3f" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_indicator_interface_1a72e0284ed13aa7d2a22fe26ce90c0e3f" kindref="member">IndicatorInterface::getPortNumber</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>portName)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_indicator_interface_1a412495eaf75665fa714b37fc36a3b82d" kindref="member">_portNames</ref>.find(portName);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_indicator_interface_1a412495eaf75665fa714b37fc36a3b82d" kindref="member">_portNames</ref>.end())<sp/>?<sp/>it-&gt;second<sp/>:<sp/>255;</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="class_indicator_interface_1a657f720c3bab755d0864436241c847ad" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_indicator_interface_1a657f720c3bab755d0864436241c847ad" kindref="member">IndicatorInterface::getPortName</ref>(uint8_t<sp/>portNumber)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_indicator_interface_1a14a57c25bda0a46008b2184fa04517ac" kindref="member">_portNumbers</ref>.find(portNumber);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_indicator_interface_1a14a57c25bda0a46008b2184fa04517ac" kindref="member">_portNumbers</ref>.end())<sp/>?<sp/>it-&gt;second<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>IndicatorInterface::handleInterrupt()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if<sp/>(_interruptFlag)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_interruptFlag<sp/>=<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_updateState();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="class_indicator_interface_1a49ab6e47d490a3367acc819bf6116d9b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a49ab6e47d490a3367acc819bf6116d9b" kindref="member">IndicatorInterface::setInterruptCallback</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*callback)(uint16_t<sp/>currentState,<sp/>uint16_t<sp/>changedPins))<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a7a520f568f2ce58dd2692b9e7a217d21" kindref="member">_interruptCallback</ref><sp/>=<sp/>callback;</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="class_indicator_interface_1a21ce0e3bc0531d92f815059890c66c4c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a21ce0e3bc0531d92f815059890c66c4c" kindref="member">IndicatorInterface::printPortStates</ref>()<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>state<sp/>=<sp/><ref refid="class_indicator_interface_1a6e69fba966a59153449facfac1e04057" kindref="member">getCurrentState</ref>();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;===<sp/>Port<sp/>States<sp/>===&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;Raw<sp/>state:<sp/>0x&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(state,<sp/>HEX);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>15;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rawState<sp/>=<sp/>(state<sp/>&gt;&gt;<sp/>i)<sp/>&amp;<sp/>0x01;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>logicalState<sp/>=<sp/><ref refid="class_indicator_interface_1a8571bc4adfb0efb4f230b8c9d1b6bda7" kindref="member">_reverseModeLogic</ref>(i,<sp/>rawState);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;P&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(i);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(rawState<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;HIGH&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;LOW&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(<ref refid="class_indicator_interface_1a0a785a20dd66dbe0077d60e779930140" kindref="member">isOutput</ref>(i)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;OUT&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;IN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_indicator_interface_1a3b900f1de29de5489f19b94b27f4b5c1" kindref="member">isInverted</ref>(i))<sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;,INV&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;)<sp/>=<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(logicalState<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;TRUE&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;FALSE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/><ref refid="class_indicator_interface_1a657f720c3bab755d0864436241c847ad" kindref="member">getPortName</ref>(i);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!name.empty())<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;<sp/>[&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(name.c_str());</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="class_indicator_interface_1a6133988d818d830ad9bc5c902c63ec29" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a6133988d818d830ad9bc5c902c63ec29" kindref="member">IndicatorInterface::printConfiguration</ref>()<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;===<sp/>Configuration<sp/>===&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;I2C<sp/>Address:<sp/>0x&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(<ref refid="class_indicator_interface_1aa53e601aa0ea14bafc2260097067a341" kindref="member">_pcf_i2cAddress</ref>,<sp/>HEX);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;INT<sp/>Pin:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(<ref refid="class_indicator_interface_1ac99448e370702160d9a0d164fcaa6fc9" kindref="member">_intPin</ref>);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;Use<sp/>Interrupts:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(<ref refid="class_indicator_interface_1a93e019715a500012887e2bfc589c44b4" kindref="member">_useInterrupts</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;YES&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;NO&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;Direction<sp/>Mask:<sp/>0x&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(<ref refid="class_indicator_interface_1aa86f0bf7ac0aa21e3dd58e9f22a9d006" kindref="member">_directionMask</ref>,<sp/>HEX);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;Mode<sp/>Mask:<sp/>0x&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(<ref refid="class_indicator_interface_1aa55179bd0567655980bef4f29df366c7" kindref="member">_modeMask</ref>,<sp/>HEX);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;Port<sp/>Names:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>pair<sp/>:<sp/><ref refid="class_indicator_interface_1a412495eaf75665fa714b37fc36a3b82d" kindref="member">_portNames</ref>)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(pair.first.c_str());</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>P&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(pair.second);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Private<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359" refid="class_indicator_interface_1aea37934542bbe7b6c50941dff4646fef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1aea37934542bbe7b6c50941dff4646fef" kindref="member">IndicatorInterface::_updateState</ref>()<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>newState<sp/>=<sp/><ref refid="class_indicator_interface_1aad7f389062d31610e8b0d01e6c75413e" kindref="member">_readPCF</ref>();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>changedPins<sp/>=<sp/><ref refid="class_indicator_interface_1a9cebce08d61558a1c8f60bfd558ea656" kindref="member">_currentState</ref><sp/>^<sp/>newState;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1ab7a2790dc55140d67ca7280ea3625002" kindref="member">_lastState</ref><sp/>=<sp/><ref refid="class_indicator_interface_1a9cebce08d61558a1c8f60bfd558ea656" kindref="member">_currentState</ref>;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a9cebce08d61558a1c8f60bfd558ea656" kindref="member">_currentState</ref><sp/>=<sp/>newState;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a219fe74846bda45250104f2d60e90d8a" kindref="member">_lastReadTime</ref><sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>interrupt<sp/>callback<sp/>if<sp/>pins<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(changedPins<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/><ref refid="class_indicator_interface_1a7a520f568f2ce58dd2692b9e7a217d21" kindref="member">_interruptCallback</ref>)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a7a520f568f2ce58dd2692b9e7a217d21" kindref="member">_interruptCallback</ref>(<ref refid="class_indicator_interface_1a9cebce08d61558a1c8f60bfd558ea656" kindref="member">_currentState</ref>,<sp/>changedPins);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="class_indicator_interface_1a55da41c64cf3538a8bbb5252dd38b885" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a55da41c64cf3538a8bbb5252dd38b885" kindref="member">IndicatorInterface::_clearInterrupt</ref>()<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a90bbc0d232433baeb2cc326a86070570" kindref="member">_pcf8575</ref>.read16();</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(1);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a90bbc0d232433baeb2cc326a86070570" kindref="member">_pcf8575</ref>.read16();</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="class_indicator_interface_1aad7f389062d31610e8b0d01e6c75413e" refkind="member"><highlight class="normal">uint16_t<sp/><ref refid="class_indicator_interface_1aad7f389062d31610e8b0d01e6c75413e" kindref="member">IndicatorInterface::_readPCF</ref>()<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a90bbc0d232433baeb2cc326a86070570" kindref="member">_pcf8575</ref>.read16();</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="class_indicator_interface_1a850e37bb28d58c3acad37496fa101e64" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a850e37bb28d58c3acad37496fa101e64" kindref="member">IndicatorInterface::_writePCF</ref>(uint16_t<sp/>state)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a90bbc0d232433baeb2cc326a86070570" kindref="member">_pcf8575</ref>.write16(state);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(5);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a55da41c64cf3538a8bbb5252dd38b885" kindref="member">_clearInterrupt</ref>();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a9cebce08d61558a1c8f60bfd558ea656" kindref="member">_currentState</ref><sp/>=<sp/>state;</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="class_indicator_interface_1a79a3f596138d02404e732cc354b6e78b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a79a3f596138d02404e732cc354b6e78b" kindref="member">IndicatorInterface::_applyModeLogic</ref>(uint8_t<sp/>portNumber,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>state)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fixed:<sp/>Normal<sp/>mode<sp/>=<sp/>no<sp/>inversion,<sp/>Inverted<sp/>mode<sp/>=<sp/>invert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a3b900f1de29de5489f19b94b27f4b5c1" kindref="member">isInverted</ref>(portNumber)<sp/>?<sp/>!state<sp/>:<sp/>state;</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="class_indicator_interface_1a8571bc4adfb0efb4f230b8c9d1b6bda7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a8571bc4adfb0efb4f230b8c9d1b6bda7" kindref="member">IndicatorInterface::_reverseModeLogic</ref>(uint8_t<sp/>portNumber,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>state)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fixed:<sp/>For<sp/>reading,<sp/>apply<sp/>same<sp/>logic<sp/>as<sp/>writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a3b900f1de29de5489f19b94b27f4b5c1" kindref="member">isInverted</ref>(portNumber)<sp/>?<sp/>!state<sp/>:<sp/>state;</highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="class_indicator_interface_1ad4fddb918d5f80046ab61a70fbc9eed2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IRAM_ATTR<sp/><ref refid="class_indicator_interface_1ad4fddb918d5f80046ab61a70fbc9eed2" kindref="member">IndicatorInterface::_staticInterruptHandler</ref>()<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_indicator_interface_1adefd227476c9f85bc7fb1302c99fb60b" kindref="member">_instance</ref>)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1adefd227476c9f85bc7fb1302c99fb60b" kindref="member">_instance</ref>-&gt;_interruptFlag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="class_indicator_interface_1a590c38190df4400edafe532b12a34062" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a590c38190df4400edafe532b12a34062" kindref="member">IndicatorInterface::setPortInverted</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>portName,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inverted)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_indicator_interface_1a412495eaf75665fa714b37fc36a3b82d" kindref="member">_portNames</ref>.find(portName);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_indicator_interface_1a412495eaf75665fa714b37fc36a3b82d" kindref="member">_portNames</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a590c38190df4400edafe532b12a34062" kindref="member">setPortInverted</ref>(it-&gt;second,<sp/>inverted);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="class_indicator_interface_1a42a67a268adfbcc9951e1dc71fe10af4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a590c38190df4400edafe532b12a34062" kindref="member">IndicatorInterface::setPortInverted</ref>(uint8_t<sp/>portNumber,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inverted)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(portNumber<sp/>&gt;<sp/>15)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inverted)<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1aa55179bd0567655980bef4f29df366c7" kindref="member">_modeMask</ref><sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>portNumber);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>bit<sp/>to<sp/>1<sp/>for<sp/>inverted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1aa55179bd0567655980bef4f29df366c7" kindref="member">_modeMask</ref><sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>portNumber);<sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>bit<sp/>to<sp/>0<sp/>for<sp/>normal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425" refid="class_indicator_interface_1a57958896691800d0526ad7941e305136" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a57958896691800d0526ad7941e305136" kindref="member">IndicatorInterface::_initOLED</ref>()<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.enableUTF8Print();</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.clearBuffer();</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a2f021f6fa16dec590a8b9cf41a82349d" kindref="member">_calculateDisplayParams</ref>();</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.sendBuffer();</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a608486f8f9a8373d4363b753d61b8968" kindref="member">_lastActivityTime</ref><sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="class_indicator_interface_1a0f23c8a09f237eca7d71a9ff4e560e96" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a0f23c8a09f237eca7d71a9ff4e560e96" kindref="member">IndicatorInterface::setOledSleepDelay</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>sleepDelay)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1ad22a15d0f7561db46969879a10aa1de5" kindref="member">_oledSleepDelay</ref><sp/>=<sp/>sleepDelay;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1af64dc2a4b4256050b070991dfaf05f1a" kindref="member">_wakeOLED</ref>();</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="class_indicator_interface_1acf545ec2921c786020f7826a846b364d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1acf545ec2921c786020f7826a846b364d" kindref="member">IndicatorInterface::setOledMode</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lines)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lines<sp/>&lt;<sp/>1)<sp/>lines<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lines<sp/>&gt;<sp/>5)<sp/>lines<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1ab74bae75e78806a6eb4df3ad364321cd" kindref="member">_oledLines</ref><sp/>=<sp/>lines;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a2f021f6fa16dec590a8b9cf41a82349d" kindref="member">_calculateDisplayParams</ref>();</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1af64dc2a4b4256050b070991dfaf05f1a" kindref="member">_wakeOLED</ref>();</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="class_indicator_interface_1ac3d970f4cfa8af402fa2538cf05e8cd6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1ac3d970f4cfa8af402fa2538cf05e8cd6" kindref="member">IndicatorInterface::printText</ref>(String<sp/>buffer[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufferSize)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1afc6b2600d29f5d85758fd75cae83b0b9" kindref="member">_textBufferSize</ref><sp/>=<sp/>min(bufferSize,<sp/>5);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_indicator_interface_1afc6b2600d29f5d85758fd75cae83b0b9" kindref="member">_textBufferSize</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>reset<sp/>scroll<sp/>offset<sp/>if<sp/>the<sp/>text<sp/>actually<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_indicator_interface_1ae69883abed1813161f5e451245136fb3" kindref="member">_textBuffer</ref>[i]<sp/>!=<sp/>buffer[i])<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1ae69883abed1813161f5e451245136fb3" kindref="member">_textBuffer</ref>[i]<sp/>=<sp/>buffer[i];</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1ae2a7330b015b9da1a2c151821756a4d6" kindref="member">_scrollOffset</ref>[i]<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>only<sp/>when<sp/>text<sp/>changes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>unused<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="class_indicator_interface_1afc6b2600d29f5d85758fd75cae83b0b9" kindref="member">_textBufferSize</ref>;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1ae69883abed1813161f5e451245136fb3" kindref="member">_textBuffer</ref>[i]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1ae2a7330b015b9da1a2c151821756a4d6" kindref="member">_scrollOffset</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a608486f8f9a8373d4363b753d61b8968" kindref="member">_lastActivityTime</ref><sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1af64dc2a4b4256050b070991dfaf05f1a" kindref="member">_wakeOLED</ref>();</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a38acc1a5120e275253fc4e458aea91f0" kindref="member">_updateOLEDDisplay</ref>();</highlight></codeline>
<codeline lineno="467"><highlight class="normal">}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470" refid="class_indicator_interface_1ab8a4f7cc08c2fb112aa893f0aeca044a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1ab8a4f7cc08c2fb112aa893f0aeca044a" kindref="member">IndicatorInterface::setOLEDblink</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeOn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeOff,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>blinkOn)<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1ab944524710a5026f7f20d62d44a2dee7" kindref="member">_oledBlink</ref><sp/>=<sp/>blinkOn;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1aa85df0334d9959edc154bed17747ae04" kindref="member">_blinkTimeOn</ref><sp/>=<sp/>timeOn;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a3080269e210288582ea05cf63afd16d5" kindref="member">_blinkTimeOff</ref><sp/>=<sp/>timeOff;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a5026d82e76d2b3efd1eab90878803e8d" kindref="member">_lastBlinkTime</ref><sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a5b059b24e3fa66de2165fb17e9026fd7" kindref="member">_blinkState</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blinkOn)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1af64dc2a4b4256050b070991dfaf05f1a" kindref="member">_wakeOLED</ref>();</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="class_indicator_interface_1a62ad23d6e52cf3abe43f6dad6000ebbd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a62ad23d6e52cf3abe43f6dad6000ebbd" kindref="member">IndicatorInterface::setOLEDOff</ref>()<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a942bea540c40919390bc25816cc5b064" kindref="member">_oledOn</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1ab944524710a5026f7f20d62d44a2dee7" kindref="member">_oledBlink</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.setPowerSave(1);</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488" refid="class_indicator_interface_1a7d807749bff6ef06c128617b35f4dcce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a7d807749bff6ef06c128617b35f4dcce" kindref="member">IndicatorInterface::setOLEDOn</ref>()<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a942bea540c40919390bc25816cc5b064" kindref="member">_oledOn</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a36e848846a6ca0327c1f0d3f0a8e80ed" kindref="member">_oledSleeping</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.setPowerSave(0);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a38acc1a5120e275253fc4e458aea91f0" kindref="member">_updateOLEDDisplay</ref>();</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1af64dc2a4b4256050b070991dfaf05f1a" kindref="member">_wakeOLED</ref>();</highlight></codeline>
<codeline lineno="494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496" refid="class_indicator_interface_1a5f9eaa4ad4d2da76bf9536a4dfad8723" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a5f9eaa4ad4d2da76bf9536a4dfad8723" kindref="member">IndicatorInterface::updateOLED</ref>()<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_indicator_interface_1a942bea540c40919390bc25816cc5b064" kindref="member">_oledOn</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a01fa37471cccc2655c0a817b1cab0826" kindref="member">_handleOLEDSleep</ref>();</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_indicator_interface_1a36e848846a6ca0327c1f0d3f0a8e80ed" kindref="member">_oledSleeping</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>special<sp/>blinking<sp/>first<sp/>-<sp/>if<sp/>active,<sp/>skip<sp/>other<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_indicator_interface_1a3e32b13b3477abe772192591a20a907e" kindref="member">_isBlinkingOK</ref><sp/>||<sp/><ref refid="class_indicator_interface_1a603d635417e1a1c3ed705296051ac32c" kindref="member">_isBlinkingCross</ref>)<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1ad70f8a9e7f527bc4faeb576b47483385" kindref="member">_handleSpecialBlink</ref>();</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>handle<sp/>regular<sp/>blink/scroll<sp/>when<sp/>special<sp/>blinking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1afc1bacc73d487f912d7a71f559e193ef" kindref="member">_handleOLEDBlink</ref>();</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a520ad5df9ff7c3f3b716b2b179e50a7e" kindref="member">_handleScrolling</ref>();</highlight></codeline>
<codeline lineno="510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512" refid="class_indicator_interface_1a01db31cebc14d62f6aa9b1266e6c278d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a01db31cebc14d62f6aa9b1266e6c278d" kindref="member">IndicatorInterface::update</ref>()<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a891f8dd7ca0b76e7d89c0ab5567303da" kindref="member">updateBlinking</ref>();</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a5f9eaa4ad4d2da76bf9536a4dfad8723" kindref="member">updateOLED</ref>();</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>IndicatorInterface::updateOLED()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if<sp/>(!_oledOn)<sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>_handleOLEDSleep();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if<sp/>(_oledSleeping)<sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>_handleOLEDBlink();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>_handleSpecialBlink();<sp/><sp/>//<sp/>Add<sp/>this<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>_handleScrolling();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531" refid="class_indicator_interface_1a2f021f6fa16dec590a8b9cf41a82349d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a2f021f6fa16dec590a8b9cf41a82349d" kindref="member">IndicatorInterface::_calculateDisplayParams</ref>()<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>displayHeight<sp/>=<sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.getDisplayHeight();<sp/></highlight><highlight class="comment">//<sp/>64<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>optimal<sp/>line<sp/>height<sp/>for<sp/>each<sp/>mode<sp/>to<sp/>use<sp/>full<sp/>display<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_indicator_interface_1ab74bae75e78806a6eb4df3ad364321cd" kindref="member">_oledLines</ref>)<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>largest<sp/>font<sp/>and<sp/>center<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.setFont(u8g2_font_10x20_t_cyrillic);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1aa0218f414dcc1be0b62c29e7d39b985d" kindref="member">_lineHeight</ref><sp/>=<sp/>displayHeight;<sp/></highlight><highlight class="comment">//<sp/>Full<sp/>height<sp/>for<sp/>single<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a12aa1363cd7159475c7ca7b145b688cd" kindref="member">_charWidth</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a54182aa1c8eb74b781bea42002efb18e" kindref="member">_maxCharsPerLine</ref><sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>medium-large<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//u8g2.setFont(u8g2_font_9x15_t_cyrillic);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.setFont(u8g2_font_10x20_t_cyrillic);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1aa0218f414dcc1be0b62c29e7d39b985d" kindref="member">_lineHeight</ref><sp/>=<sp/>displayHeight<sp/>/<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>32px<sp/>per<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a12aa1363cd7159475c7ca7b145b688cd" kindref="member">_charWidth</ref><sp/>=<sp/>9;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a54182aa1c8eb74b781bea42002efb18e" kindref="member">_maxCharsPerLine</ref><sp/>=<sp/>14;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>medium<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//u8g2.setFont(u8g2_font_7x13_t_cyrillic);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>u8g2.setFont(u8g2_font_9x15_t_cyrillic);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.setFont(u8g2_font_10x20_t_cyrillic);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1aa0218f414dcc1be0b62c29e7d39b985d" kindref="member">_lineHeight</ref><sp/>=<sp/>displayHeight<sp/>/<sp/>3;<sp/></highlight><highlight class="comment">//<sp/>~21px<sp/>per<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a12aa1363cd7159475c7ca7b145b688cd" kindref="member">_charWidth</ref><sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a54182aa1c8eb74b781bea42002efb18e" kindref="member">_maxCharsPerLine</ref><sp/>=<sp/>18;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>smaller<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//u8g2.setFont(u8g2_font_5x7_t_cyrillic);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.setFont(u8g2_font_9x15_t_cyrillic);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1aa0218f414dcc1be0b62c29e7d39b985d" kindref="member">_lineHeight</ref><sp/>=<sp/>displayHeight<sp/>/<sp/>4;<sp/></highlight><highlight class="comment">//<sp/>16px<sp/>per<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a12aa1363cd7159475c7ca7b145b688cd" kindref="member">_charWidth</ref><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a54182aa1c8eb74b781bea42002efb18e" kindref="member">_maxCharsPerLine</ref><sp/>=<sp/>25;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>smallest<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.setFont(u8g2_font_9x15_t_cyrillic);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>u8g2.setFont(u8g2_font_4x6_t_cyrillic);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1aa0218f414dcc1be0b62c29e7d39b985d" kindref="member">_lineHeight</ref><sp/>=<sp/>displayHeight<sp/>/<sp/>5;<sp/></highlight><highlight class="comment">//<sp/>~12px<sp/>per<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a12aa1363cd7159475c7ca7b145b688cd" kindref="member">_charWidth</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a54182aa1c8eb74b781bea42002efb18e" kindref="member">_maxCharsPerLine</ref><sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>IndicatorInterface::_calculateDisplayParams()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>Set<sp/>font<sp/>based<sp/>on<sp/>number<sp/>of<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>switch<sp/>(_oledLines)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>1:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8g2.setFont(u8g2_font_10x20_t_cyrillic);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_lineHeight<sp/>=<sp/>24;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_charWidth<sp/>=<sp/>10;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_maxCharsPerLine<sp/>=<sp/>12;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>2:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8g2.setFont(u8g2_font_9x15_t_cyrillic);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_lineHeight<sp/>=<sp/>20;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_charWidth<sp/>=<sp/>9;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_maxCharsPerLine<sp/>=<sp/>14;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>3:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8g2.setFont(u8g2_font_7x13_t_cyrillic);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_lineHeight<sp/>=<sp/>16;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_charWidth<sp/>=<sp/>7;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_maxCharsPerLine<sp/>=<sp/>18;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>4:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8g2.setFont(u8g2_font_5x7_t_cyrillic);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_lineHeight<sp/>=<sp/>12;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_charWidth<sp/>=<sp/>6;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_maxCharsPerLine<sp/>=<sp/>21;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>5:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8g2.setFont(u8g2_font_4x6_t_cyrillic);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_lineHeight<sp/>=<sp/>10;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_charWidth<sp/>=<sp/>5;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_maxCharsPerLine<sp/>=<sp/>25;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622" refid="class_indicator_interface_1a38acc1a5120e275253fc4e458aea91f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a38acc1a5120e275253fc4e458aea91f0" kindref="member">IndicatorInterface::_updateOLEDDisplay</ref>()<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_indicator_interface_1a942bea540c40919390bc25816cc5b064" kindref="member">_oledOn</ref><sp/>||<sp/><ref refid="class_indicator_interface_1a36e848846a6ca0327c1f0d3f0a8e80ed" kindref="member">_oledSleeping</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.clearBuffer();</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a2f021f6fa16dec590a8b9cf41a82349d" kindref="member">_calculateDisplayParams</ref>();</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>font<sp/>position<sp/>to<sp/>top<sp/>for<sp/>consistent<sp/>positioning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.setFontPosTop();</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>displayHeight<sp/>=<sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.getDisplayHeight();<sp/></highlight><highlight class="comment">//<sp/>64<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_indicator_interface_1ab74bae75e78806a6eb4df3ad364321cd" kindref="member">_oledLines</ref><sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/><ref refid="class_indicator_interface_1afc6b2600d29f5d85758fd75cae83b0b9" kindref="member">_textBufferSize</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yPos;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_indicator_interface_1ab74bae75e78806a6eb4df3ad364321cd" kindref="member">_oledLines</ref><sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Center<sp/>single<sp/>line<sp/>vertically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fontHeight<sp/>=<sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.getFontAscent()<sp/>-<sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.getFontDescent();</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yPos<sp/>=<sp/>(displayHeight<sp/>-<sp/>fontHeight)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Distribute<sp/>lines<sp/>evenly<sp/>across<sp/>display<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yPos<sp/>=<sp/>(i<sp/>*<sp/>displayHeight)<sp/>/<sp/><ref refid="class_indicator_interface_1ab74bae75e78806a6eb4df3ad364321cd" kindref="member">_oledLines</ref>;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a56c23034a963e2099e36cf55ec70055e" kindref="member">_drawTextLine</ref>(i,<sp/>yPos);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.sendBuffer();</highlight></codeline>
<codeline lineno="649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="659" refid="class_indicator_interface_1a56c23034a963e2099e36cf55ec70055e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a56c23034a963e2099e36cf55ec70055e" kindref="member">IndicatorInterface::_drawTextLine</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yPos)<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lineIndex<sp/>&gt;=<sp/><ref refid="class_indicator_interface_1afc6b2600d29f5d85758fd75cae83b0b9" kindref="member">_textBufferSize</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>text<sp/>=<sp/><ref refid="class_indicator_interface_1ae69883abed1813161f5e451245136fb3" kindref="member">_textBuffer</ref>[lineIndex];</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>text<sp/>width<sp/>in<sp/>pixels<sp/>(works<sp/>correctly<sp/>with<sp/>UTF-8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>textWidthPixels<sp/>=<sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.getUTF8Width(text.c_str());</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>displayWidthPixels<sp/>=<sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.getDisplayWidth();</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textWidthPixels<sp/>&lt;=<sp/>displayWidthPixels)<sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Short<sp/>text<sp/>-<sp/>display<sp/>normally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.drawUTF8(0,<sp/>yPos,<sp/>text.c_str());</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Long<sp/>text<sp/>-<sp/>apply<sp/>pixel-based<sp/>circular<sp/>scrolling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/><ref refid="class_indicator_interface_1ae2a7330b015b9da1a2c151821756a4d6" kindref="member">_scrollOffset</ref>[lineIndex];</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>separator<sp/>for<sp/>circular<sp/>effect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>circularText<sp/>=<sp/>text<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>text;<sp/><sp/></highlight><highlight class="comment">//<sp/>Double<sp/>the<sp/>text<sp/>with<sp/>separator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>clipping<sp/>to<sp/>display<sp/>boundaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.setClipWindow(0,<sp/>yPos<sp/>-<sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.getFontAscent(),<sp/>displayWidthPixels,<sp/>yPos<sp/>+<sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.getFontDescent());</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>circular<sp/>text<sp/>at<sp/>offset<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.drawUTF8(-offset,<sp/>yPos,<sp/>circularText.c_str());</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>clipping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.setMaxClipWindow();</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal">}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693" refid="class_indicator_interface_1a01fa37471cccc2655c0a817b1cab0826" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a01fa37471cccc2655c0a817b1cab0826" kindref="member">IndicatorInterface::_handleOLEDSleep</ref>()<sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_indicator_interface_1ad22a15d0f7561db46969879a10aa1de5" kindref="member">_oledSleepDelay</ref><sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Never<sp/>sleep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_indicator_interface_1a36e848846a6ca0327c1f0d3f0a8e80ed" kindref="member">_oledSleeping</ref><sp/>&amp;&amp;<sp/>(millis()<sp/>-<sp/><ref refid="class_indicator_interface_1a608486f8f9a8373d4363b753d61b8968" kindref="member">_lastActivityTime</ref>)<sp/>&gt;<sp/><ref refid="class_indicator_interface_1ad22a15d0f7561db46969879a10aa1de5" kindref="member">_oledSleepDelay</ref>)<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a36e848846a6ca0327c1f0d3f0a8e80ed" kindref="member">_oledSleeping</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.setPowerSave(1);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal">}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702" refid="class_indicator_interface_1afc1bacc73d487f912d7a71f559e193ef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1afc1bacc73d487f912d7a71f559e193ef" kindref="member">IndicatorInterface::_handleOLEDBlink</ref>()<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_indicator_interface_1ab944524710a5026f7f20d62d44a2dee7" kindref="member">_oledBlink</ref><sp/>||<sp/><ref refid="class_indicator_interface_1a36e848846a6ca0327c1f0d3f0a8e80ed" kindref="member">_oledSleeping</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentTime<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>elapsed<sp/>=<sp/>currentTime<sp/>-<sp/><ref refid="class_indicator_interface_1a5026d82e76d2b3efd1eab90878803e8d" kindref="member">_lastBlinkTime</ref>;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_indicator_interface_1a5b059b24e3fa66de2165fb17e9026fd7" kindref="member">_blinkState</ref><sp/>&amp;&amp;<sp/>elapsed<sp/>&gt;<sp/><ref refid="class_indicator_interface_1aa85df0334d9959edc154bed17747ae04" kindref="member">_blinkTimeOn</ref>)<sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.setPowerSave(1);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a5b059b24e3fa66de2165fb17e9026fd7" kindref="member">_blinkState</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a5026d82e76d2b3efd1eab90878803e8d" kindref="member">_lastBlinkTime</ref><sp/>=<sp/>currentTime;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_indicator_interface_1a5b059b24e3fa66de2165fb17e9026fd7" kindref="member">_blinkState</ref><sp/>&amp;&amp;<sp/>elapsed<sp/>&gt;<sp/><ref refid="class_indicator_interface_1a3080269e210288582ea05cf63afd16d5" kindref="member">_blinkTimeOff</ref>)<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.setPowerSave(0);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a38acc1a5120e275253fc4e458aea91f0" kindref="member">_updateOLEDDisplay</ref>();</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a5b059b24e3fa66de2165fb17e9026fd7" kindref="member">_blinkState</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a5026d82e76d2b3efd1eab90878803e8d" kindref="member">_lastBlinkTime</ref><sp/>=<sp/>currentTime;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="727" refid="class_indicator_interface_1a520ad5df9ff7c3f3b716b2b179e50a7e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a520ad5df9ff7c3f3b716b2b179e50a7e" kindref="member">IndicatorInterface::_handleScrolling</ref>()<sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(millis()<sp/>-<sp/><ref refid="class_indicator_interface_1a4a32b171da54c67284aebede765d976d" kindref="member">_lastScrollTime</ref><sp/>&lt;<sp/><ref refid="class_indicator_interface_1a247d77090e8e2bb0db34c401c89cb002" kindref="member">_scrollDelay</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>needsUpdate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_indicator_interface_1afc6b2600d29f5d85758fd75cae83b0b9" kindref="member">_textBufferSize</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>text<sp/>=<sp/><ref refid="class_indicator_interface_1ae69883abed1813161f5e451245136fb3" kindref="member">_textBuffer</ref>[i];</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>text<sp/>width<sp/>in<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>textWidthPixels<sp/>=<sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.getUTF8Width(text.c_str());</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>displayWidthPixels<sp/>=<sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.getDisplayWidth();</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textWidthPixels<sp/>&gt;<sp/>displayWidthPixels)<sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scroll<sp/>by<sp/>2<sp/>pixels<sp/>each<sp/>time<sp/>for<sp/>smooth<sp/>movement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1ae2a7330b015b9da1a2c151821756a4d6" kindref="member">_scrollOffset</ref>[i]<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>total<sp/>width<sp/>including<sp/>separator<sp/>&quot;<sp/><sp/><sp/>&quot;<sp/>(3<sp/>spaces)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>separatorWidth<sp/>=<sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.getUTF8Width(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalWidth<sp/>=<sp/>textWidthPixels<sp/>+<sp/>separatorWidth;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wrap<sp/>around<sp/>when<sp/>we&apos;ve<sp/>scrolled<sp/>the<sp/>full<sp/>text<sp/>+<sp/>separator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_indicator_interface_1ae2a7330b015b9da1a2c151821756a4d6" kindref="member">_scrollOffset</ref>[i]<sp/>&gt;=<sp/>totalWidth)<sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1ae2a7330b015b9da1a2c151821756a4d6" kindref="member">_scrollOffset</ref>[i]<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>Wrap<sp/>back<sp/>to<sp/>beginning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>needsUpdate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>reset<sp/>offset<sp/>for<sp/>short<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1ae2a7330b015b9da1a2c151821756a4d6" kindref="member">_scrollOffset</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(needsUpdate)<sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a4a32b171da54c67284aebede765d976d" kindref="member">_lastScrollTime</ref><sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a38acc1a5120e275253fc4e458aea91f0" kindref="member">_updateOLEDDisplay</ref>();</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal">}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766" refid="class_indicator_interface_1af64dc2a4b4256050b070991dfaf05f1a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1af64dc2a4b4256050b070991dfaf05f1a" kindref="member">IndicatorInterface::_wakeOLED</ref>()<sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_indicator_interface_1a942bea540c40919390bc25816cc5b064" kindref="member">_oledOn</ref>)<sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a608486f8f9a8373d4363b753d61b8968" kindref="member">_lastActivityTime</ref><sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a36e848846a6ca0327c1f0d3f0a8e80ed" kindref="member">_oledSleeping</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.setPowerSave(0);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Modify<sp/>existing<sp/>handleInterrupt()<sp/>method<sp/>to<sp/>wake<sp/>OLED:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775" refid="class_indicator_interface_1a4586496158d0d102742463c908d9b2c3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a4586496158d0d102742463c908d9b2c3" kindref="member">IndicatorInterface::handleInterrupt</ref>()<sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_indicator_interface_1adac6de445ff7c1d1bc1afa660849c272" kindref="member">_interruptFlag</ref>)<sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1adac6de445ff7c1d1bc1afa660849c272" kindref="member">_interruptFlag</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1aea37934542bbe7b6c50941dff4646fef" kindref="member">_updateState</ref>();</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1af64dc2a4b4256050b070991dfaf05f1a" kindref="member">_wakeOLED</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>Wake<sp/>OLED<sp/>on<sp/>any<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>this<sp/>method<sp/>to<sp/>IndicatorInterface.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>IndicatorInterface::_fixSH1106Offset()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>Set<sp/>column<sp/>start<sp/>address<sp/>to<sp/>2<sp/>for<sp/>SH1106</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>u8g2.sendF(&quot;ca&quot;,<sp/>0x10<sp/>|<sp/>0,<sp/>0x10<sp/>|<sp/>2);<sp/><sp/>//<sp/>Set<sp/>lower<sp/>and<sp/>higher<sp/>column<sp/>start<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789" refid="class_indicator_interface_1a3d7f75c8c69808ecc98d1e1fb272984d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a3d7f75c8c69808ecc98d1e1fb272984d" kindref="member">IndicatorInterface::pushLine</ref>(String<sp/>newLine)<sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shift<sp/>all<sp/>lines<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>4;<sp/>i<sp/>&gt;<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1ae69883abed1813161f5e451245136fb3" kindref="member">_textBuffer</ref>[i]<sp/>=<sp/><ref refid="class_indicator_interface_1ae69883abed1813161f5e451245136fb3" kindref="member">_textBuffer</ref>[i-1];</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>new<sp/>line<sp/>at<sp/>the<sp/>top</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1ae69883abed1813161f5e451245136fb3" kindref="member">_textBuffer</ref>[0]<sp/>=<sp/>newLine;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>we<sp/>have<sp/>the<sp/>right<sp/>number<sp/>of<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_indicator_interface_1afc6b2600d29f5d85758fd75cae83b0b9" kindref="member">_textBufferSize</ref><sp/>&lt;<sp/><ref refid="class_indicator_interface_1ab74bae75e78806a6eb4df3ad364321cd" kindref="member">_oledLines</ref>)<sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1afc6b2600d29f5d85758fd75cae83b0b9" kindref="member">_textBufferSize</ref>++;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1afc6b2600d29f5d85758fd75cae83b0b9" kindref="member">_textBufferSize</ref><sp/>=<sp/><ref refid="class_indicator_interface_1ab74bae75e78806a6eb4df3ad364321cd" kindref="member">_oledLines</ref>;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>scroll<sp/>offsets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1ae2a7330b015b9da1a2c151821756a4d6" kindref="member">_scrollOffset</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a38acc1a5120e275253fc4e458aea91f0" kindref="member">_updateOLEDDisplay</ref>();</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1af64dc2a4b4256050b070991dfaf05f1a" kindref="member">_wakeOLED</ref>();</highlight></codeline>
<codeline lineno="812"><highlight class="normal">}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814" refid="class_indicator_interface_1aaa36eb97521df2decb957418acc277a9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1aaa36eb97521df2decb957418acc277a9" kindref="member">IndicatorInterface::displayOK</ref>()<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>this<sp/>line:<sp/>stopBlinking();<sp/>//<sp/>Stop<sp/>any<sp/>current<sp/>blinking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.clearBuffer();</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>largest<sp/>available<sp/>font<sp/>for<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.setFont(u8g2_font_logisoso42_tf);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.setFontPosCenter();</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>center<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>displayWidth<sp/>=<sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.getDisplayWidth();</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>displayHeight<sp/>=<sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.getDisplayHeight();</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>okText<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;OK&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>textWidth<sp/>=<sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.getUTF8Width(okText.c_str());</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>(displayWidth<sp/>-<sp/>textWidth)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>displayHeight<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>OK<sp/>in<sp/>center</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.drawUTF8(x,<sp/>y<sp/>+<sp/>5,<sp/>okText.c_str());</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>border<sp/>around<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.drawFrame(x<sp/>-<sp/>5,<sp/>y<sp/>-<sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.getFontAscent()<sp/>/<sp/>2<sp/>-<sp/>5,<sp/></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textWidth<sp/>+<sp/>10,<sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.getFontAscent()<sp/>+<sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.getFontDescent()<sp/>+<sp/>20);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.sendBuffer();</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1af64dc2a4b4256050b070991dfaf05f1a" kindref="member">_wakeOLED</ref>();</highlight></codeline>
<codeline lineno="842"><highlight class="normal">}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844" refid="class_indicator_interface_1a54fa76657f9ef0c9e19b6e94d682fb65" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a54fa76657f9ef0c9e19b6e94d682fb65" kindref="member">IndicatorInterface::displayCross</ref>()<sp/>{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.clearBuffer();</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>displayWidth<sp/>=<sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.getDisplayWidth();</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>displayHeight<sp/>=<sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.getDisplayHeight();</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>center<sp/>and<sp/>radius<sp/>for<sp/>circle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>centerX<sp/>=<sp/>displayWidth<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>centerY<sp/>=<sp/>displayHeight<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>radius<sp/>=<sp/>min(displayWidth,<sp/>displayHeight)<sp/>/<sp/>2<sp/>-<sp/>4;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>thicker<sp/>circle<sp/>by<sp/>drawing<sp/>multiple<sp/>concentric<sp/>circles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>radius;<sp/>r<sp/>&gt;<sp/>radius<sp/>-<sp/>3;<sp/>r--)<sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.drawCircle(centerX,<sp/>centerY,<sp/>r);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cross<sp/>parameters<sp/>-<sp/>made<sp/>smaller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>crossSize<sp/>=<sp/>(radius<sp/>*<sp/>5)<sp/>/<sp/>10;<sp/><sp/></highlight><highlight class="comment">//<sp/>Reduced<sp/>from<sp/>70%<sp/>to<sp/>50%<sp/>of<sp/>radius</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thickness<sp/>=<sp/>4;<sp/><sp/></highlight><highlight class="comment">//<sp/>Cross<sp/>arm<sp/>thickness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>halfThickness<sp/>=<sp/>thickness<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>main<sp/>diagonal<sp/>(top-left<sp/>to<sp/>bottom-right)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>-crossSize;<sp/>i<sp/>&lt;=<sp/>crossSize;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>centerX<sp/>+<sp/>i<sp/>-<sp/>halfThickness;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y1<sp/>=<sp/>centerY<sp/>+<sp/>i<sp/>-<sp/>halfThickness;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>small<sp/>filled<sp/>rectangles<sp/>along<sp/>the<sp/>diagonal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.drawBox(x1,<sp/>y1,<sp/>thickness,<sp/>thickness);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>anti-diagonal<sp/>(top-right<sp/>to<sp/>bottom-left)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>-crossSize;<sp/>i<sp/>&lt;=<sp/>crossSize;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>centerX<sp/>+<sp/>i<sp/>-<sp/>halfThickness;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y1<sp/>=<sp/>centerY<sp/>-<sp/>i<sp/>-<sp/>halfThickness;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>small<sp/>filled<sp/>rectangles<sp/>along<sp/>the<sp/>anti-diagonal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.drawBox(x1,<sp/>y1,<sp/>thickness,<sp/>thickness);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" kindref="member">u8g2</ref>.sendBuffer();</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1af64dc2a4b4256050b070991dfaf05f1a" kindref="member">_wakeOLED</ref>();</highlight></codeline>
<codeline lineno="885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>IndicatorInterface::displayCross()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>Remove<sp/>this<sp/>line:<sp/>stopBlinking();<sp/>//<sp/>Stop<sp/>any<sp/>current<sp/>blinking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>u8g2.clearBuffer();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>int<sp/>displayWidth<sp/>=<sp/>u8g2.getDisplayWidth();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>int<sp/>displayHeight<sp/>=<sp/>u8g2.getDisplayHeight();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>Calculate<sp/>center<sp/>and<sp/>radius<sp/>for<sp/>circle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>int<sp/>centerX<sp/>=<sp/>displayWidth<sp/>/<sp/>2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>int<sp/>centerY<sp/>=<sp/>displayHeight<sp/>/<sp/>2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>int<sp/>radius<sp/>=<sp/>min(displayWidth,<sp/>displayHeight)<sp/>/<sp/>2<sp/>-<sp/>4;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>Draw<sp/>circle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>u8g2.drawCircle(centerX,<sp/>centerY,<sp/>radius);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>Draw<sp/>cross<sp/>inside<sp/>circle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>int<sp/>crossSize<sp/>=<sp/>radius<sp/>-<sp/>8;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>Draw<sp/>X<sp/>(cross)<sp/>-<sp/>make<sp/>it<sp/>thicker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>offset<sp/>=<sp/>-1;<sp/>offset<sp/>&lt;=<sp/>1;<sp/>offset++)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8g2.drawLine(centerX<sp/>-<sp/>crossSize<sp/>+<sp/>offset,<sp/>centerY<sp/>-<sp/>crossSize,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centerX<sp/>+<sp/>crossSize<sp/>+<sp/>offset,<sp/>centerY<sp/>+<sp/>crossSize);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8g2.drawLine(centerX<sp/>+<sp/>crossSize<sp/>+<sp/>offset,<sp/>centerY<sp/>-<sp/>crossSize,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centerX<sp/>-<sp/>crossSize<sp/>+<sp/>offset,<sp/>centerY<sp/>+<sp/>crossSize);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8g2.drawLine(centerX<sp/>-<sp/>crossSize,<sp/>centerY<sp/>-<sp/>crossSize<sp/>+<sp/>offset,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centerX<sp/>+<sp/>crossSize,<sp/>centerY<sp/>+<sp/>crossSize<sp/>+<sp/>offset);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8g2.drawLine(centerX<sp/>+<sp/>crossSize,<sp/>centerY<sp/>-<sp/>crossSize<sp/>+<sp/>offset,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centerX<sp/>-<sp/>crossSize,<sp/>centerY<sp/>+<sp/>crossSize<sp/>+<sp/>offset);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>u8g2.sendBuffer();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>_wakeOLED();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923" refid="class_indicator_interface_1aa7c6bd010177acde7097bd4b186fa96d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1aa7c6bd010177acde7097bd4b186fa96d" kindref="member">IndicatorInterface::blinkOK</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blinkDelay)<sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>any<sp/>regular<sp/>OLED<sp/>blinking<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1ab944524710a5026f7f20d62d44a2dee7" kindref="member">_oledBlink</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a30f46d2a644df56a3e0864dbee8cf7d1" kindref="member">_saveCurrentText</ref>();</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a3e32b13b3477abe772192591a20a907e" kindref="member">_isBlinkingOK</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a603d635417e1a1c3ed705296051ac32c" kindref="member">_isBlinkingCross</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a13c8569b739cf6e99de0bd3ad7c20801" kindref="member">_blinkDelayTime</ref><sp/>=<sp/>blinkDelay;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1af2d0c2c932ac0b9ebe7e6266b63a218b" kindref="member">_lastBlinkToggle</ref><sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a5b4a1c66db5909b0eeef1016287f8a75" kindref="member">_blinkShowSpecial</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1aaa36eb97521df2decb957418acc277a9" kindref="member">displayOK</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>with<sp/>OK<sp/>showing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal">}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937" refid="class_indicator_interface_1ac5ef0d744798dc4643c4fa0074e9b503" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1ac5ef0d744798dc4643c4fa0074e9b503" kindref="member">IndicatorInterface::blinkCross</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blinkDelay)<sp/>{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>any<sp/>regular<sp/>OLED<sp/>blinking<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1ab944524710a5026f7f20d62d44a2dee7" kindref="member">_oledBlink</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a30f46d2a644df56a3e0864dbee8cf7d1" kindref="member">_saveCurrentText</ref>();</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a3e32b13b3477abe772192591a20a907e" kindref="member">_isBlinkingOK</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a603d635417e1a1c3ed705296051ac32c" kindref="member">_isBlinkingCross</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a13c8569b739cf6e99de0bd3ad7c20801" kindref="member">_blinkDelayTime</ref><sp/>=<sp/>blinkDelay;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1af2d0c2c932ac0b9ebe7e6266b63a218b" kindref="member">_lastBlinkToggle</ref><sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a5b4a1c66db5909b0eeef1016287f8a75" kindref="member">_blinkShowSpecial</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a54fa76657f9ef0c9e19b6e94d682fb65" kindref="member">displayCross</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>with<sp/>cross<sp/>showing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal">}</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952" refid="class_indicator_interface_1a1573397b085b78ea7f714665d55cece0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a1573397b085b78ea7f714665d55cece0" kindref="member">IndicatorInterface::stopBlinking</ref>()<sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a3e32b13b3477abe772192591a20a907e" kindref="member">_isBlinkingOK</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a603d635417e1a1c3ed705296051ac32c" kindref="member">_isBlinkingCross</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1aa24a016a7358ca6f0c955794d5774512" kindref="member">_restoreCurrentText</ref>();</highlight></codeline>
<codeline lineno="956"><highlight class="normal">}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958" refid="class_indicator_interface_1a30f46d2a644df56a3e0864dbee8cf7d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a30f46d2a644df56a3e0864dbee8cf7d1" kindref="member">IndicatorInterface::_saveCurrentText</ref>()<sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>current<sp/>text<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1acc98489f9f8aad76f42bb4178626b631" kindref="member">_savedTextBuffer</ref>[i]<sp/>=<sp/><ref refid="class_indicator_interface_1ae69883abed1813161f5e451245136fb3" kindref="member">_textBuffer</ref>[i];</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1aca206ae7f20a60f0fd4661cebc9c113f" kindref="member">_savedTextBufferSize</ref><sp/>=<sp/><ref refid="class_indicator_interface_1afc6b2600d29f5d85758fd75cae83b0b9" kindref="member">_textBufferSize</ref>;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a4017512513ab2ada6ec2791d481708fb" kindref="member">_savedOledLines</ref><sp/>=<sp/><ref refid="class_indicator_interface_1ab74bae75e78806a6eb4df3ad364321cd" kindref="member">_oledLines</ref>;</highlight></codeline>
<codeline lineno="965"><highlight class="normal">}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967" refid="class_indicator_interface_1aa24a016a7358ca6f0c955794d5774512" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1aa24a016a7358ca6f0c955794d5774512" kindref="member">IndicatorInterface::_restoreCurrentText</ref>()<sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>saved<sp/>text<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1ae69883abed1813161f5e451245136fb3" kindref="member">_textBuffer</ref>[i]<sp/>=<sp/><ref refid="class_indicator_interface_1acc98489f9f8aad76f42bb4178626b631" kindref="member">_savedTextBuffer</ref>[i];</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1afc6b2600d29f5d85758fd75cae83b0b9" kindref="member">_textBufferSize</ref><sp/>=<sp/><ref refid="class_indicator_interface_1aca206ae7f20a60f0fd4661cebc9c113f" kindref="member">_savedTextBufferSize</ref>;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1ab74bae75e78806a6eb4df3ad364321cd" kindref="member">_oledLines</ref><sp/>=<sp/><ref refid="class_indicator_interface_1a4017512513ab2ada6ec2791d481708fb" kindref="member">_savedOledLines</ref>;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a38acc1a5120e275253fc4e458aea91f0" kindref="member">_updateOLEDDisplay</ref>();</highlight></codeline>
<codeline lineno="976"><highlight class="normal">}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978" refid="class_indicator_interface_1ad70f8a9e7f527bc4faeb576b47483385" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1ad70f8a9e7f527bc4faeb576b47483385" kindref="member">IndicatorInterface::_handleSpecialBlink</ref>()<sp/>{</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_indicator_interface_1a3e32b13b3477abe772192591a20a907e" kindref="member">_isBlinkingOK</ref><sp/>&amp;&amp;<sp/>!<ref refid="class_indicator_interface_1a603d635417e1a1c3ed705296051ac32c" kindref="member">_isBlinkingCross</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentTime<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentTime<sp/>-<sp/><ref refid="class_indicator_interface_1af2d0c2c932ac0b9ebe7e6266b63a218b" kindref="member">_lastBlinkToggle</ref><sp/>&gt;=<sp/><ref refid="class_indicator_interface_1a13c8569b739cf6e99de0bd3ad7c20801" kindref="member">_blinkDelayTime</ref>)<sp/>{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a5b4a1c66db5909b0eeef1016287f8a75" kindref="member">_blinkShowSpecial</ref><sp/>=<sp/>!<ref refid="class_indicator_interface_1a5b4a1c66db5909b0eeef1016287f8a75" kindref="member">_blinkShowSpecial</ref>;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1af2d0c2c932ac0b9ebe7e6266b63a218b" kindref="member">_lastBlinkToggle</ref><sp/>=<sp/>currentTime;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_indicator_interface_1a5b4a1c66db5909b0eeef1016287f8a75" kindref="member">_blinkShowSpecial</ref>)<sp/>{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Show<sp/>OK<sp/>or<sp/>Cross</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_indicator_interface_1a3e32b13b3477abe772192591a20a907e" kindref="member">_isBlinkingOK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1aaa36eb97521df2decb957418acc277a9" kindref="member">displayOK</ref>();</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_indicator_interface_1a603d635417e1a1c3ed705296051ac32c" kindref="member">_isBlinkingCross</ref>)<sp/>{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a54fa76657f9ef0c9e19b6e94d682fb65" kindref="member">displayCross</ref>();</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Show<sp/>original<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1aa24a016a7358ca6f0c955794d5774512" kindref="member">_restoreCurrentText</ref>();</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="998"><highlight class="normal">}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002" refid="class_indicator_interface_1aafa418167df7eb74fc90fca14818a5eb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1aafa418167df7eb74fc90fca14818a5eb" kindref="member">IndicatorInterface::startBlinking</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>portName,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>onTime,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>offTime)<sp/>{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" kindref="member">LoggerManager::info</ref>(</highlight><highlight class="stringliteral">&quot;INDICATION&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String(portName.c_str())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>start<sp/>blinking&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>port<sp/>is<sp/>already<sp/>blinking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>blinkPort<sp/>:<sp/><ref refid="class_indicator_interface_1a7ba08be0780b5c3e1e1a85fcb75a40b4" kindref="member">_blinkingPorts</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blinkPort.portName<sp/>==<sp/>portName)<sp/>{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>existing<sp/>blinking<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blinkPort.onTime<sp/>=<sp/>onTime;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blinkPort.offTime<sp/>=<sp/>offTime;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blinkPort.isActive<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>new<sp/>blinking<sp/>port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_indicator_interface_1_1_blinking_port" kindref="compound">BlinkingPort</ref><sp/>newBlink;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/>newBlink.<ref refid="struct_indicator_interface_1_1_blinking_port_1ad80dbdb5d0bb386953a5def17d2da542" kindref="member">portName</ref><sp/>=<sp/>portName;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>newBlink.<ref refid="struct_indicator_interface_1_1_blinking_port_1add4bee394ff2b7239780a4a7b2640954" kindref="member">onTime</ref><sp/>=<sp/>onTime;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>newBlink.<ref refid="struct_indicator_interface_1_1_blinking_port_1a629381e9fa819c425e8387c8b2819f55" kindref="member">offTime</ref><sp/>=<sp/>offTime;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>newBlink.<ref refid="struct_indicator_interface_1_1_blinking_port_1a34e108c23ec5082406b12b75d87c9606" kindref="member">lastToggleTime</ref><sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>newBlink.<ref refid="struct_indicator_interface_1_1_blinking_port_1aa22cf12bfef400089f451e7992ae4c62" kindref="member">currentState</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>with<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>newBlink.<ref refid="struct_indicator_interface_1_1_blinking_port_1aa6b9efc3b2ddaf0ecbb264bebed99e60" kindref="member">isActive</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a7ba08be0780b5c3e1e1a85fcb75a40b4" kindref="member">_blinkingPorts</ref>.push_back(newBlink);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>initial<sp/>state<sp/>to<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a89a41cb1580141ed65c07ced6692322e" kindref="member">writePort</ref>(portName,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031" refid="class_indicator_interface_1a4458930151b73e21364fada5ba6fe129" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a1573397b085b78ea7f714665d55cece0" kindref="member">IndicatorInterface::stopBlinking</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>portName)<sp/>{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" kindref="member">LoggerManager::info</ref>(</highlight><highlight class="stringliteral">&quot;INDICATION&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String(portName.c_str())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>stop<sp/>blinking&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_indicator_interface_1a7ba08be0780b5c3e1e1a85fcb75a40b4" kindref="member">_blinkingPorts</ref>.begin();<sp/>it<sp/>!=<sp/><ref refid="class_indicator_interface_1a7ba08be0780b5c3e1e1a85fcb75a40b4" kindref="member">_blinkingPorts</ref>.end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;portName<sp/>==<sp/>portName)<sp/>{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;isActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>off<sp/>the<sp/>port<sp/>when<sp/>stopping<sp/>blink</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a89a41cb1580141ed65c07ced6692322e" kindref="member">writePort</ref>(portName,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a7ba08be0780b5c3e1e1a85fcb75a40b4" kindref="member">_blinkingPorts</ref>.erase(it);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1043"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045" refid="class_indicator_interface_1a891f8dd7ca0b76e7d89c0ab5567303da" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a891f8dd7ca0b76e7d89c0ab5567303da" kindref="member">IndicatorInterface::updateBlinking</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentTime<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>blinkPort<sp/>:<sp/><ref refid="class_indicator_interface_1a7ba08be0780b5c3e1e1a85fcb75a40b4" kindref="member">_blinkingPorts</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!blinkPort.isActive)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>elapsed<sp/>=<sp/>currentTime<sp/>-<sp/>blinkPort.lastToggleTime;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>targetTime<sp/>=<sp/>blinkPort.currentState<sp/>?<sp/>blinkPort.onTime<sp/>:<sp/>blinkPort.offTime;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elapsed<sp/>&gt;=<sp/>targetTime)<sp/>{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blinkPort.currentState<sp/>=<sp/>!blinkPort.currentState;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blinkPort.lastToggleTime<sp/>=<sp/>currentTime;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>hardware</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_indicator_interface_1a89a41cb1580141ed65c07ced6692322e" kindref="member">writePort</ref>(blinkPort.portName,<sp/>blinkPort.currentState);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065" refid="class_indicator_interface_1a84a7f5f2394abde177b41becd340b678" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_indicator_interface_1a84a7f5f2394abde177b41becd340b678" kindref="member">IndicatorInterface::isBlinking</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>portName)<sp/>{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>blinkPort<sp/>:<sp/><ref refid="class_indicator_interface_1a7ba08be0780b5c3e1e1a85fcb75a40b4" kindref="member">_blinkingPorts</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blinkPort.portName<sp/>==<sp/>portName<sp/>&amp;&amp;<sp/>blinkPort.isActive)<sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/IndicatorInterface.cpp"/>
  </compounddef>
</doxygen>
