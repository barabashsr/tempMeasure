<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="class_indicator_interface" kind="class" language="C++" prot="public">
    <compoundname>IndicatorInterface</compoundname>
    <includes refid="_indicator_interface_8h" local="no">IndicatorInterface.h</includes>
    <innerclass refid="struct_indicator_interface_1_1_blinking_port" prot="public">IndicatorInterface::BlinkingPort</innerclass>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_indicator_interface_1a7ba08be0780b5c3e1e1a85fcb75a40b4" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_indicator_interface_1_1_blinking_port" kindref="compound">BlinkingPort</ref> &gt;</type>
        <definition>std::vector&lt;BlinkingPort&gt; IndicatorInterface::_blinkingPorts</definition>
        <argsstring></argsstring>
        <name>_blinkingPorts</name>
        <qualifiedname>IndicatorInterface::_blinkingPorts</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="98" column="17" bodyfile="include/IndicatorInterface.h" bodystart="98" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1a84a7f5f2394abde177b41becd340b678" compoundref="_indicator_interface_8cpp" startline="1029" endline="1036">isBlinking</referencedby>
        <referencedby refid="class_indicator_interface_1aafa418167df7eb74fc90fca14818a5eb" compoundref="_indicator_interface_8cpp" startline="966" endline="993">startBlinking</referencedby>
        <referencedby refid="class_indicator_interface_1a4458930151b73e21364fada5ba6fe129" compoundref="_indicator_interface_8cpp" startline="995" endline="1007">stopBlinking</referencedby>
        <referencedby refid="class_indicator_interface_1a891f8dd7ca0b76e7d89c0ab5567303da" compoundref="_indicator_interface_8cpp" startline="1009" endline="1027">updateBlinking</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1a2d448f416c41a0faa436e951764133ae" prot="private" static="no" mutable="no">
        <type>TwoWire *</type>
        <definition>TwoWire* IndicatorInterface::_i2cBus</definition>
        <argsstring></argsstring>
        <name>_i2cBus</name>
        <qualifiedname>IndicatorInterface::_i2cBus</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="101" column="13" bodyfile="include/IndicatorInterface.h" bodystart="101" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1a6083d92cd6b29de3ceb7a9619b9cb03b" compoundref="_indicator_interface_8cpp" startline="42" endline="73">begin</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1aa53e601aa0ea14bafc2260097067a341" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t IndicatorInterface::_pcf_i2cAddress</definition>
        <argsstring></argsstring>
        <name>_pcf_i2cAddress</name>
        <qualifiedname>IndicatorInterface::_pcf_i2cAddress</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="102" column="13" bodyfile="include/IndicatorInterface.h" bodystart="102" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
        <referencedby refid="class_indicator_interface_1a6133988d818d830ad9bc5c902c63ec29" compoundref="_indicator_interface_8cpp" startline="315" endline="335">printConfiguration</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1a9ccc079e94fae6312ed33cf2c6de05cf" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t IndicatorInterface::oled_i2cAddress</definition>
        <argsstring></argsstring>
        <name>oled_i2cAddress</name>
        <qualifiedname>IndicatorInterface::oled_i2cAddress</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="103" column="13" bodyfile="include/IndicatorInterface.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1ac99448e370702160d9a0d164fcaa6fc9" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int IndicatorInterface::_intPin</definition>
        <argsstring></argsstring>
        <name>_intPin</name>
        <qualifiedname>IndicatorInterface::_intPin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="104" column="9" bodyfile="include/IndicatorInterface.h" bodystart="104" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1a2c93b45764662f0db2348fd0fa9635db" compoundref="_indicator_interface_8cpp" startline="75" endline="90">_configureInterruptPin</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
        <referencedby refid="class_indicator_interface_1a6133988d818d830ad9bc5c902c63ec29" compoundref="_indicator_interface_8cpp" startline="315" endline="335">printConfiguration</referencedby>
        <referencedby refid="class_indicator_interface_1aa39afb334632d4c84a44086985c7274b" compoundref="_indicator_interface_8cpp" startline="35" endline="40">~IndicatorInterface</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1a90bbc0d232433baeb2cc326a86070570" prot="private" static="no" mutable="no">
        <type>PCF8575</type>
        <definition>PCF8575 IndicatorInterface::_pcf8575</definition>
        <argsstring></argsstring>
        <name>_pcf8575</name>
        <qualifiedname>IndicatorInterface::_pcf8575</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="105" column="13" bodyfile="include/IndicatorInterface.h" bodystart="105" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1a55da41c64cf3538a8bbb5252dd38b885" compoundref="_indicator_interface_8cpp" startline="352" endline="356">_clearInterrupt</referencedby>
        <referencedby refid="class_indicator_interface_1aad7f389062d31610e8b0d01e6c75413e" compoundref="_indicator_interface_8cpp" startline="358" endline="360">_readPCF</referencedby>
        <referencedby refid="class_indicator_interface_1a850e37bb28d58c3acad37496fa101e64" compoundref="_indicator_interface_8cpp" startline="362" endline="367">_writePCF</referencedby>
        <referencedby refid="class_indicator_interface_1a6083d92cd6b29de3ceb7a9619b9cb03b" compoundref="_indicator_interface_8cpp" startline="42" endline="73">begin</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1aa86f0bf7ac0aa21e3dd58e9f22a9d006" prot="private" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t IndicatorInterface::_directionMask</definition>
        <argsstring></argsstring>
        <name>_directionMask</name>
        <qualifiedname>IndicatorInterface::_directionMask</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="108" column="14" bodyfile="include/IndicatorInterface.h" bodystart="108" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
        <referencedby refid="class_indicator_interface_1a0a785a20dd66dbe0077d60e779930140" compoundref="_indicator_interface_8cpp" startline="251" endline="253">isOutput</referencedby>
        <referencedby refid="class_indicator_interface_1a6133988d818d830ad9bc5c902c63ec29" compoundref="_indicator_interface_8cpp" startline="315" endline="335">printConfiguration</referencedby>
        <referencedby refid="class_indicator_interface_1aac59d81d86b39af42b24afc4378736f9" compoundref="_indicator_interface_8cpp" startline="92" endline="106">setDirection</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1aa55179bd0567655980bef4f29df366c7" prot="private" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t IndicatorInterface::_modeMask</definition>
        <argsstring></argsstring>
        <name>_modeMask</name>
        <qualifiedname>IndicatorInterface::_modeMask</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="109" column="14" bodyfile="include/IndicatorInterface.h" bodystart="109" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
        <referencedby refid="class_indicator_interface_1a3b900f1de29de5489f19b94b27f4b5c1" compoundref="_indicator_interface_8cpp" startline="259" endline="261">isInverted</referencedby>
        <referencedby refid="class_indicator_interface_1a6133988d818d830ad9bc5c902c63ec29" compoundref="_indicator_interface_8cpp" startline="315" endline="335">printConfiguration</referencedby>
        <referencedby refid="class_indicator_interface_1a427021193bee0fcb775b4975ddd5fa54" compoundref="_indicator_interface_8cpp" startline="108" endline="110">setMode</referencedby>
        <referencedby refid="class_indicator_interface_1a42a67a268adfbcc9951e1dc71fe10af4" compoundref="_indicator_interface_8cpp" startline="393" endline="401">setPortInverted</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1a412495eaf75665fa714b37fc36a3b82d" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, uint8_t &gt;</type>
        <definition>std::map&lt;std::string, uint8_t&gt; IndicatorInterface::_portNames</definition>
        <argsstring></argsstring>
        <name>_portNames</name>
        <qualifiedname>IndicatorInterface::_portNames</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="110" column="14" bodyfile="include/IndicatorInterface.h" bodystart="110" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1a72e0284ed13aa7d2a22fe26ce90c0e3f" compoundref="_indicator_interface_8cpp" startline="263" endline="266">getPortNumber</referencedby>
        <referencedby refid="class_indicator_interface_1a6133988d818d830ad9bc5c902c63ec29" compoundref="_indicator_interface_8cpp" startline="315" endline="335">printConfiguration</referencedby>
        <referencedby refid="class_indicator_interface_1ae2b56d143ce0f191549656e8a95335cc" compoundref="_indicator_interface_8cpp" startline="231" endline="237">readPort</referencedby>
        <referencedby refid="class_indicator_interface_1a590c38190df4400edafe532b12a34062" compoundref="_indicator_interface_8cpp" startline="386" endline="391">setPortInverted</referencedby>
        <referencedby refid="class_indicator_interface_1a37cacef74b1515a3401941d9559eb828" compoundref="_indicator_interface_8cpp" startline="122" endline="127">setPortName</referencedby>
        <referencedby refid="class_indicator_interface_1a5d7c083ac206b53e5530709cc6d1df81" compoundref="_indicator_interface_8cpp" startline="112" endline="120">setPortNames</referencedby>
        <referencedby refid="class_indicator_interface_1a89a41cb1580141ed65c07ced6692322e" compoundref="_indicator_interface_8cpp" startline="129" endline="135">writePort</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1a14a57c25bda0a46008b2184fa04517ac" prot="private" static="no" mutable="no">
        <type>std::map&lt; uint8_t, std::string &gt;</type>
        <definition>std::map&lt;uint8_t, std::string&gt; IndicatorInterface::_portNumbers</definition>
        <argsstring></argsstring>
        <name>_portNumbers</name>
        <qualifiedname>IndicatorInterface::_portNumbers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="111" column="14" bodyfile="include/IndicatorInterface.h" bodystart="111" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1a657f720c3bab755d0864436241c847ad" compoundref="_indicator_interface_8cpp" startline="268" endline="271">getPortName</referencedby>
        <referencedby refid="class_indicator_interface_1a37cacef74b1515a3401941d9559eb828" compoundref="_indicator_interface_8cpp" startline="122" endline="127">setPortName</referencedby>
        <referencedby refid="class_indicator_interface_1a5d7c083ac206b53e5530709cc6d1df81" compoundref="_indicator_interface_8cpp" startline="112" endline="120">setPortNames</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1a9cebce08d61558a1c8f60bfd558ea656" prot="private" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t IndicatorInterface::_currentState</definition>
        <argsstring></argsstring>
        <name>_currentState</name>
        <qualifiedname>IndicatorInterface::_currentState</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="114" column="14" bodyfile="include/IndicatorInterface.h" bodystart="114" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1aea37934542bbe7b6c50941dff4646fef" compoundref="_indicator_interface_8cpp" startline="338" endline="350">_updateState</referencedby>
        <referencedby refid="class_indicator_interface_1a850e37bb28d58c3acad37496fa101e64" compoundref="_indicator_interface_8cpp" startline="362" endline="367">_writePCF</referencedby>
        <referencedby refid="class_indicator_interface_1a6083d92cd6b29de3ceb7a9619b9cb03b" compoundref="_indicator_interface_8cpp" startline="42" endline="73">begin</referencedby>
        <referencedby refid="class_indicator_interface_1a6e69fba966a59153449facfac1e04057" compoundref="_indicator_interface_8cpp" startline="218" endline="229">getCurrentState</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
        <referencedby refid="class_indicator_interface_1a52dd1fa732e288e344fe017f100d6c0d" compoundref="_indicator_interface_8cpp" startline="189" endline="208">setAllOutputs</referencedby>
        <referencedby refid="class_indicator_interface_1aac59d81d86b39af42b24afc4378736f9" compoundref="_indicator_interface_8cpp" startline="92" endline="106">setDirection</referencedby>
        <referencedby refid="class_indicator_interface_1a6b01cb93befc42d644388756ff986f6e" compoundref="_indicator_interface_8cpp" startline="137" endline="164">writePort</referencedby>
        <referencedby refid="class_indicator_interface_1afb68095f494956d24c4013a048b083bf" compoundref="_indicator_interface_8cpp" startline="166" endline="187">writePorts</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1ab7a2790dc55140d67ca7280ea3625002" prot="private" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t IndicatorInterface::_lastState</definition>
        <argsstring></argsstring>
        <name>_lastState</name>
        <qualifiedname>IndicatorInterface::_lastState</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="115" column="14" bodyfile="include/IndicatorInterface.h" bodystart="115" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1aea37934542bbe7b6c50941dff4646fef" compoundref="_indicator_interface_8cpp" startline="338" endline="350">_updateState</referencedby>
        <referencedby refid="class_indicator_interface_1a6083d92cd6b29de3ceb7a9619b9cb03b" compoundref="_indicator_interface_8cpp" startline="42" endline="73">begin</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1a219fe74846bda45250104f2d60e90d8a" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long IndicatorInterface::_lastReadTime</definition>
        <argsstring></argsstring>
        <name>_lastReadTime</name>
        <qualifiedname>IndicatorInterface::_lastReadTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="116" column="19" bodyfile="include/IndicatorInterface.h" bodystart="116" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1aea37934542bbe7b6c50941dff4646fef" compoundref="_indicator_interface_8cpp" startline="338" endline="350">_updateState</referencedby>
        <referencedby refid="class_indicator_interface_1a6083d92cd6b29de3ceb7a9619b9cb03b" compoundref="_indicator_interface_8cpp" startline="42" endline="73">begin</referencedby>
        <referencedby refid="class_indicator_interface_1a6e69fba966a59153449facfac1e04057" compoundref="_indicator_interface_8cpp" startline="218" endline="229">getCurrentState</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1a7f534e3c6ff085592acf3cc2b047b859" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long IndicatorInterface::_pollInterval</definition>
        <argsstring></argsstring>
        <name>_pollInterval</name>
        <qualifiedname>IndicatorInterface::_pollInterval</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="117" column="19" bodyfile="include/IndicatorInterface.h" bodystart="117" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1a6e69fba966a59153449facfac1e04057" compoundref="_indicator_interface_8cpp" startline="218" endline="229">getCurrentState</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1adac6de445ff7c1d1bc1afa660849c272" prot="private" static="no" mutable="no">
        <type>volatile bool</type>
        <definition>volatile bool IndicatorInterface::_interruptFlag</definition>
        <argsstring></argsstring>
        <name>_interruptFlag</name>
        <qualifiedname>IndicatorInterface::_interruptFlag</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="120" column="19" bodyfile="include/IndicatorInterface.h" bodystart="120" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1a4586496158d0d102742463c908d9b2c3" compoundref="_indicator_interface_8cpp" startline="739" endline="745">handleInterrupt</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1a93e019715a500012887e2bfc589c44b4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool IndicatorInterface::_useInterrupts</definition>
        <argsstring></argsstring>
        <name>_useInterrupts</name>
        <qualifiedname>IndicatorInterface::_useInterrupts</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="121" column="10" bodyfile="include/IndicatorInterface.h" bodystart="121" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1a6083d92cd6b29de3ceb7a9619b9cb03b" compoundref="_indicator_interface_8cpp" startline="42" endline="73">begin</referencedby>
        <referencedby refid="class_indicator_interface_1a6e69fba966a59153449facfac1e04057" compoundref="_indicator_interface_8cpp" startline="218" endline="229">getCurrentState</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
        <referencedby refid="class_indicator_interface_1a6133988d818d830ad9bc5c902c63ec29" compoundref="_indicator_interface_8cpp" startline="315" endline="335">printConfiguration</referencedby>
        <referencedby refid="class_indicator_interface_1aa39afb334632d4c84a44086985c7274b" compoundref="_indicator_interface_8cpp" startline="35" endline="40">~IndicatorInterface</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1a7a520f568f2ce58dd2692b9e7a217d21" prot="private" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* IndicatorInterface::_interruptCallback) (uint16_t currentState, uint16_t changedPins)</definition>
        <argsstring>)(uint16_t currentState, uint16_t changedPins)</argsstring>
        <name>_interruptCallback</name>
        <qualifiedname>IndicatorInterface::_interruptCallback</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="122" column="5" bodyfile="include/IndicatorInterface.h" bodystart="122" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1aea37934542bbe7b6c50941dff4646fef" compoundref="_indicator_interface_8cpp" startline="338" endline="350">_updateState</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
        <referencedby refid="class_indicator_interface_1a49ab6e47d490a3367acc819bf6116d9b" compoundref="_indicator_interface_8cpp" startline="280" endline="282">setInterruptCallback</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1ad22a15d0f7561db46969879a10aa1de5" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long IndicatorInterface::_oledSleepDelay</definition>
        <argsstring></argsstring>
        <name>_oledSleepDelay</name>
        <qualifiedname>IndicatorInterface::_oledSleepDelay</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="139" column="10" bodyfile="include/IndicatorInterface.h" bodystart="139" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1a01fa37471cccc2655c0a817b1cab0826" compoundref="_indicator_interface_8cpp" startline="669" endline="676">_handleOLEDSleep</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
        <referencedby refid="class_indicator_interface_1a0f23c8a09f237eca7d71a9ff4e560e96" compoundref="_indicator_interface_8cpp" startline="412" endline="415">setOledSleepDelay</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1ab74bae75e78806a6eb4df3ad364321cd" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int IndicatorInterface::_oledLines</definition>
        <argsstring></argsstring>
        <name>_oledLines</name>
        <qualifiedname>IndicatorInterface::_oledLines</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="140" column="9" bodyfile="include/IndicatorInterface.h" bodystart="140" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1a2f021f6fa16dec590a8b9cf41a82349d" compoundref="_indicator_interface_8cpp" startline="510" endline="561">_calculateDisplayParams</referencedby>
        <referencedby refid="class_indicator_interface_1aa24a016a7358ca6f0c955794d5774512" compoundref="_indicator_interface_8cpp" startline="931" endline="940">_restoreCurrentText</referencedby>
        <referencedby refid="class_indicator_interface_1a30f46d2a644df56a3e0864dbee8cf7d1" compoundref="_indicator_interface_8cpp" startline="922" endline="929">_saveCurrentText</referencedby>
        <referencedby refid="class_indicator_interface_1a38acc1a5120e275253fc4e458aea91f0" compoundref="_indicator_interface_8cpp" startline="601" endline="628">_updateOLEDDisplay</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
        <referencedby refid="class_indicator_interface_1a3d7f75c8c69808ecc98d1e1fb272984d" compoundref="_indicator_interface_8cpp" startline="753" endline="776">pushLine</referencedby>
        <referencedby refid="class_indicator_interface_1acf545ec2921c786020f7826a846b364d" compoundref="_indicator_interface_8cpp" startline="417" endline="424">setOledMode</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1ae69883abed1813161f5e451245136fb3" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String IndicatorInterface::_textBuffer[5]</definition>
        <argsstring>[5]</argsstring>
        <name>_textBuffer</name>
        <qualifiedname>IndicatorInterface::_textBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="141" column="12" bodyfile="include/IndicatorInterface.h" bodystart="141" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1a56c23034a963e2099e36cf55ec70055e" compoundref="_indicator_interface_8cpp" startline="631" endline="663">_drawTextLine</referencedby>
        <referencedby refid="class_indicator_interface_1a520ad5df9ff7c3f3b716b2b179e50a7e" compoundref="_indicator_interface_8cpp" startline="698" endline="726">_handleScrolling</referencedby>
        <referencedby refid="class_indicator_interface_1aa24a016a7358ca6f0c955794d5774512" compoundref="_indicator_interface_8cpp" startline="931" endline="940">_restoreCurrentText</referencedby>
        <referencedby refid="class_indicator_interface_1a30f46d2a644df56a3e0864dbee8cf7d1" compoundref="_indicator_interface_8cpp" startline="922" endline="929">_saveCurrentText</referencedby>
        <referencedby refid="class_indicator_interface_1ac3d970f4cfa8af402fa2538cf05e8cd6" compoundref="_indicator_interface_8cpp" startline="426" endline="446">printText</referencedby>
        <referencedby refid="class_indicator_interface_1a3d7f75c8c69808ecc98d1e1fb272984d" compoundref="_indicator_interface_8cpp" startline="753" endline="776">pushLine</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1afc6b2600d29f5d85758fd75cae83b0b9" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int IndicatorInterface::_textBufferSize</definition>
        <argsstring></argsstring>
        <name>_textBufferSize</name>
        <qualifiedname>IndicatorInterface::_textBufferSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="142" column="9" bodyfile="include/IndicatorInterface.h" bodystart="142" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1a56c23034a963e2099e36cf55ec70055e" compoundref="_indicator_interface_8cpp" startline="631" endline="663">_drawTextLine</referencedby>
        <referencedby refid="class_indicator_interface_1a520ad5df9ff7c3f3b716b2b179e50a7e" compoundref="_indicator_interface_8cpp" startline="698" endline="726">_handleScrolling</referencedby>
        <referencedby refid="class_indicator_interface_1aa24a016a7358ca6f0c955794d5774512" compoundref="_indicator_interface_8cpp" startline="931" endline="940">_restoreCurrentText</referencedby>
        <referencedby refid="class_indicator_interface_1a30f46d2a644df56a3e0864dbee8cf7d1" compoundref="_indicator_interface_8cpp" startline="922" endline="929">_saveCurrentText</referencedby>
        <referencedby refid="class_indicator_interface_1a38acc1a5120e275253fc4e458aea91f0" compoundref="_indicator_interface_8cpp" startline="601" endline="628">_updateOLEDDisplay</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
        <referencedby refid="class_indicator_interface_1ac3d970f4cfa8af402fa2538cf05e8cd6" compoundref="_indicator_interface_8cpp" startline="426" endline="446">printText</referencedby>
        <referencedby refid="class_indicator_interface_1a3d7f75c8c69808ecc98d1e1fb272984d" compoundref="_indicator_interface_8cpp" startline="753" endline="776">pushLine</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1a942bea540c40919390bc25816cc5b064" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool IndicatorInterface::_oledOn</definition>
        <argsstring></argsstring>
        <name>_oledOn</name>
        <qualifiedname>IndicatorInterface::_oledOn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="143" column="10" bodyfile="include/IndicatorInterface.h" bodystart="143" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1a38acc1a5120e275253fc4e458aea91f0" compoundref="_indicator_interface_8cpp" startline="601" endline="628">_updateOLEDDisplay</referencedby>
        <referencedby refid="class_indicator_interface_1af64dc2a4b4256050b070991dfaf05f1a" compoundref="_indicator_interface_8cpp" startline="730" endline="736">_wakeOLED</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
        <referencedby refid="class_indicator_interface_1a62ad23d6e52cf3abe43f6dad6000ebbd" compoundref="_indicator_interface_8cpp" startline="461" endline="465">setOLEDOff</referencedby>
        <referencedby refid="class_indicator_interface_1a7d807749bff6ef06c128617b35f4dcce" compoundref="_indicator_interface_8cpp" startline="467" endline="473">setOLEDOn</referencedby>
        <referencedby refid="class_indicator_interface_1a5f9eaa4ad4d2da76bf9536a4dfad8723" compoundref="_indicator_interface_8cpp" startline="475" endline="489">updateOLED</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1ab944524710a5026f7f20d62d44a2dee7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool IndicatorInterface::_oledBlink</definition>
        <argsstring></argsstring>
        <name>_oledBlink</name>
        <qualifiedname>IndicatorInterface::_oledBlink</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="144" column="10" bodyfile="include/IndicatorInterface.h" bodystart="144" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1afc1bacc73d487f912d7a71f559e193ef" compoundref="_indicator_interface_8cpp" startline="678" endline="696">_handleOLEDBlink</referencedby>
        <referencedby refid="class_indicator_interface_1ac5ef0d744798dc4643c4fa0074e9b503" compoundref="_indicator_interface_8cpp" startline="901" endline="913">blinkCross</referencedby>
        <referencedby refid="class_indicator_interface_1aa7c6bd010177acde7097bd4b186fa96d" compoundref="_indicator_interface_8cpp" startline="887" endline="899">blinkOK</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
        <referencedby refid="class_indicator_interface_1ab8a4f7cc08c2fb112aa893f0aeca044a" compoundref="_indicator_interface_8cpp" startline="449" endline="459">setOLEDblink</referencedby>
        <referencedby refid="class_indicator_interface_1a62ad23d6e52cf3abe43f6dad6000ebbd" compoundref="_indicator_interface_8cpp" startline="461" endline="465">setOLEDOff</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1aa85df0334d9959edc154bed17747ae04" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int IndicatorInterface::_blinkTimeOn</definition>
        <argsstring></argsstring>
        <name>_blinkTimeOn</name>
        <qualifiedname>IndicatorInterface::_blinkTimeOn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="145" column="9" bodyfile="include/IndicatorInterface.h" bodystart="145" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1afc1bacc73d487f912d7a71f559e193ef" compoundref="_indicator_interface_8cpp" startline="678" endline="696">_handleOLEDBlink</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
        <referencedby refid="class_indicator_interface_1ab8a4f7cc08c2fb112aa893f0aeca044a" compoundref="_indicator_interface_8cpp" startline="449" endline="459">setOLEDblink</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1a3080269e210288582ea05cf63afd16d5" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int IndicatorInterface::_blinkTimeOff</definition>
        <argsstring></argsstring>
        <name>_blinkTimeOff</name>
        <qualifiedname>IndicatorInterface::_blinkTimeOff</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="146" column="9" bodyfile="include/IndicatorInterface.h" bodystart="146" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1afc1bacc73d487f912d7a71f559e193ef" compoundref="_indicator_interface_8cpp" startline="678" endline="696">_handleOLEDBlink</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
        <referencedby refid="class_indicator_interface_1ab8a4f7cc08c2fb112aa893f0aeca044a" compoundref="_indicator_interface_8cpp" startline="449" endline="459">setOLEDblink</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1a5026d82e76d2b3efd1eab90878803e8d" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long IndicatorInterface::_lastBlinkTime</definition>
        <argsstring></argsstring>
        <name>_lastBlinkTime</name>
        <qualifiedname>IndicatorInterface::_lastBlinkTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="147" column="19" bodyfile="include/IndicatorInterface.h" bodystart="147" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1afc1bacc73d487f912d7a71f559e193ef" compoundref="_indicator_interface_8cpp" startline="678" endline="696">_handleOLEDBlink</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
        <referencedby refid="class_indicator_interface_1ab8a4f7cc08c2fb112aa893f0aeca044a" compoundref="_indicator_interface_8cpp" startline="449" endline="459">setOLEDblink</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1a5b059b24e3fa66de2165fb17e9026fd7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool IndicatorInterface::_blinkState</definition>
        <argsstring></argsstring>
        <name>_blinkState</name>
        <qualifiedname>IndicatorInterface::_blinkState</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="148" column="10" bodyfile="include/IndicatorInterface.h" bodystart="148" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1afc1bacc73d487f912d7a71f559e193ef" compoundref="_indicator_interface_8cpp" startline="678" endline="696">_handleOLEDBlink</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
        <referencedby refid="class_indicator_interface_1ab8a4f7cc08c2fb112aa893f0aeca044a" compoundref="_indicator_interface_8cpp" startline="449" endline="459">setOLEDblink</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1a608486f8f9a8373d4363b753d61b8968" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long IndicatorInterface::_lastActivityTime</definition>
        <argsstring></argsstring>
        <name>_lastActivityTime</name>
        <qualifiedname>IndicatorInterface::_lastActivityTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="149" column="19" bodyfile="include/IndicatorInterface.h" bodystart="149" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1a01fa37471cccc2655c0a817b1cab0826" compoundref="_indicator_interface_8cpp" startline="669" endline="676">_handleOLEDSleep</referencedby>
        <referencedby refid="class_indicator_interface_1a57958896691800d0526ad7941e305136" compoundref="_indicator_interface_8cpp" startline="404" endline="410">_initOLED</referencedby>
        <referencedby refid="class_indicator_interface_1af64dc2a4b4256050b070991dfaf05f1a" compoundref="_indicator_interface_8cpp" startline="730" endline="736">_wakeOLED</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
        <referencedby refid="class_indicator_interface_1ac3d970f4cfa8af402fa2538cf05e8cd6" compoundref="_indicator_interface_8cpp" startline="426" endline="446">printText</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1a36e848846a6ca0327c1f0d3f0a8e80ed" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool IndicatorInterface::_oledSleeping</definition>
        <argsstring></argsstring>
        <name>_oledSleeping</name>
        <qualifiedname>IndicatorInterface::_oledSleeping</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="150" column="10" bodyfile="include/IndicatorInterface.h" bodystart="150" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1afc1bacc73d487f912d7a71f559e193ef" compoundref="_indicator_interface_8cpp" startline="678" endline="696">_handleOLEDBlink</referencedby>
        <referencedby refid="class_indicator_interface_1a01fa37471cccc2655c0a817b1cab0826" compoundref="_indicator_interface_8cpp" startline="669" endline="676">_handleOLEDSleep</referencedby>
        <referencedby refid="class_indicator_interface_1a38acc1a5120e275253fc4e458aea91f0" compoundref="_indicator_interface_8cpp" startline="601" endline="628">_updateOLEDDisplay</referencedby>
        <referencedby refid="class_indicator_interface_1af64dc2a4b4256050b070991dfaf05f1a" compoundref="_indicator_interface_8cpp" startline="730" endline="736">_wakeOLED</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
        <referencedby refid="class_indicator_interface_1a7d807749bff6ef06c128617b35f4dcce" compoundref="_indicator_interface_8cpp" startline="467" endline="473">setOLEDOn</referencedby>
        <referencedby refid="class_indicator_interface_1a5f9eaa4ad4d2da76bf9536a4dfad8723" compoundref="_indicator_interface_8cpp" startline="475" endline="489">updateOLED</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1ae2a7330b015b9da1a2c151821756a4d6" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int IndicatorInterface::_scrollOffset[5]</definition>
        <argsstring>[5]</argsstring>
        <name>_scrollOffset</name>
        <qualifiedname>IndicatorInterface::_scrollOffset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="153" column="9" bodyfile="include/IndicatorInterface.h" bodystart="153" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1a56c23034a963e2099e36cf55ec70055e" compoundref="_indicator_interface_8cpp" startline="631" endline="663">_drawTextLine</referencedby>
        <referencedby refid="class_indicator_interface_1a520ad5df9ff7c3f3b716b2b179e50a7e" compoundref="_indicator_interface_8cpp" startline="698" endline="726">_handleScrolling</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
        <referencedby refid="class_indicator_interface_1ac3d970f4cfa8af402fa2538cf05e8cd6" compoundref="_indicator_interface_8cpp" startline="426" endline="446">printText</referencedby>
        <referencedby refid="class_indicator_interface_1a3d7f75c8c69808ecc98d1e1fb272984d" compoundref="_indicator_interface_8cpp" startline="753" endline="776">pushLine</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1a4a32b171da54c67284aebede765d976d" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long IndicatorInterface::_lastScrollTime</definition>
        <argsstring></argsstring>
        <name>_lastScrollTime</name>
        <qualifiedname>IndicatorInterface::_lastScrollTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="154" column="19" bodyfile="include/IndicatorInterface.h" bodystart="154" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1a520ad5df9ff7c3f3b716b2b179e50a7e" compoundref="_indicator_interface_8cpp" startline="698" endline="726">_handleScrolling</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1a247d77090e8e2bb0db34c401c89cb002" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int IndicatorInterface::_scrollDelay</definition>
        <argsstring></argsstring>
        <name>_scrollDelay</name>
        <qualifiedname>IndicatorInterface::_scrollDelay</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="155" column="9" bodyfile="include/IndicatorInterface.h" bodystart="155" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1a520ad5df9ff7c3f3b716b2b179e50a7e" compoundref="_indicator_interface_8cpp" startline="698" endline="726">_handleScrolling</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1a12aa1363cd7159475c7ca7b145b688cd" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int IndicatorInterface::_charWidth</definition>
        <argsstring></argsstring>
        <name>_charWidth</name>
        <qualifiedname>IndicatorInterface::_charWidth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="156" column="9" bodyfile="include/IndicatorInterface.h" bodystart="156" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1a2f021f6fa16dec590a8b9cf41a82349d" compoundref="_indicator_interface_8cpp" startline="510" endline="561">_calculateDisplayParams</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1aa0218f414dcc1be0b62c29e7d39b985d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int IndicatorInterface::_lineHeight</definition>
        <argsstring></argsstring>
        <name>_lineHeight</name>
        <qualifiedname>IndicatorInterface::_lineHeight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="157" column="9" bodyfile="include/IndicatorInterface.h" bodystart="157" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1a2f021f6fa16dec590a8b9cf41a82349d" compoundref="_indicator_interface_8cpp" startline="510" endline="561">_calculateDisplayParams</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1a54182aa1c8eb74b781bea42002efb18e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int IndicatorInterface::_maxCharsPerLine</definition>
        <argsstring></argsstring>
        <name>_maxCharsPerLine</name>
        <qualifiedname>IndicatorInterface::_maxCharsPerLine</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="158" column="9" bodyfile="include/IndicatorInterface.h" bodystart="158" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1a2f021f6fa16dec590a8b9cf41a82349d" compoundref="_indicator_interface_8cpp" startline="510" endline="561">_calculateDisplayParams</referencedby>
        <referencedby refid="class_indicator_interface_1a56c23034a963e2099e36cf55ec70055e" compoundref="_indicator_interface_8cpp" startline="631" endline="663">_drawTextLine</referencedby>
        <referencedby refid="class_indicator_interface_1a520ad5df9ff7c3f3b716b2b179e50a7e" compoundref="_indicator_interface_8cpp" startline="698" endline="726">_handleScrolling</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1acc98489f9f8aad76f42bb4178626b631" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String IndicatorInterface::_savedTextBuffer[5]</definition>
        <argsstring>[5]</argsstring>
        <name>_savedTextBuffer</name>
        <qualifiedname>IndicatorInterface::_savedTextBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="171" column="12" bodyfile="include/IndicatorInterface.h" bodystart="171" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1aa24a016a7358ca6f0c955794d5774512" compoundref="_indicator_interface_8cpp" startline="931" endline="940">_restoreCurrentText</referencedby>
        <referencedby refid="class_indicator_interface_1a30f46d2a644df56a3e0864dbee8cf7d1" compoundref="_indicator_interface_8cpp" startline="922" endline="929">_saveCurrentText</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1aca206ae7f20a60f0fd4661cebc9c113f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int IndicatorInterface::_savedTextBufferSize</definition>
        <argsstring></argsstring>
        <name>_savedTextBufferSize</name>
        <qualifiedname>IndicatorInterface::_savedTextBufferSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="172" column="9" bodyfile="include/IndicatorInterface.h" bodystart="172" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1aa24a016a7358ca6f0c955794d5774512" compoundref="_indicator_interface_8cpp" startline="931" endline="940">_restoreCurrentText</referencedby>
        <referencedby refid="class_indicator_interface_1a30f46d2a644df56a3e0864dbee8cf7d1" compoundref="_indicator_interface_8cpp" startline="922" endline="929">_saveCurrentText</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1a4017512513ab2ada6ec2791d481708fb" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int IndicatorInterface::_savedOledLines</definition>
        <argsstring></argsstring>
        <name>_savedOledLines</name>
        <qualifiedname>IndicatorInterface::_savedOledLines</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="173" column="9" bodyfile="include/IndicatorInterface.h" bodystart="173" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1aa24a016a7358ca6f0c955794d5774512" compoundref="_indicator_interface_8cpp" startline="931" endline="940">_restoreCurrentText</referencedby>
        <referencedby refid="class_indicator_interface_1a30f46d2a644df56a3e0864dbee8cf7d1" compoundref="_indicator_interface_8cpp" startline="922" endline="929">_saveCurrentText</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1a3e32b13b3477abe772192591a20a907e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool IndicatorInterface::_isBlinkingOK</definition>
        <argsstring></argsstring>
        <name>_isBlinkingOK</name>
        <qualifiedname>IndicatorInterface::_isBlinkingOK</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="174" column="10" bodyfile="include/IndicatorInterface.h" bodystart="174" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1ad70f8a9e7f527bc4faeb576b47483385" compoundref="_indicator_interface_8cpp" startline="942" endline="962">_handleSpecialBlink</referencedby>
        <referencedby refid="class_indicator_interface_1ac5ef0d744798dc4643c4fa0074e9b503" compoundref="_indicator_interface_8cpp" startline="901" endline="913">blinkCross</referencedby>
        <referencedby refid="class_indicator_interface_1aa7c6bd010177acde7097bd4b186fa96d" compoundref="_indicator_interface_8cpp" startline="887" endline="899">blinkOK</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
        <referencedby refid="class_indicator_interface_1a1573397b085b78ea7f714665d55cece0" compoundref="_indicator_interface_8cpp" startline="916" endline="920">stopBlinking</referencedby>
        <referencedby refid="class_indicator_interface_1a5f9eaa4ad4d2da76bf9536a4dfad8723" compoundref="_indicator_interface_8cpp" startline="475" endline="489">updateOLED</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1a603d635417e1a1c3ed705296051ac32c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool IndicatorInterface::_isBlinkingCross</definition>
        <argsstring></argsstring>
        <name>_isBlinkingCross</name>
        <qualifiedname>IndicatorInterface::_isBlinkingCross</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="175" column="10" bodyfile="include/IndicatorInterface.h" bodystart="175" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1ad70f8a9e7f527bc4faeb576b47483385" compoundref="_indicator_interface_8cpp" startline="942" endline="962">_handleSpecialBlink</referencedby>
        <referencedby refid="class_indicator_interface_1ac5ef0d744798dc4643c4fa0074e9b503" compoundref="_indicator_interface_8cpp" startline="901" endline="913">blinkCross</referencedby>
        <referencedby refid="class_indicator_interface_1aa7c6bd010177acde7097bd4b186fa96d" compoundref="_indicator_interface_8cpp" startline="887" endline="899">blinkOK</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
        <referencedby refid="class_indicator_interface_1a1573397b085b78ea7f714665d55cece0" compoundref="_indicator_interface_8cpp" startline="916" endline="920">stopBlinking</referencedby>
        <referencedby refid="class_indicator_interface_1a5f9eaa4ad4d2da76bf9536a4dfad8723" compoundref="_indicator_interface_8cpp" startline="475" endline="489">updateOLED</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1a13c8569b739cf6e99de0bd3ad7c20801" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int IndicatorInterface::_blinkDelayTime</definition>
        <argsstring></argsstring>
        <name>_blinkDelayTime</name>
        <qualifiedname>IndicatorInterface::_blinkDelayTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="176" column="9" bodyfile="include/IndicatorInterface.h" bodystart="176" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1ad70f8a9e7f527bc4faeb576b47483385" compoundref="_indicator_interface_8cpp" startline="942" endline="962">_handleSpecialBlink</referencedby>
        <referencedby refid="class_indicator_interface_1ac5ef0d744798dc4643c4fa0074e9b503" compoundref="_indicator_interface_8cpp" startline="901" endline="913">blinkCross</referencedby>
        <referencedby refid="class_indicator_interface_1aa7c6bd010177acde7097bd4b186fa96d" compoundref="_indicator_interface_8cpp" startline="887" endline="899">blinkOK</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1af2d0c2c932ac0b9ebe7e6266b63a218b" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long IndicatorInterface::_lastBlinkToggle</definition>
        <argsstring></argsstring>
        <name>_lastBlinkToggle</name>
        <qualifiedname>IndicatorInterface::_lastBlinkToggle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="177" column="19" bodyfile="include/IndicatorInterface.h" bodystart="177" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1ad70f8a9e7f527bc4faeb576b47483385" compoundref="_indicator_interface_8cpp" startline="942" endline="962">_handleSpecialBlink</referencedby>
        <referencedby refid="class_indicator_interface_1ac5ef0d744798dc4643c4fa0074e9b503" compoundref="_indicator_interface_8cpp" startline="901" endline="913">blinkCross</referencedby>
        <referencedby refid="class_indicator_interface_1aa7c6bd010177acde7097bd4b186fa96d" compoundref="_indicator_interface_8cpp" startline="887" endline="899">blinkOK</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1a5b4a1c66db5909b0eeef1016287f8a75" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool IndicatorInterface::_blinkShowSpecial</definition>
        <argsstring></argsstring>
        <name>_blinkShowSpecial</name>
        <qualifiedname>IndicatorInterface::_blinkShowSpecial</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="178" column="10" bodyfile="include/IndicatorInterface.h" bodystart="178" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1ad70f8a9e7f527bc4faeb576b47483385" compoundref="_indicator_interface_8cpp" startline="942" endline="962">_handleSpecialBlink</referencedby>
        <referencedby refid="class_indicator_interface_1ac5ef0d744798dc4643c4fa0074e9b503" compoundref="_indicator_interface_8cpp" startline="901" endline="913">blinkCross</referencedby>
        <referencedby refid="class_indicator_interface_1aa7c6bd010177acde7097bd4b186fa96d" compoundref="_indicator_interface_8cpp" startline="887" endline="899">blinkOK</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_indicator_interface_1adefd227476c9f85bc7fb1302c99fb60b" prot="private" static="yes" mutable="no">
        <type><ref refid="class_indicator_interface" kindref="compound">IndicatorInterface</ref> *</type>
        <definition>IndicatorInterface * IndicatorInterface::_instance</definition>
        <argsstring></argsstring>
        <name>_instance</name>
        <qualifiedname>IndicatorInterface::_instance</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="134" column="31" bodyfile="include/IndicatorInterface.h" bodystart="134" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1ad4fddb918d5f80046ab61a70fbc9eed2" compoundref="_indicator_interface_8cpp" startline="379" endline="383">_staticInterruptHandler</referencedby>
        <referencedby refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" compoundref="_indicator_interface_8cpp" startline="7" endline="31">IndicatorInterface</referencedby>
        <referencedby refid="class_indicator_interface_1aa39afb334632d4c84a44086985c7274b" compoundref="_indicator_interface_8cpp" startline="35" endline="40">~IndicatorInterface</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" prot="private" static="yes" mutable="no">
        <type>U8G2_SH1106_128X64_NONAME_F_HW_I2C</type>
        <definition>U8G2_SH1106_128X64_NONAME_F_HW_I2C IndicatorInterface::u8g2</definition>
        <argsstring></argsstring>
        <name>u8g2</name>
        <qualifiedname>IndicatorInterface::u8g2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="136" column="47" bodyfile="include/IndicatorInterface.h" bodystart="136" bodyend="-1"/>
        <referencedby refid="class_indicator_interface_1a2f021f6fa16dec590a8b9cf41a82349d" compoundref="_indicator_interface_8cpp" startline="510" endline="561">_calculateDisplayParams</referencedby>
        <referencedby refid="class_indicator_interface_1a56c23034a963e2099e36cf55ec70055e" compoundref="_indicator_interface_8cpp" startline="631" endline="663">_drawTextLine</referencedby>
        <referencedby refid="class_indicator_interface_1afc1bacc73d487f912d7a71f559e193ef" compoundref="_indicator_interface_8cpp" startline="678" endline="696">_handleOLEDBlink</referencedby>
        <referencedby refid="class_indicator_interface_1a01fa37471cccc2655c0a817b1cab0826" compoundref="_indicator_interface_8cpp" startline="669" endline="676">_handleOLEDSleep</referencedby>
        <referencedby refid="class_indicator_interface_1a57958896691800d0526ad7941e305136" compoundref="_indicator_interface_8cpp" startline="404" endline="410">_initOLED</referencedby>
        <referencedby refid="class_indicator_interface_1a38acc1a5120e275253fc4e458aea91f0" compoundref="_indicator_interface_8cpp" startline="601" endline="628">_updateOLEDDisplay</referencedby>
        <referencedby refid="class_indicator_interface_1af64dc2a4b4256050b070991dfaf05f1a" compoundref="_indicator_interface_8cpp" startline="730" endline="736">_wakeOLED</referencedby>
        <referencedby refid="class_indicator_interface_1a6083d92cd6b29de3ceb7a9619b9cb03b" compoundref="_indicator_interface_8cpp" startline="42" endline="73">begin</referencedby>
        <referencedby refid="class_indicator_interface_1a54fa76657f9ef0c9e19b6e94d682fb65" compoundref="_indicator_interface_8cpp" startline="808" endline="849">displayCross</referencedby>
        <referencedby refid="class_indicator_interface_1aaa36eb97521df2decb957418acc277a9" compoundref="_indicator_interface_8cpp" startline="778" endline="806">displayOK</referencedby>
        <referencedby refid="class_indicator_interface_1a62ad23d6e52cf3abe43f6dad6000ebbd" compoundref="_indicator_interface_8cpp" startline="461" endline="465">setOLEDOff</referencedby>
        <referencedby refid="class_indicator_interface_1a7d807749bff6ef06c128617b35f4dcce" compoundref="_indicator_interface_8cpp" startline="467" endline="473">setOLEDOn</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>IndicatorInterface::IndicatorInterface</definition>
        <argsstring>(TwoWire &amp;i2cBus, uint8_t pcf_i2cAddress, int intPin=-1)</argsstring>
        <name>IndicatorInterface</name>
        <qualifiedname>IndicatorInterface::IndicatorInterface</qualifiedname>
        <param>
          <type>TwoWire &amp;</type>
          <declname>i2cBus</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pcf_i2cAddress</declname>
        </param>
        <param>
          <type>int</type>
          <declname>intPin</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="24" column="5" bodyfile="src/IndicatorInterface.cpp" bodystart="7" bodyend="31"/>
        <references refid="class_indicator_interface_1a13c8569b739cf6e99de0bd3ad7c20801" compoundref="_indicator_interface_8h" startline="176">_blinkDelayTime</references>
        <references refid="class_indicator_interface_1a5b4a1c66db5909b0eeef1016287f8a75" compoundref="_indicator_interface_8h" startline="178">_blinkShowSpecial</references>
        <references refid="class_indicator_interface_1a5b059b24e3fa66de2165fb17e9026fd7" compoundref="_indicator_interface_8h" startline="148">_blinkState</references>
        <references refid="class_indicator_interface_1a3080269e210288582ea05cf63afd16d5" compoundref="_indicator_interface_8h" startline="146">_blinkTimeOff</references>
        <references refid="class_indicator_interface_1aa85df0334d9959edc154bed17747ae04" compoundref="_indicator_interface_8h" startline="145">_blinkTimeOn</references>
        <references refid="class_indicator_interface_1a12aa1363cd7159475c7ca7b145b688cd" compoundref="_indicator_interface_8h" startline="156">_charWidth</references>
        <references refid="class_indicator_interface_1a9cebce08d61558a1c8f60bfd558ea656" compoundref="_indicator_interface_8h" startline="114">_currentState</references>
        <references refid="class_indicator_interface_1aa86f0bf7ac0aa21e3dd58e9f22a9d006" compoundref="_indicator_interface_8h" startline="108">_directionMask</references>
        <references refid="class_indicator_interface_1a2d448f416c41a0faa436e951764133ae" compoundref="_indicator_interface_8h" startline="101">_i2cBus</references>
        <references refid="class_indicator_interface_1adefd227476c9f85bc7fb1302c99fb60b" compoundref="_indicator_interface_8h" startline="134">_instance</references>
        <references refid="class_indicator_interface_1a7a520f568f2ce58dd2692b9e7a217d21" compoundref="_indicator_interface_8h" startline="122">_interruptCallback</references>
        <references refid="class_indicator_interface_1adac6de445ff7c1d1bc1afa660849c272" compoundref="_indicator_interface_8h" startline="120">_interruptFlag</references>
        <references refid="class_indicator_interface_1ac99448e370702160d9a0d164fcaa6fc9" compoundref="_indicator_interface_8h" startline="104">_intPin</references>
        <references refid="class_indicator_interface_1a603d635417e1a1c3ed705296051ac32c" compoundref="_indicator_interface_8h" startline="175">_isBlinkingCross</references>
        <references refid="class_indicator_interface_1a3e32b13b3477abe772192591a20a907e" compoundref="_indicator_interface_8h" startline="174">_isBlinkingOK</references>
        <references refid="class_indicator_interface_1a608486f8f9a8373d4363b753d61b8968" compoundref="_indicator_interface_8h" startline="149">_lastActivityTime</references>
        <references refid="class_indicator_interface_1a5026d82e76d2b3efd1eab90878803e8d" compoundref="_indicator_interface_8h" startline="147">_lastBlinkTime</references>
        <references refid="class_indicator_interface_1af2d0c2c932ac0b9ebe7e6266b63a218b" compoundref="_indicator_interface_8h" startline="177">_lastBlinkToggle</references>
        <references refid="class_indicator_interface_1a219fe74846bda45250104f2d60e90d8a" compoundref="_indicator_interface_8h" startline="116">_lastReadTime</references>
        <references refid="class_indicator_interface_1a4a32b171da54c67284aebede765d976d" compoundref="_indicator_interface_8h" startline="154">_lastScrollTime</references>
        <references refid="class_indicator_interface_1ab7a2790dc55140d67ca7280ea3625002" compoundref="_indicator_interface_8h" startline="115">_lastState</references>
        <references refid="class_indicator_interface_1aa0218f414dcc1be0b62c29e7d39b985d" compoundref="_indicator_interface_8h" startline="157">_lineHeight</references>
        <references refid="class_indicator_interface_1a54182aa1c8eb74b781bea42002efb18e" compoundref="_indicator_interface_8h" startline="158">_maxCharsPerLine</references>
        <references refid="class_indicator_interface_1aa55179bd0567655980bef4f29df366c7" compoundref="_indicator_interface_8h" startline="109">_modeMask</references>
        <references refid="class_indicator_interface_1ab944524710a5026f7f20d62d44a2dee7" compoundref="_indicator_interface_8h" startline="144">_oledBlink</references>
        <references refid="class_indicator_interface_1ab74bae75e78806a6eb4df3ad364321cd" compoundref="_indicator_interface_8h" startline="140">_oledLines</references>
        <references refid="class_indicator_interface_1a942bea540c40919390bc25816cc5b064" compoundref="_indicator_interface_8h" startline="143">_oledOn</references>
        <references refid="class_indicator_interface_1ad22a15d0f7561db46969879a10aa1de5" compoundref="_indicator_interface_8h" startline="139">_oledSleepDelay</references>
        <references refid="class_indicator_interface_1a36e848846a6ca0327c1f0d3f0a8e80ed" compoundref="_indicator_interface_8h" startline="150">_oledSleeping</references>
        <references refid="class_indicator_interface_1a90bbc0d232433baeb2cc326a86070570" compoundref="_indicator_interface_8h" startline="105">_pcf8575</references>
        <references refid="class_indicator_interface_1aa53e601aa0ea14bafc2260097067a341" compoundref="_indicator_interface_8h" startline="102">_pcf_i2cAddress</references>
        <references refid="class_indicator_interface_1a7f534e3c6ff085592acf3cc2b047b859" compoundref="_indicator_interface_8h" startline="117">_pollInterval</references>
        <references refid="class_indicator_interface_1a4017512513ab2ada6ec2791d481708fb" compoundref="_indicator_interface_8h" startline="173">_savedOledLines</references>
        <references refid="class_indicator_interface_1aca206ae7f20a60f0fd4661cebc9c113f" compoundref="_indicator_interface_8h" startline="172">_savedTextBufferSize</references>
        <references refid="class_indicator_interface_1a247d77090e8e2bb0db34c401c89cb002" compoundref="_indicator_interface_8h" startline="155">_scrollDelay</references>
        <references refid="class_indicator_interface_1ae2a7330b015b9da1a2c151821756a4d6" compoundref="_indicator_interface_8h" startline="153">_scrollOffset</references>
        <references refid="class_indicator_interface_1afc6b2600d29f5d85758fd75cae83b0b9" compoundref="_indicator_interface_8h" startline="142">_textBufferSize</references>
        <references refid="class_indicator_interface_1a93e019715a500012887e2bfc589c44b4" compoundref="_indicator_interface_8h" startline="121">_useInterrupts</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1aa39afb334632d4c84a44086985c7274b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>IndicatorInterface::~IndicatorInterface</definition>
        <argsstring>()</argsstring>
        <name>~IndicatorInterface</name>
        <qualifiedname>IndicatorInterface::~IndicatorInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="27" column="5" bodyfile="src/IndicatorInterface.cpp" bodystart="35" bodyend="40"/>
        <references refid="class_indicator_interface_1adefd227476c9f85bc7fb1302c99fb60b" compoundref="_indicator_interface_8h" startline="134">_instance</references>
        <references refid="class_indicator_interface_1ac99448e370702160d9a0d164fcaa6fc9" compoundref="_indicator_interface_8h" startline="104">_intPin</references>
        <references refid="class_indicator_interface_1a93e019715a500012887e2bfc589c44b4" compoundref="_indicator_interface_8h" startline="121">_useInterrupts</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a6083d92cd6b29de3ceb7a9619b9cb03b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IndicatorInterface::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>IndicatorInterface::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="30" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="42" bodyend="73"/>
        <references refid="class_indicator_interface_1a55da41c64cf3538a8bbb5252dd38b885" compoundref="_indicator_interface_8cpp" startline="352" endline="356">_clearInterrupt</references>
        <references refid="class_indicator_interface_1a2c93b45764662f0db2348fd0fa9635db" compoundref="_indicator_interface_8cpp" startline="75" endline="90">_configureInterruptPin</references>
        <references refid="class_indicator_interface_1a9cebce08d61558a1c8f60bfd558ea656" compoundref="_indicator_interface_8h" startline="114">_currentState</references>
        <references refid="class_indicator_interface_1a2d448f416c41a0faa436e951764133ae" compoundref="_indicator_interface_8h" startline="101">_i2cBus</references>
        <references refid="class_indicator_interface_1a57958896691800d0526ad7941e305136" compoundref="_indicator_interface_8cpp" startline="404" endline="410">_initOLED</references>
        <references refid="class_indicator_interface_1a219fe74846bda45250104f2d60e90d8a" compoundref="_indicator_interface_8h" startline="116">_lastReadTime</references>
        <references refid="class_indicator_interface_1ab7a2790dc55140d67ca7280ea3625002" compoundref="_indicator_interface_8h" startline="115">_lastState</references>
        <references refid="class_indicator_interface_1a90bbc0d232433baeb2cc326a86070570" compoundref="_indicator_interface_8h" startline="105">_pcf8575</references>
        <references refid="class_indicator_interface_1aad7f389062d31610e8b0d01e6c75413e" compoundref="_indicator_interface_8cpp" startline="358" endline="360">_readPCF</references>
        <references refid="class_indicator_interface_1a93e019715a500012887e2bfc589c44b4" compoundref="_indicator_interface_8h" startline="121">_useInterrupts</references>
        <references refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" compoundref="_indicator_interface_8h" startline="136">u8g2</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a01db31cebc14d62f6aa9b1266e6c278d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <qualifiedname>IndicatorInterface::update</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="31" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="491" bodyend="494"/>
        <references refid="class_indicator_interface_1a891f8dd7ca0b76e7d89c0ab5567303da" compoundref="_indicator_interface_8cpp" startline="1009" endline="1027">updateBlinking</references>
        <references refid="class_indicator_interface_1a5f9eaa4ad4d2da76bf9536a4dfad8723" compoundref="_indicator_interface_8cpp" startline="475" endline="489">updateOLED</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1aac59d81d86b39af42b24afc4378736f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::setDirection</definition>
        <argsstring>(uint16_t directionMask)</argsstring>
        <name>setDirection</name>
        <qualifiedname>IndicatorInterface::setDirection</qualifiedname>
        <param>
          <type>uint16_t</type>
          <declname>directionMask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="34" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="92" bodyend="106"/>
        <references refid="class_indicator_interface_1a9cebce08d61558a1c8f60bfd558ea656" compoundref="_indicator_interface_8h" startline="114">_currentState</references>
        <references refid="class_indicator_interface_1aa86f0bf7ac0aa21e3dd58e9f22a9d006" compoundref="_indicator_interface_8h" startline="108">_directionMask</references>
        <references refid="class_indicator_interface_1a850e37bb28d58c3acad37496fa101e64" compoundref="_indicator_interface_8cpp" startline="362" endline="367">_writePCF</references>
        <references refid="class_indicator_interface_1a0a785a20dd66dbe0077d60e779930140" compoundref="_indicator_interface_8cpp" startline="251" endline="253">isOutput</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a427021193bee0fcb775b4975ddd5fa54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::setMode</definition>
        <argsstring>(uint16_t modeMask)</argsstring>
        <name>setMode</name>
        <qualifiedname>IndicatorInterface::setMode</qualifiedname>
        <param>
          <type>uint16_t</type>
          <declname>modeMask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="35" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="108" bodyend="110"/>
        <references refid="class_indicator_interface_1aa55179bd0567655980bef4f29df366c7" compoundref="_indicator_interface_8h" startline="109">_modeMask</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a5d7c083ac206b53e5530709cc6d1df81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::setPortNames</definition>
        <argsstring>(const std::map&lt; std::string, uint8_t &gt; &amp;portNames)</argsstring>
        <name>setPortNames</name>
        <qualifiedname>IndicatorInterface::setPortNames</qualifiedname>
        <param>
          <type>const std::map&lt; std::string, uint8_t &gt; &amp;</type>
          <declname>portNames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="36" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="112" bodyend="120"/>
        <references refid="class_indicator_interface_1a412495eaf75665fa714b37fc36a3b82d" compoundref="_indicator_interface_8h" startline="110">_portNames</references>
        <references refid="class_indicator_interface_1a14a57c25bda0a46008b2184fa04517ac" compoundref="_indicator_interface_8h" startline="111">_portNumbers</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a37cacef74b1515a3401941d9559eb828" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::setPortName</definition>
        <argsstring>(const std::string &amp;name, uint8_t portNumber)</argsstring>
        <name>setPortName</name>
        <qualifiedname>IndicatorInterface::setPortName</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>portNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="37" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="122" bodyend="127"/>
        <references refid="class_indicator_interface_1a412495eaf75665fa714b37fc36a3b82d" compoundref="_indicator_interface_8h" startline="110">_portNames</references>
        <references refid="class_indicator_interface_1a14a57c25bda0a46008b2184fa04517ac" compoundref="_indicator_interface_8h" startline="111">_portNumbers</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a89a41cb1580141ed65c07ced6692322e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IndicatorInterface::writePort</definition>
        <argsstring>(const std::string &amp;portName, bool state)</argsstring>
        <name>writePort</name>
        <qualifiedname>IndicatorInterface::writePort</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>portName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="40" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="129" bodyend="135"/>
        <references refid="class_indicator_interface_1a412495eaf75665fa714b37fc36a3b82d" compoundref="_indicator_interface_8h" startline="110">_portNames</references>
        <references refid="class_indicator_interface_1a89a41cb1580141ed65c07ced6692322e" compoundref="_indicator_interface_8cpp" startline="129" endline="135">writePort</references>
        <referencedby refid="class_indicator_interface_1aafa418167df7eb74fc90fca14818a5eb" compoundref="_indicator_interface_8cpp" startline="966" endline="993">startBlinking</referencedby>
        <referencedby refid="class_indicator_interface_1a4458930151b73e21364fada5ba6fe129" compoundref="_indicator_interface_8cpp" startline="995" endline="1007">stopBlinking</referencedby>
        <referencedby refid="class_indicator_interface_1a891f8dd7ca0b76e7d89c0ab5567303da" compoundref="_indicator_interface_8cpp" startline="1009" endline="1027">updateBlinking</referencedby>
        <referencedby refid="class_indicator_interface_1a89a41cb1580141ed65c07ced6692322e" compoundref="_indicator_interface_8cpp" startline="129" endline="135">writePort</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a6b01cb93befc42d644388756ff986f6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IndicatorInterface::writePort</definition>
        <argsstring>(uint8_t portNumber, bool state)</argsstring>
        <name>writePort</name>
        <qualifiedname>IndicatorInterface::writePort</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>portNumber</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="41" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="137" bodyend="164"/>
        <references refid="class_indicator_interface_1a79a3f596138d02404e732cc354b6e78b" compoundref="_indicator_interface_8cpp" startline="369" endline="372">_applyModeLogic</references>
        <references refid="class_indicator_interface_1a9cebce08d61558a1c8f60bfd558ea656" compoundref="_indicator_interface_8h" startline="114">_currentState</references>
        <references refid="class_indicator_interface_1a850e37bb28d58c3acad37496fa101e64" compoundref="_indicator_interface_8cpp" startline="362" endline="367">_writePCF</references>
        <references refid="class_indicator_interface_1a0a785a20dd66dbe0077d60e779930140" compoundref="_indicator_interface_8cpp" startline="251" endline="253">isOutput</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1afb68095f494956d24c4013a048b083bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::writePorts</definition>
        <argsstring>(uint16_t portMask)</argsstring>
        <name>writePorts</name>
        <qualifiedname>IndicatorInterface::writePorts</qualifiedname>
        <param>
          <type>uint16_t</type>
          <declname>portMask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="42" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="166" bodyend="187"/>
        <references refid="class_indicator_interface_1a79a3f596138d02404e732cc354b6e78b" compoundref="_indicator_interface_8cpp" startline="369" endline="372">_applyModeLogic</references>
        <references refid="class_indicator_interface_1a9cebce08d61558a1c8f60bfd558ea656" compoundref="_indicator_interface_8h" startline="114">_currentState</references>
        <references refid="class_indicator_interface_1a850e37bb28d58c3acad37496fa101e64" compoundref="_indicator_interface_8cpp" startline="362" endline="367">_writePCF</references>
        <references refid="class_indicator_interface_1a0a785a20dd66dbe0077d60e779930140" compoundref="_indicator_interface_8cpp" startline="251" endline="253">isOutput</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a52dd1fa732e288e344fe017f100d6c0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::setAllOutputs</definition>
        <argsstring>(bool state)</argsstring>
        <name>setAllOutputs</name>
        <qualifiedname>IndicatorInterface::setAllOutputs</qualifiedname>
        <param>
          <type>bool</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="43" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="189" bodyend="208"/>
        <references refid="class_indicator_interface_1a79a3f596138d02404e732cc354b6e78b" compoundref="_indicator_interface_8cpp" startline="369" endline="372">_applyModeLogic</references>
        <references refid="class_indicator_interface_1a9cebce08d61558a1c8f60bfd558ea656" compoundref="_indicator_interface_8h" startline="114">_currentState</references>
        <references refid="class_indicator_interface_1a850e37bb28d58c3acad37496fa101e64" compoundref="_indicator_interface_8cpp" startline="362" endline="367">_writePCF</references>
        <references refid="class_indicator_interface_1a0a785a20dd66dbe0077d60e779930140" compoundref="_indicator_interface_8cpp" startline="251" endline="253">isOutput</references>
        <referencedby refid="class_indicator_interface_1ada8f967d6d074b194ab4876b10869357" compoundref="_indicator_interface_8cpp" startline="210" endline="212">setAllOutputsHigh</referencedby>
        <referencedby refid="class_indicator_interface_1a7da1cedbcb4ab157e483afcd02f35066" compoundref="_indicator_interface_8cpp" startline="214" endline="216">setAllOutputsLow</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1ada8f967d6d074b194ab4876b10869357" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::setAllOutputsHigh</definition>
        <argsstring>()</argsstring>
        <name>setAllOutputsHigh</name>
        <qualifiedname>IndicatorInterface::setAllOutputsHigh</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="44" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="210" bodyend="212"/>
        <references refid="class_indicator_interface_1a52dd1fa732e288e344fe017f100d6c0d" compoundref="_indicator_interface_8cpp" startline="189" endline="208">setAllOutputs</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a7da1cedbcb4ab157e483afcd02f35066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::setAllOutputsLow</definition>
        <argsstring>()</argsstring>
        <name>setAllOutputsLow</name>
        <qualifiedname>IndicatorInterface::setAllOutputsLow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="45" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="214" bodyend="216"/>
        <references refid="class_indicator_interface_1a52dd1fa732e288e344fe017f100d6c0d" compoundref="_indicator_interface_8cpp" startline="189" endline="208">setAllOutputs</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a590c38190df4400edafe532b12a34062" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::setPortInverted</definition>
        <argsstring>(const std::string &amp;portName, bool inverted)</argsstring>
        <name>setPortInverted</name>
        <qualifiedname>IndicatorInterface::setPortInverted</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>portName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inverted</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="47" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="386" bodyend="391"/>
        <references refid="class_indicator_interface_1a412495eaf75665fa714b37fc36a3b82d" compoundref="_indicator_interface_8h" startline="110">_portNames</references>
        <references refid="class_indicator_interface_1a590c38190df4400edafe532b12a34062" compoundref="_indicator_interface_8cpp" startline="386" endline="391">setPortInverted</references>
        <referencedby refid="class_indicator_interface_1a590c38190df4400edafe532b12a34062" compoundref="_indicator_interface_8cpp" startline="386" endline="391">setPortInverted</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a42a67a268adfbcc9951e1dc71fe10af4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::setPortInverted</definition>
        <argsstring>(uint8_t portNumber, bool inverted)</argsstring>
        <name>setPortInverted</name>
        <qualifiedname>IndicatorInterface::setPortInverted</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>portNumber</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inverted</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="48" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="393" bodyend="401"/>
        <references refid="class_indicator_interface_1aa55179bd0567655980bef4f29df366c7" compoundref="_indicator_interface_8h" startline="109">_modeMask</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a6e69fba966a59153449facfac1e04057" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t IndicatorInterface::getCurrentState</definition>
        <argsstring>()</argsstring>
        <name>getCurrentState</name>
        <qualifiedname>IndicatorInterface::getCurrentState</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="52" column="14" bodyfile="src/IndicatorInterface.cpp" bodystart="218" bodyend="229"/>
        <references refid="class_indicator_interface_1a9cebce08d61558a1c8f60bfd558ea656" compoundref="_indicator_interface_8h" startline="114">_currentState</references>
        <references refid="class_indicator_interface_1a219fe74846bda45250104f2d60e90d8a" compoundref="_indicator_interface_8h" startline="116">_lastReadTime</references>
        <references refid="class_indicator_interface_1a7f534e3c6ff085592acf3cc2b047b859" compoundref="_indicator_interface_8h" startline="117">_pollInterval</references>
        <references refid="class_indicator_interface_1aea37934542bbe7b6c50941dff4646fef" compoundref="_indicator_interface_8cpp" startline="338" endline="350">_updateState</references>
        <references refid="class_indicator_interface_1a93e019715a500012887e2bfc589c44b4" compoundref="_indicator_interface_8h" startline="121">_useInterrupts</references>
        <referencedby refid="class_indicator_interface_1a21ce0e3bc0531d92f815059890c66c4c" compoundref="_indicator_interface_8cpp" startline="284" endline="313">printPortStates</referencedby>
        <referencedby refid="class_indicator_interface_1a9e7d2c4cadd548e3fe2a16e41f8ae8d4" compoundref="_indicator_interface_8cpp" startline="239" endline="249">readPort</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1ae2b56d143ce0f191549656e8a95335cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IndicatorInterface::readPort</definition>
        <argsstring>(const std::string &amp;portName)</argsstring>
        <name>readPort</name>
        <qualifiedname>IndicatorInterface::readPort</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>portName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="53" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="231" bodyend="237"/>
        <references refid="class_indicator_interface_1a412495eaf75665fa714b37fc36a3b82d" compoundref="_indicator_interface_8h" startline="110">_portNames</references>
        <references refid="class_indicator_interface_1ae2b56d143ce0f191549656e8a95335cc" compoundref="_indicator_interface_8cpp" startline="231" endline="237">readPort</references>
        <referencedby refid="class_indicator_interface_1ae2b56d143ce0f191549656e8a95335cc" compoundref="_indicator_interface_8cpp" startline="231" endline="237">readPort</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a9e7d2c4cadd548e3fe2a16e41f8ae8d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IndicatorInterface::readPort</definition>
        <argsstring>(uint8_t portNumber)</argsstring>
        <name>readPort</name>
        <qualifiedname>IndicatorInterface::readPort</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>portNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="54" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="239" bodyend="249"/>
        <references refid="class_indicator_interface_1a8571bc4adfb0efb4f230b8c9d1b6bda7" compoundref="_indicator_interface_8cpp" startline="374" endline="377">_reverseModeLogic</references>
        <references refid="class_indicator_interface_1a6e69fba966a59153449facfac1e04057" compoundref="_indicator_interface_8cpp" startline="218" endline="229">getCurrentState</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a0a785a20dd66dbe0077d60e779930140" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IndicatorInterface::isOutput</definition>
        <argsstring>(uint8_t portNumber)</argsstring>
        <name>isOutput</name>
        <qualifiedname>IndicatorInterface::isOutput</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>portNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="57" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="251" bodyend="253"/>
        <references refid="class_indicator_interface_1aa86f0bf7ac0aa21e3dd58e9f22a9d006" compoundref="_indicator_interface_8h" startline="108">_directionMask</references>
        <referencedby refid="class_indicator_interface_1a962c3af9c6eb2c1af86ae52630249563" compoundref="_indicator_interface_8cpp" startline="255" endline="257">isInput</referencedby>
        <referencedby refid="class_indicator_interface_1a21ce0e3bc0531d92f815059890c66c4c" compoundref="_indicator_interface_8cpp" startline="284" endline="313">printPortStates</referencedby>
        <referencedby refid="class_indicator_interface_1a52dd1fa732e288e344fe017f100d6c0d" compoundref="_indicator_interface_8cpp" startline="189" endline="208">setAllOutputs</referencedby>
        <referencedby refid="class_indicator_interface_1aac59d81d86b39af42b24afc4378736f9" compoundref="_indicator_interface_8cpp" startline="92" endline="106">setDirection</referencedby>
        <referencedby refid="class_indicator_interface_1a6b01cb93befc42d644388756ff986f6e" compoundref="_indicator_interface_8cpp" startline="137" endline="164">writePort</referencedby>
        <referencedby refid="class_indicator_interface_1afb68095f494956d24c4013a048b083bf" compoundref="_indicator_interface_8cpp" startline="166" endline="187">writePorts</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a962c3af9c6eb2c1af86ae52630249563" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IndicatorInterface::isInput</definition>
        <argsstring>(uint8_t portNumber)</argsstring>
        <name>isInput</name>
        <qualifiedname>IndicatorInterface::isInput</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>portNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="58" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="255" bodyend="257"/>
        <references refid="class_indicator_interface_1a0a785a20dd66dbe0077d60e779930140" compoundref="_indicator_interface_8cpp" startline="251" endline="253">isOutput</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a3b900f1de29de5489f19b94b27f4b5c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IndicatorInterface::isInverted</definition>
        <argsstring>(uint8_t portNumber)</argsstring>
        <name>isInverted</name>
        <qualifiedname>IndicatorInterface::isInverted</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>portNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="59" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="259" bodyend="261"/>
        <references refid="class_indicator_interface_1aa55179bd0567655980bef4f29df366c7" compoundref="_indicator_interface_8h" startline="109">_modeMask</references>
        <referencedby refid="class_indicator_interface_1a79a3f596138d02404e732cc354b6e78b" compoundref="_indicator_interface_8cpp" startline="369" endline="372">_applyModeLogic</referencedby>
        <referencedby refid="class_indicator_interface_1a8571bc4adfb0efb4f230b8c9d1b6bda7" compoundref="_indicator_interface_8cpp" startline="374" endline="377">_reverseModeLogic</referencedby>
        <referencedby refid="class_indicator_interface_1a21ce0e3bc0531d92f815059890c66c4c" compoundref="_indicator_interface_8cpp" startline="284" endline="313">printPortStates</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a72e0284ed13aa7d2a22fe26ce90c0e3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t IndicatorInterface::getPortNumber</definition>
        <argsstring>(const std::string &amp;portName)</argsstring>
        <name>getPortNumber</name>
        <qualifiedname>IndicatorInterface::getPortNumber</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>portName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="60" column="13" bodyfile="src/IndicatorInterface.cpp" bodystart="263" bodyend="266"/>
        <references refid="class_indicator_interface_1a412495eaf75665fa714b37fc36a3b82d" compoundref="_indicator_interface_8h" startline="110">_portNames</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a657f720c3bab755d0864436241c847ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string IndicatorInterface::getPortName</definition>
        <argsstring>(uint8_t portNumber)</argsstring>
        <name>getPortName</name>
        <qualifiedname>IndicatorInterface::getPortName</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>portNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="61" column="17" bodyfile="src/IndicatorInterface.cpp" bodystart="268" bodyend="271"/>
        <references refid="class_indicator_interface_1a14a57c25bda0a46008b2184fa04517ac" compoundref="_indicator_interface_8h" startline="111">_portNumbers</references>
        <referencedby refid="class_indicator_interface_1a21ce0e3bc0531d92f815059890c66c4c" compoundref="_indicator_interface_8cpp" startline="284" endline="313">printPortStates</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a4586496158d0d102742463c908d9b2c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::handleInterrupt</definition>
        <argsstring>()</argsstring>
        <name>handleInterrupt</name>
        <qualifiedname>IndicatorInterface::handleInterrupt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="64" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="739" bodyend="745"/>
        <references refid="class_indicator_interface_1adac6de445ff7c1d1bc1afa660849c272" compoundref="_indicator_interface_8h" startline="120">_interruptFlag</references>
        <references refid="class_indicator_interface_1aea37934542bbe7b6c50941dff4646fef" compoundref="_indicator_interface_8cpp" startline="338" endline="350">_updateState</references>
        <references refid="class_indicator_interface_1af64dc2a4b4256050b070991dfaf05f1a" compoundref="_indicator_interface_8cpp" startline="730" endline="736">_wakeOLED</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a49ab6e47d490a3367acc819bf6116d9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::setInterruptCallback</definition>
        <argsstring>(void(*callback)(uint16_t currentState, uint16_t changedPins))</argsstring>
        <name>setInterruptCallback</name>
        <qualifiedname>IndicatorInterface::setInterruptCallback</qualifiedname>
        <param>
          <type>void(*)(uint16_t currentState, uint16_t changedPins)</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="65" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="280" bodyend="282"/>
        <references refid="class_indicator_interface_1a7a520f568f2ce58dd2692b9e7a217d21" compoundref="_indicator_interface_8h" startline="122">_interruptCallback</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a21ce0e3bc0531d92f815059890c66c4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::printPortStates</definition>
        <argsstring>()</argsstring>
        <name>printPortStates</name>
        <qualifiedname>IndicatorInterface::printPortStates</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="68" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="284" bodyend="313"/>
        <references refid="class_indicator_interface_1a8571bc4adfb0efb4f230b8c9d1b6bda7" compoundref="_indicator_interface_8cpp" startline="374" endline="377">_reverseModeLogic</references>
        <references refid="class_indicator_interface_1a6e69fba966a59153449facfac1e04057" compoundref="_indicator_interface_8cpp" startline="218" endline="229">getCurrentState</references>
        <references refid="class_indicator_interface_1a657f720c3bab755d0864436241c847ad" compoundref="_indicator_interface_8cpp" startline="268" endline="271">getPortName</references>
        <references refid="class_indicator_interface_1a3b900f1de29de5489f19b94b27f4b5c1" compoundref="_indicator_interface_8cpp" startline="259" endline="261">isInverted</references>
        <references refid="class_indicator_interface_1a0a785a20dd66dbe0077d60e779930140" compoundref="_indicator_interface_8cpp" startline="251" endline="253">isOutput</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a6133988d818d830ad9bc5c902c63ec29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::printConfiguration</definition>
        <argsstring>()</argsstring>
        <name>printConfiguration</name>
        <qualifiedname>IndicatorInterface::printConfiguration</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="69" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="315" bodyend="335"/>
        <references refid="class_indicator_interface_1aa86f0bf7ac0aa21e3dd58e9f22a9d006" compoundref="_indicator_interface_8h" startline="108">_directionMask</references>
        <references refid="class_indicator_interface_1ac99448e370702160d9a0d164fcaa6fc9" compoundref="_indicator_interface_8h" startline="104">_intPin</references>
        <references refid="class_indicator_interface_1aa55179bd0567655980bef4f29df366c7" compoundref="_indicator_interface_8h" startline="109">_modeMask</references>
        <references refid="class_indicator_interface_1aa53e601aa0ea14bafc2260097067a341" compoundref="_indicator_interface_8h" startline="102">_pcf_i2cAddress</references>
        <references refid="class_indicator_interface_1a412495eaf75665fa714b37fc36a3b82d" compoundref="_indicator_interface_8h" startline="110">_portNames</references>
        <references refid="class_indicator_interface_1a93e019715a500012887e2bfc589c44b4" compoundref="_indicator_interface_8h" startline="121">_useInterrupts</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a0f23c8a09f237eca7d71a9ff4e560e96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::setOledSleepDelay</definition>
        <argsstring>(long sleepDelay)</argsstring>
        <name>setOledSleepDelay</name>
        <qualifiedname>IndicatorInterface::setOledSleepDelay</qualifiedname>
        <param>
          <type>long</type>
          <declname>sleepDelay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="72" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="412" bodyend="415"/>
        <references refid="class_indicator_interface_1ad22a15d0f7561db46969879a10aa1de5" compoundref="_indicator_interface_8h" startline="139">_oledSleepDelay</references>
        <references refid="class_indicator_interface_1af64dc2a4b4256050b070991dfaf05f1a" compoundref="_indicator_interface_8cpp" startline="730" endline="736">_wakeOLED</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1acf545ec2921c786020f7826a846b364d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::setOledMode</definition>
        <argsstring>(int lines)</argsstring>
        <name>setOledMode</name>
        <qualifiedname>IndicatorInterface::setOledMode</qualifiedname>
        <param>
          <type>int</type>
          <declname>lines</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="73" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="417" bodyend="424"/>
        <references refid="class_indicator_interface_1a2f021f6fa16dec590a8b9cf41a82349d" compoundref="_indicator_interface_8cpp" startline="510" endline="561">_calculateDisplayParams</references>
        <references refid="class_indicator_interface_1ab74bae75e78806a6eb4df3ad364321cd" compoundref="_indicator_interface_8h" startline="140">_oledLines</references>
        <references refid="class_indicator_interface_1af64dc2a4b4256050b070991dfaf05f1a" compoundref="_indicator_interface_8cpp" startline="730" endline="736">_wakeOLED</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1ac3d970f4cfa8af402fa2538cf05e8cd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::printText</definition>
        <argsstring>(String buffer[], int bufferSize)</argsstring>
        <name>printText</name>
        <qualifiedname>IndicatorInterface::printText</qualifiedname>
        <param>
          <type>String</type>
          <declname>buffer</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>bufferSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="74" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="426" bodyend="446"/>
        <references refid="class_indicator_interface_1a608486f8f9a8373d4363b753d61b8968" compoundref="_indicator_interface_8h" startline="149">_lastActivityTime</references>
        <references refid="class_indicator_interface_1ae2a7330b015b9da1a2c151821756a4d6" compoundref="_indicator_interface_8h" startline="153">_scrollOffset</references>
        <references refid="class_indicator_interface_1ae69883abed1813161f5e451245136fb3" compoundref="_indicator_interface_8h" startline="141">_textBuffer</references>
        <references refid="class_indicator_interface_1afc6b2600d29f5d85758fd75cae83b0b9" compoundref="_indicator_interface_8h" startline="142">_textBufferSize</references>
        <references refid="class_indicator_interface_1a38acc1a5120e275253fc4e458aea91f0" compoundref="_indicator_interface_8cpp" startline="601" endline="628">_updateOLEDDisplay</references>
        <references refid="class_indicator_interface_1af64dc2a4b4256050b070991dfaf05f1a" compoundref="_indicator_interface_8cpp" startline="730" endline="736">_wakeOLED</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1ab8a4f7cc08c2fb112aa893f0aeca044a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::setOLEDblink</definition>
        <argsstring>(int timeOn, int timeOff, bool blinkOn=true)</argsstring>
        <name>setOLEDblink</name>
        <qualifiedname>IndicatorInterface::setOLEDblink</qualifiedname>
        <param>
          <type>int</type>
          <declname>timeOn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeOff</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>blinkOn</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="75" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="449" bodyend="459"/>
        <references refid="class_indicator_interface_1a5b059b24e3fa66de2165fb17e9026fd7" compoundref="_indicator_interface_8h" startline="148">_blinkState</references>
        <references refid="class_indicator_interface_1a3080269e210288582ea05cf63afd16d5" compoundref="_indicator_interface_8h" startline="146">_blinkTimeOff</references>
        <references refid="class_indicator_interface_1aa85df0334d9959edc154bed17747ae04" compoundref="_indicator_interface_8h" startline="145">_blinkTimeOn</references>
        <references refid="class_indicator_interface_1a5026d82e76d2b3efd1eab90878803e8d" compoundref="_indicator_interface_8h" startline="147">_lastBlinkTime</references>
        <references refid="class_indicator_interface_1ab944524710a5026f7f20d62d44a2dee7" compoundref="_indicator_interface_8h" startline="144">_oledBlink</references>
        <references refid="class_indicator_interface_1af64dc2a4b4256050b070991dfaf05f1a" compoundref="_indicator_interface_8cpp" startline="730" endline="736">_wakeOLED</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a62ad23d6e52cf3abe43f6dad6000ebbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::setOLEDOff</definition>
        <argsstring>()</argsstring>
        <name>setOLEDOff</name>
        <qualifiedname>IndicatorInterface::setOLEDOff</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="76" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="461" bodyend="465"/>
        <references refid="class_indicator_interface_1ab944524710a5026f7f20d62d44a2dee7" compoundref="_indicator_interface_8h" startline="144">_oledBlink</references>
        <references refid="class_indicator_interface_1a942bea540c40919390bc25816cc5b064" compoundref="_indicator_interface_8h" startline="143">_oledOn</references>
        <references refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" compoundref="_indicator_interface_8h" startline="136">u8g2</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a7d807749bff6ef06c128617b35f4dcce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::setOLEDOn</definition>
        <argsstring>()</argsstring>
        <name>setOLEDOn</name>
        <qualifiedname>IndicatorInterface::setOLEDOn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="77" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="467" bodyend="473"/>
        <references refid="class_indicator_interface_1a942bea540c40919390bc25816cc5b064" compoundref="_indicator_interface_8h" startline="143">_oledOn</references>
        <references refid="class_indicator_interface_1a36e848846a6ca0327c1f0d3f0a8e80ed" compoundref="_indicator_interface_8h" startline="150">_oledSleeping</references>
        <references refid="class_indicator_interface_1a38acc1a5120e275253fc4e458aea91f0" compoundref="_indicator_interface_8cpp" startline="601" endline="628">_updateOLEDDisplay</references>
        <references refid="class_indicator_interface_1af64dc2a4b4256050b070991dfaf05f1a" compoundref="_indicator_interface_8cpp" startline="730" endline="736">_wakeOLED</references>
        <references refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" compoundref="_indicator_interface_8h" startline="136">u8g2</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a5f9eaa4ad4d2da76bf9536a4dfad8723" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::updateOLED</definition>
        <argsstring>()</argsstring>
        <name>updateOLED</name>
        <qualifiedname>IndicatorInterface::updateOLED</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="78" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="475" bodyend="489"/>
        <references refid="class_indicator_interface_1afc1bacc73d487f912d7a71f559e193ef" compoundref="_indicator_interface_8cpp" startline="678" endline="696">_handleOLEDBlink</references>
        <references refid="class_indicator_interface_1a01fa37471cccc2655c0a817b1cab0826" compoundref="_indicator_interface_8cpp" startline="669" endline="676">_handleOLEDSleep</references>
        <references refid="class_indicator_interface_1a520ad5df9ff7c3f3b716b2b179e50a7e" compoundref="_indicator_interface_8cpp" startline="698" endline="726">_handleScrolling</references>
        <references refid="class_indicator_interface_1ad70f8a9e7f527bc4faeb576b47483385" compoundref="_indicator_interface_8cpp" startline="942" endline="962">_handleSpecialBlink</references>
        <references refid="class_indicator_interface_1a603d635417e1a1c3ed705296051ac32c" compoundref="_indicator_interface_8h" startline="175">_isBlinkingCross</references>
        <references refid="class_indicator_interface_1a3e32b13b3477abe772192591a20a907e" compoundref="_indicator_interface_8h" startline="174">_isBlinkingOK</references>
        <references refid="class_indicator_interface_1a942bea540c40919390bc25816cc5b064" compoundref="_indicator_interface_8h" startline="143">_oledOn</references>
        <references refid="class_indicator_interface_1a36e848846a6ca0327c1f0d3f0a8e80ed" compoundref="_indicator_interface_8h" startline="150">_oledSleeping</references>
        <referencedby refid="class_indicator_interface_1a01db31cebc14d62f6aa9b1266e6c278d" compoundref="_indicator_interface_8cpp" startline="491" endline="494">update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a3d7f75c8c69808ecc98d1e1fb272984d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::pushLine</definition>
        <argsstring>(String newLine)</argsstring>
        <name>pushLine</name>
        <qualifiedname>IndicatorInterface::pushLine</qualifiedname>
        <param>
          <type>String</type>
          <declname>newLine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="81" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="753" bodyend="776"/>
        <references refid="class_indicator_interface_1ab74bae75e78806a6eb4df3ad364321cd" compoundref="_indicator_interface_8h" startline="140">_oledLines</references>
        <references refid="class_indicator_interface_1ae2a7330b015b9da1a2c151821756a4d6" compoundref="_indicator_interface_8h" startline="153">_scrollOffset</references>
        <references refid="class_indicator_interface_1ae69883abed1813161f5e451245136fb3" compoundref="_indicator_interface_8h" startline="141">_textBuffer</references>
        <references refid="class_indicator_interface_1afc6b2600d29f5d85758fd75cae83b0b9" compoundref="_indicator_interface_8h" startline="142">_textBufferSize</references>
        <references refid="class_indicator_interface_1a38acc1a5120e275253fc4e458aea91f0" compoundref="_indicator_interface_8cpp" startline="601" endline="628">_updateOLEDDisplay</references>
        <references refid="class_indicator_interface_1af64dc2a4b4256050b070991dfaf05f1a" compoundref="_indicator_interface_8cpp" startline="730" endline="736">_wakeOLED</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1aaa36eb97521df2decb957418acc277a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::displayOK</definition>
        <argsstring>()</argsstring>
        <name>displayOK</name>
        <qualifiedname>IndicatorInterface::displayOK</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="82" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="778" bodyend="806"/>
        <references refid="class_indicator_interface_1af64dc2a4b4256050b070991dfaf05f1a" compoundref="_indicator_interface_8cpp" startline="730" endline="736">_wakeOLED</references>
        <references refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" compoundref="_indicator_interface_8h" startline="136">u8g2</references>
        <referencedby refid="class_indicator_interface_1ad70f8a9e7f527bc4faeb576b47483385" compoundref="_indicator_interface_8cpp" startline="942" endline="962">_handleSpecialBlink</referencedby>
        <referencedby refid="class_indicator_interface_1aa7c6bd010177acde7097bd4b186fa96d" compoundref="_indicator_interface_8cpp" startline="887" endline="899">blinkOK</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a54fa76657f9ef0c9e19b6e94d682fb65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::displayCross</definition>
        <argsstring>()</argsstring>
        <name>displayCross</name>
        <qualifiedname>IndicatorInterface::displayCross</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="83" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="808" bodyend="849"/>
        <references refid="class_indicator_interface_1af64dc2a4b4256050b070991dfaf05f1a" compoundref="_indicator_interface_8cpp" startline="730" endline="736">_wakeOLED</references>
        <references refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" compoundref="_indicator_interface_8h" startline="136">u8g2</references>
        <referencedby refid="class_indicator_interface_1ad70f8a9e7f527bc4faeb576b47483385" compoundref="_indicator_interface_8cpp" startline="942" endline="962">_handleSpecialBlink</referencedby>
        <referencedby refid="class_indicator_interface_1ac5ef0d744798dc4643c4fa0074e9b503" compoundref="_indicator_interface_8cpp" startline="901" endline="913">blinkCross</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1aa7c6bd010177acde7097bd4b186fa96d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::blinkOK</definition>
        <argsstring>(int blinkDelay)</argsstring>
        <name>blinkOK</name>
        <qualifiedname>IndicatorInterface::blinkOK</qualifiedname>
        <param>
          <type>int</type>
          <declname>blinkDelay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="84" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="887" bodyend="899"/>
        <references refid="class_indicator_interface_1a13c8569b739cf6e99de0bd3ad7c20801" compoundref="_indicator_interface_8h" startline="176">_blinkDelayTime</references>
        <references refid="class_indicator_interface_1a5b4a1c66db5909b0eeef1016287f8a75" compoundref="_indicator_interface_8h" startline="178">_blinkShowSpecial</references>
        <references refid="class_indicator_interface_1a603d635417e1a1c3ed705296051ac32c" compoundref="_indicator_interface_8h" startline="175">_isBlinkingCross</references>
        <references refid="class_indicator_interface_1a3e32b13b3477abe772192591a20a907e" compoundref="_indicator_interface_8h" startline="174">_isBlinkingOK</references>
        <references refid="class_indicator_interface_1af2d0c2c932ac0b9ebe7e6266b63a218b" compoundref="_indicator_interface_8h" startline="177">_lastBlinkToggle</references>
        <references refid="class_indicator_interface_1ab944524710a5026f7f20d62d44a2dee7" compoundref="_indicator_interface_8h" startline="144">_oledBlink</references>
        <references refid="class_indicator_interface_1a30f46d2a644df56a3e0864dbee8cf7d1" compoundref="_indicator_interface_8cpp" startline="922" endline="929">_saveCurrentText</references>
        <references refid="class_indicator_interface_1aaa36eb97521df2decb957418acc277a9" compoundref="_indicator_interface_8cpp" startline="778" endline="806">displayOK</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1ac5ef0d744798dc4643c4fa0074e9b503" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::blinkCross</definition>
        <argsstring>(int blinkDelay)</argsstring>
        <name>blinkCross</name>
        <qualifiedname>IndicatorInterface::blinkCross</qualifiedname>
        <param>
          <type>int</type>
          <declname>blinkDelay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="85" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="901" bodyend="913"/>
        <references refid="class_indicator_interface_1a13c8569b739cf6e99de0bd3ad7c20801" compoundref="_indicator_interface_8h" startline="176">_blinkDelayTime</references>
        <references refid="class_indicator_interface_1a5b4a1c66db5909b0eeef1016287f8a75" compoundref="_indicator_interface_8h" startline="178">_blinkShowSpecial</references>
        <references refid="class_indicator_interface_1a603d635417e1a1c3ed705296051ac32c" compoundref="_indicator_interface_8h" startline="175">_isBlinkingCross</references>
        <references refid="class_indicator_interface_1a3e32b13b3477abe772192591a20a907e" compoundref="_indicator_interface_8h" startline="174">_isBlinkingOK</references>
        <references refid="class_indicator_interface_1af2d0c2c932ac0b9ebe7e6266b63a218b" compoundref="_indicator_interface_8h" startline="177">_lastBlinkToggle</references>
        <references refid="class_indicator_interface_1ab944524710a5026f7f20d62d44a2dee7" compoundref="_indicator_interface_8h" startline="144">_oledBlink</references>
        <references refid="class_indicator_interface_1a30f46d2a644df56a3e0864dbee8cf7d1" compoundref="_indicator_interface_8cpp" startline="922" endline="929">_saveCurrentText</references>
        <references refid="class_indicator_interface_1a54fa76657f9ef0c9e19b6e94d682fb65" compoundref="_indicator_interface_8cpp" startline="808" endline="849">displayCross</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a1573397b085b78ea7f714665d55cece0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::stopBlinking</definition>
        <argsstring>()</argsstring>
        <name>stopBlinking</name>
        <qualifiedname>IndicatorInterface::stopBlinking</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="86" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="916" bodyend="920"/>
        <references refid="class_indicator_interface_1a603d635417e1a1c3ed705296051ac32c" compoundref="_indicator_interface_8h" startline="175">_isBlinkingCross</references>
        <references refid="class_indicator_interface_1a3e32b13b3477abe772192591a20a907e" compoundref="_indicator_interface_8h" startline="174">_isBlinkingOK</references>
        <references refid="class_indicator_interface_1aa24a016a7358ca6f0c955794d5774512" compoundref="_indicator_interface_8cpp" startline="931" endline="940">_restoreCurrentText</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1aafa418167df7eb74fc90fca14818a5eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::startBlinking</definition>
        <argsstring>(const std::string &amp;portName, unsigned long onTime, unsigned long offTime)</argsstring>
        <name>startBlinking</name>
        <qualifiedname>IndicatorInterface::startBlinking</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>portName</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>onTime</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>offTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="88" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="966" bodyend="993"/>
        <references refid="class_indicator_interface_1a7ba08be0780b5c3e1e1a85fcb75a40b4" compoundref="_indicator_interface_8h" startline="98">_blinkingPorts</references>
        <references refid="struct_indicator_interface_1_1_blinking_port_1aa22cf12bfef400089f451e7992ae4c62" compoundref="_indicator_interface_8h" startline="20">IndicatorInterface::BlinkingPort::currentState</references>
        <references refid="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" compoundref="_logger_manager_8h" startline="101" endline="103">LoggerManager::info</references>
        <references refid="struct_indicator_interface_1_1_blinking_port_1aa6b9efc3b2ddaf0ecbb264bebed99e60" compoundref="_indicator_interface_8h" startline="21">IndicatorInterface::BlinkingPort::isActive</references>
        <references refid="struct_indicator_interface_1_1_blinking_port_1a34e108c23ec5082406b12b75d87c9606" compoundref="_indicator_interface_8h" startline="19">IndicatorInterface::BlinkingPort::lastToggleTime</references>
        <references refid="struct_indicator_interface_1_1_blinking_port_1a629381e9fa819c425e8387c8b2819f55" compoundref="_indicator_interface_8h" startline="18">IndicatorInterface::BlinkingPort::offTime</references>
        <references refid="struct_indicator_interface_1_1_blinking_port_1add4bee394ff2b7239780a4a7b2640954" compoundref="_indicator_interface_8h" startline="17">IndicatorInterface::BlinkingPort::onTime</references>
        <references refid="struct_indicator_interface_1_1_blinking_port_1ad80dbdb5d0bb386953a5def17d2da542" compoundref="_indicator_interface_8h" startline="16">IndicatorInterface::BlinkingPort::portName</references>
        <references refid="class_indicator_interface_1a89a41cb1580141ed65c07ced6692322e" compoundref="_indicator_interface_8cpp" startline="129" endline="135">writePort</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a4458930151b73e21364fada5ba6fe129" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::stopBlinking</definition>
        <argsstring>(const std::string &amp;portName)</argsstring>
        <name>stopBlinking</name>
        <qualifiedname>IndicatorInterface::stopBlinking</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>portName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="89" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="995" bodyend="1007"/>
        <references refid="class_indicator_interface_1a7ba08be0780b5c3e1e1a85fcb75a40b4" compoundref="_indicator_interface_8h" startline="98">_blinkingPorts</references>
        <references refid="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" compoundref="_logger_manager_8h" startline="101" endline="103">LoggerManager::info</references>
        <references refid="class_indicator_interface_1a89a41cb1580141ed65c07ced6692322e" compoundref="_indicator_interface_8cpp" startline="129" endline="135">writePort</references>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a891f8dd7ca0b76e7d89c0ab5567303da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::updateBlinking</definition>
        <argsstring>()</argsstring>
        <name>updateBlinking</name>
        <qualifiedname>IndicatorInterface::updateBlinking</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="90" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="1009" bodyend="1027"/>
        <references refid="class_indicator_interface_1a7ba08be0780b5c3e1e1a85fcb75a40b4" compoundref="_indicator_interface_8h" startline="98">_blinkingPorts</references>
        <references refid="class_indicator_interface_1a89a41cb1580141ed65c07ced6692322e" compoundref="_indicator_interface_8cpp" startline="129" endline="135">writePort</references>
        <referencedby refid="class_indicator_interface_1a01db31cebc14d62f6aa9b1266e6c278d" compoundref="_indicator_interface_8cpp" startline="491" endline="494">update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a84a7f5f2394abde177b41becd340b678" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IndicatorInterface::isBlinking</definition>
        <argsstring>(const std::string &amp;portName)</argsstring>
        <name>isBlinking</name>
        <qualifiedname>IndicatorInterface::isBlinking</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>portName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="91" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="1029" bodyend="1036"/>
        <references refid="class_indicator_interface_1a7ba08be0780b5c3e1e1a85fcb75a40b4" compoundref="_indicator_interface_8h" startline="98">_blinkingPorts</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_indicator_interface_1aea37934542bbe7b6c50941dff4646fef" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::_updateState</definition>
        <argsstring>()</argsstring>
        <name>_updateState</name>
        <qualifiedname>IndicatorInterface::_updateState</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="125" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="338" bodyend="350"/>
        <references refid="class_indicator_interface_1a9cebce08d61558a1c8f60bfd558ea656" compoundref="_indicator_interface_8h" startline="114">_currentState</references>
        <references refid="class_indicator_interface_1a7a520f568f2ce58dd2692b9e7a217d21" compoundref="_indicator_interface_8h" startline="122">_interruptCallback</references>
        <references refid="class_indicator_interface_1a219fe74846bda45250104f2d60e90d8a" compoundref="_indicator_interface_8h" startline="116">_lastReadTime</references>
        <references refid="class_indicator_interface_1ab7a2790dc55140d67ca7280ea3625002" compoundref="_indicator_interface_8h" startline="115">_lastState</references>
        <references refid="class_indicator_interface_1aad7f389062d31610e8b0d01e6c75413e" compoundref="_indicator_interface_8cpp" startline="358" endline="360">_readPCF</references>
        <referencedby refid="class_indicator_interface_1a6e69fba966a59153449facfac1e04057" compoundref="_indicator_interface_8cpp" startline="218" endline="229">getCurrentState</referencedby>
        <referencedby refid="class_indicator_interface_1a4586496158d0d102742463c908d9b2c3" compoundref="_indicator_interface_8cpp" startline="739" endline="745">handleInterrupt</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a55da41c64cf3538a8bbb5252dd38b885" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::_clearInterrupt</definition>
        <argsstring>()</argsstring>
        <name>_clearInterrupt</name>
        <qualifiedname>IndicatorInterface::_clearInterrupt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="126" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="352" bodyend="356"/>
        <references refid="class_indicator_interface_1a90bbc0d232433baeb2cc326a86070570" compoundref="_indicator_interface_8h" startline="105">_pcf8575</references>
        <referencedby refid="class_indicator_interface_1a850e37bb28d58c3acad37496fa101e64" compoundref="_indicator_interface_8cpp" startline="362" endline="367">_writePCF</referencedby>
        <referencedby refid="class_indicator_interface_1a6083d92cd6b29de3ceb7a9619b9cb03b" compoundref="_indicator_interface_8cpp" startline="42" endline="73">begin</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1aad7f389062d31610e8b0d01e6c75413e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t IndicatorInterface::_readPCF</definition>
        <argsstring>()</argsstring>
        <name>_readPCF</name>
        <qualifiedname>IndicatorInterface::_readPCF</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="127" column="14" bodyfile="src/IndicatorInterface.cpp" bodystart="358" bodyend="360"/>
        <references refid="class_indicator_interface_1a90bbc0d232433baeb2cc326a86070570" compoundref="_indicator_interface_8h" startline="105">_pcf8575</references>
        <referencedby refid="class_indicator_interface_1aea37934542bbe7b6c50941dff4646fef" compoundref="_indicator_interface_8cpp" startline="338" endline="350">_updateState</referencedby>
        <referencedby refid="class_indicator_interface_1a6083d92cd6b29de3ceb7a9619b9cb03b" compoundref="_indicator_interface_8cpp" startline="42" endline="73">begin</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a850e37bb28d58c3acad37496fa101e64" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::_writePCF</definition>
        <argsstring>(uint16_t state)</argsstring>
        <name>_writePCF</name>
        <qualifiedname>IndicatorInterface::_writePCF</qualifiedname>
        <param>
          <type>uint16_t</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="128" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="362" bodyend="367"/>
        <references refid="class_indicator_interface_1a55da41c64cf3538a8bbb5252dd38b885" compoundref="_indicator_interface_8cpp" startline="352" endline="356">_clearInterrupt</references>
        <references refid="class_indicator_interface_1a9cebce08d61558a1c8f60bfd558ea656" compoundref="_indicator_interface_8h" startline="114">_currentState</references>
        <references refid="class_indicator_interface_1a90bbc0d232433baeb2cc326a86070570" compoundref="_indicator_interface_8h" startline="105">_pcf8575</references>
        <referencedby refid="class_indicator_interface_1a52dd1fa732e288e344fe017f100d6c0d" compoundref="_indicator_interface_8cpp" startline="189" endline="208">setAllOutputs</referencedby>
        <referencedby refid="class_indicator_interface_1aac59d81d86b39af42b24afc4378736f9" compoundref="_indicator_interface_8cpp" startline="92" endline="106">setDirection</referencedby>
        <referencedby refid="class_indicator_interface_1a6b01cb93befc42d644388756ff986f6e" compoundref="_indicator_interface_8cpp" startline="137" endline="164">writePort</referencedby>
        <referencedby refid="class_indicator_interface_1afb68095f494956d24c4013a048b083bf" compoundref="_indicator_interface_8cpp" startline="166" endline="187">writePorts</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a79a3f596138d02404e732cc354b6e78b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IndicatorInterface::_applyModeLogic</definition>
        <argsstring>(uint8_t portNumber, bool state)</argsstring>
        <name>_applyModeLogic</name>
        <qualifiedname>IndicatorInterface::_applyModeLogic</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>portNumber</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="129" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="369" bodyend="372"/>
        <references refid="class_indicator_interface_1a3b900f1de29de5489f19b94b27f4b5c1" compoundref="_indicator_interface_8cpp" startline="259" endline="261">isInverted</references>
        <referencedby refid="class_indicator_interface_1a52dd1fa732e288e344fe017f100d6c0d" compoundref="_indicator_interface_8cpp" startline="189" endline="208">setAllOutputs</referencedby>
        <referencedby refid="class_indicator_interface_1a6b01cb93befc42d644388756ff986f6e" compoundref="_indicator_interface_8cpp" startline="137" endline="164">writePort</referencedby>
        <referencedby refid="class_indicator_interface_1afb68095f494956d24c4013a048b083bf" compoundref="_indicator_interface_8cpp" startline="166" endline="187">writePorts</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a8571bc4adfb0efb4f230b8c9d1b6bda7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IndicatorInterface::_reverseModeLogic</definition>
        <argsstring>(uint8_t portNumber, bool state)</argsstring>
        <name>_reverseModeLogic</name>
        <qualifiedname>IndicatorInterface::_reverseModeLogic</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>portNumber</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="130" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="374" bodyend="377"/>
        <references refid="class_indicator_interface_1a3b900f1de29de5489f19b94b27f4b5c1" compoundref="_indicator_interface_8cpp" startline="259" endline="261">isInverted</references>
        <referencedby refid="class_indicator_interface_1a21ce0e3bc0531d92f815059890c66c4c" compoundref="_indicator_interface_8cpp" startline="284" endline="313">printPortStates</referencedby>
        <referencedby refid="class_indicator_interface_1a9e7d2c4cadd548e3fe2a16e41f8ae8d4" compoundref="_indicator_interface_8cpp" startline="239" endline="249">readPort</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a2c93b45764662f0db2348fd0fa9635db" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::_configureInterruptPin</definition>
        <argsstring>()</argsstring>
        <name>_configureInterruptPin</name>
        <qualifiedname>IndicatorInterface::_configureInterruptPin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="131" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="75" bodyend="90"/>
        <references refid="class_indicator_interface_1ac99448e370702160d9a0d164fcaa6fc9" compoundref="_indicator_interface_8h" startline="104">_intPin</references>
        <references refid="class_indicator_interface_1ad4fddb918d5f80046ab61a70fbc9eed2" compoundref="_indicator_interface_8cpp" startline="379" endline="383">_staticInterruptHandler</references>
        <referencedby refid="class_indicator_interface_1a6083d92cd6b29de3ceb7a9619b9cb03b" compoundref="_indicator_interface_8cpp" startline="42" endline="73">begin</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a57958896691800d0526ad7941e305136" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::_initOLED</definition>
        <argsstring>()</argsstring>
        <name>_initOLED</name>
        <qualifiedname>IndicatorInterface::_initOLED</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="161" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="404" bodyend="410"/>
        <references refid="class_indicator_interface_1a2f021f6fa16dec590a8b9cf41a82349d" compoundref="_indicator_interface_8cpp" startline="510" endline="561">_calculateDisplayParams</references>
        <references refid="class_indicator_interface_1a608486f8f9a8373d4363b753d61b8968" compoundref="_indicator_interface_8h" startline="149">_lastActivityTime</references>
        <references refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" compoundref="_indicator_interface_8h" startline="136">u8g2</references>
        <referencedby refid="class_indicator_interface_1a6083d92cd6b29de3ceb7a9619b9cb03b" compoundref="_indicator_interface_8cpp" startline="42" endline="73">begin</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a38acc1a5120e275253fc4e458aea91f0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::_updateOLEDDisplay</definition>
        <argsstring>()</argsstring>
        <name>_updateOLEDDisplay</name>
        <qualifiedname>IndicatorInterface::_updateOLEDDisplay</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="162" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="601" bodyend="628"/>
        <references refid="class_indicator_interface_1a2f021f6fa16dec590a8b9cf41a82349d" compoundref="_indicator_interface_8cpp" startline="510" endline="561">_calculateDisplayParams</references>
        <references refid="class_indicator_interface_1a56c23034a963e2099e36cf55ec70055e" compoundref="_indicator_interface_8cpp" startline="631" endline="663">_drawTextLine</references>
        <references refid="class_indicator_interface_1ab74bae75e78806a6eb4df3ad364321cd" compoundref="_indicator_interface_8h" startline="140">_oledLines</references>
        <references refid="class_indicator_interface_1a942bea540c40919390bc25816cc5b064" compoundref="_indicator_interface_8h" startline="143">_oledOn</references>
        <references refid="class_indicator_interface_1a36e848846a6ca0327c1f0d3f0a8e80ed" compoundref="_indicator_interface_8h" startline="150">_oledSleeping</references>
        <references refid="class_indicator_interface_1afc6b2600d29f5d85758fd75cae83b0b9" compoundref="_indicator_interface_8h" startline="142">_textBufferSize</references>
        <references refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" compoundref="_indicator_interface_8h" startline="136">u8g2</references>
        <referencedby refid="class_indicator_interface_1afc1bacc73d487f912d7a71f559e193ef" compoundref="_indicator_interface_8cpp" startline="678" endline="696">_handleOLEDBlink</referencedby>
        <referencedby refid="class_indicator_interface_1a520ad5df9ff7c3f3b716b2b179e50a7e" compoundref="_indicator_interface_8cpp" startline="698" endline="726">_handleScrolling</referencedby>
        <referencedby refid="class_indicator_interface_1aa24a016a7358ca6f0c955794d5774512" compoundref="_indicator_interface_8cpp" startline="931" endline="940">_restoreCurrentText</referencedby>
        <referencedby refid="class_indicator_interface_1ac3d970f4cfa8af402fa2538cf05e8cd6" compoundref="_indicator_interface_8cpp" startline="426" endline="446">printText</referencedby>
        <referencedby refid="class_indicator_interface_1a3d7f75c8c69808ecc98d1e1fb272984d" compoundref="_indicator_interface_8cpp" startline="753" endline="776">pushLine</referencedby>
        <referencedby refid="class_indicator_interface_1a7d807749bff6ef06c128617b35f4dcce" compoundref="_indicator_interface_8cpp" startline="467" endline="473">setOLEDOn</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a01fa37471cccc2655c0a817b1cab0826" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::_handleOLEDSleep</definition>
        <argsstring>()</argsstring>
        <name>_handleOLEDSleep</name>
        <qualifiedname>IndicatorInterface::_handleOLEDSleep</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="163" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="669" bodyend="676"/>
        <references refid="class_indicator_interface_1a608486f8f9a8373d4363b753d61b8968" compoundref="_indicator_interface_8h" startline="149">_lastActivityTime</references>
        <references refid="class_indicator_interface_1ad22a15d0f7561db46969879a10aa1de5" compoundref="_indicator_interface_8h" startline="139">_oledSleepDelay</references>
        <references refid="class_indicator_interface_1a36e848846a6ca0327c1f0d3f0a8e80ed" compoundref="_indicator_interface_8h" startline="150">_oledSleeping</references>
        <references refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" compoundref="_indicator_interface_8h" startline="136">u8g2</references>
        <referencedby refid="class_indicator_interface_1a5f9eaa4ad4d2da76bf9536a4dfad8723" compoundref="_indicator_interface_8cpp" startline="475" endline="489">updateOLED</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1afc1bacc73d487f912d7a71f559e193ef" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::_handleOLEDBlink</definition>
        <argsstring>()</argsstring>
        <name>_handleOLEDBlink</name>
        <qualifiedname>IndicatorInterface::_handleOLEDBlink</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="164" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="678" bodyend="696"/>
        <references refid="class_indicator_interface_1a5b059b24e3fa66de2165fb17e9026fd7" compoundref="_indicator_interface_8h" startline="148">_blinkState</references>
        <references refid="class_indicator_interface_1a3080269e210288582ea05cf63afd16d5" compoundref="_indicator_interface_8h" startline="146">_blinkTimeOff</references>
        <references refid="class_indicator_interface_1aa85df0334d9959edc154bed17747ae04" compoundref="_indicator_interface_8h" startline="145">_blinkTimeOn</references>
        <references refid="class_indicator_interface_1a5026d82e76d2b3efd1eab90878803e8d" compoundref="_indicator_interface_8h" startline="147">_lastBlinkTime</references>
        <references refid="class_indicator_interface_1ab944524710a5026f7f20d62d44a2dee7" compoundref="_indicator_interface_8h" startline="144">_oledBlink</references>
        <references refid="class_indicator_interface_1a36e848846a6ca0327c1f0d3f0a8e80ed" compoundref="_indicator_interface_8h" startline="150">_oledSleeping</references>
        <references refid="class_indicator_interface_1a38acc1a5120e275253fc4e458aea91f0" compoundref="_indicator_interface_8cpp" startline="601" endline="628">_updateOLEDDisplay</references>
        <references refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" compoundref="_indicator_interface_8h" startline="136">u8g2</references>
        <referencedby refid="class_indicator_interface_1a5f9eaa4ad4d2da76bf9536a4dfad8723" compoundref="_indicator_interface_8cpp" startline="475" endline="489">updateOLED</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a520ad5df9ff7c3f3b716b2b179e50a7e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::_handleScrolling</definition>
        <argsstring>()</argsstring>
        <name>_handleScrolling</name>
        <qualifiedname>IndicatorInterface::_handleScrolling</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="165" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="698" bodyend="726"/>
        <references refid="class_indicator_interface_1a4a32b171da54c67284aebede765d976d" compoundref="_indicator_interface_8h" startline="154">_lastScrollTime</references>
        <references refid="class_indicator_interface_1a54182aa1c8eb74b781bea42002efb18e" compoundref="_indicator_interface_8h" startline="158">_maxCharsPerLine</references>
        <references refid="class_indicator_interface_1a247d77090e8e2bb0db34c401c89cb002" compoundref="_indicator_interface_8h" startline="155">_scrollDelay</references>
        <references refid="class_indicator_interface_1ae2a7330b015b9da1a2c151821756a4d6" compoundref="_indicator_interface_8h" startline="153">_scrollOffset</references>
        <references refid="class_indicator_interface_1ae69883abed1813161f5e451245136fb3" compoundref="_indicator_interface_8h" startline="141">_textBuffer</references>
        <references refid="class_indicator_interface_1afc6b2600d29f5d85758fd75cae83b0b9" compoundref="_indicator_interface_8h" startline="142">_textBufferSize</references>
        <references refid="class_indicator_interface_1a38acc1a5120e275253fc4e458aea91f0" compoundref="_indicator_interface_8cpp" startline="601" endline="628">_updateOLEDDisplay</references>
        <referencedby refid="class_indicator_interface_1a5f9eaa4ad4d2da76bf9536a4dfad8723" compoundref="_indicator_interface_8cpp" startline="475" endline="489">updateOLED</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a56c23034a963e2099e36cf55ec70055e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::_drawTextLine</definition>
        <argsstring>(int lineIndex, int yPos)</argsstring>
        <name>_drawTextLine</name>
        <qualifiedname>IndicatorInterface::_drawTextLine</qualifiedname>
        <param>
          <type>int</type>
          <declname>lineIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>yPos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="166" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="631" bodyend="663"/>
        <references refid="class_indicator_interface_1a54182aa1c8eb74b781bea42002efb18e" compoundref="_indicator_interface_8h" startline="158">_maxCharsPerLine</references>
        <references refid="class_indicator_interface_1ae2a7330b015b9da1a2c151821756a4d6" compoundref="_indicator_interface_8h" startline="153">_scrollOffset</references>
        <references refid="class_indicator_interface_1ae69883abed1813161f5e451245136fb3" compoundref="_indicator_interface_8h" startline="141">_textBuffer</references>
        <references refid="class_indicator_interface_1afc6b2600d29f5d85758fd75cae83b0b9" compoundref="_indicator_interface_8h" startline="142">_textBufferSize</references>
        <references refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" compoundref="_indicator_interface_8h" startline="136">u8g2</references>
        <referencedby refid="class_indicator_interface_1a38acc1a5120e275253fc4e458aea91f0" compoundref="_indicator_interface_8cpp" startline="601" endline="628">_updateOLEDDisplay</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a2f021f6fa16dec590a8b9cf41a82349d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::_calculateDisplayParams</definition>
        <argsstring>()</argsstring>
        <name>_calculateDisplayParams</name>
        <qualifiedname>IndicatorInterface::_calculateDisplayParams</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="167" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="510" bodyend="561"/>
        <references refid="class_indicator_interface_1a12aa1363cd7159475c7ca7b145b688cd" compoundref="_indicator_interface_8h" startline="156">_charWidth</references>
        <references refid="class_indicator_interface_1aa0218f414dcc1be0b62c29e7d39b985d" compoundref="_indicator_interface_8h" startline="157">_lineHeight</references>
        <references refid="class_indicator_interface_1a54182aa1c8eb74b781bea42002efb18e" compoundref="_indicator_interface_8h" startline="158">_maxCharsPerLine</references>
        <references refid="class_indicator_interface_1ab74bae75e78806a6eb4df3ad364321cd" compoundref="_indicator_interface_8h" startline="140">_oledLines</references>
        <references refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" compoundref="_indicator_interface_8h" startline="136">u8g2</references>
        <referencedby refid="class_indicator_interface_1a57958896691800d0526ad7941e305136" compoundref="_indicator_interface_8cpp" startline="404" endline="410">_initOLED</referencedby>
        <referencedby refid="class_indicator_interface_1a38acc1a5120e275253fc4e458aea91f0" compoundref="_indicator_interface_8cpp" startline="601" endline="628">_updateOLEDDisplay</referencedby>
        <referencedby refid="class_indicator_interface_1acf545ec2921c786020f7826a846b364d" compoundref="_indicator_interface_8cpp" startline="417" endline="424">setOledMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1af64dc2a4b4256050b070991dfaf05f1a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::_wakeOLED</definition>
        <argsstring>()</argsstring>
        <name>_wakeOLED</name>
        <qualifiedname>IndicatorInterface::_wakeOLED</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="168" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="730" bodyend="736"/>
        <references refid="class_indicator_interface_1a608486f8f9a8373d4363b753d61b8968" compoundref="_indicator_interface_8h" startline="149">_lastActivityTime</references>
        <references refid="class_indicator_interface_1a942bea540c40919390bc25816cc5b064" compoundref="_indicator_interface_8h" startline="143">_oledOn</references>
        <references refid="class_indicator_interface_1a36e848846a6ca0327c1f0d3f0a8e80ed" compoundref="_indicator_interface_8h" startline="150">_oledSleeping</references>
        <references refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" compoundref="_indicator_interface_8h" startline="136">u8g2</references>
        <referencedby refid="class_indicator_interface_1a54fa76657f9ef0c9e19b6e94d682fb65" compoundref="_indicator_interface_8cpp" startline="808" endline="849">displayCross</referencedby>
        <referencedby refid="class_indicator_interface_1aaa36eb97521df2decb957418acc277a9" compoundref="_indicator_interface_8cpp" startline="778" endline="806">displayOK</referencedby>
        <referencedby refid="class_indicator_interface_1a4586496158d0d102742463c908d9b2c3" compoundref="_indicator_interface_8cpp" startline="739" endline="745">handleInterrupt</referencedby>
        <referencedby refid="class_indicator_interface_1ac3d970f4cfa8af402fa2538cf05e8cd6" compoundref="_indicator_interface_8cpp" startline="426" endline="446">printText</referencedby>
        <referencedby refid="class_indicator_interface_1a3d7f75c8c69808ecc98d1e1fb272984d" compoundref="_indicator_interface_8cpp" startline="753" endline="776">pushLine</referencedby>
        <referencedby refid="class_indicator_interface_1ab8a4f7cc08c2fb112aa893f0aeca044a" compoundref="_indicator_interface_8cpp" startline="449" endline="459">setOLEDblink</referencedby>
        <referencedby refid="class_indicator_interface_1acf545ec2921c786020f7826a846b364d" compoundref="_indicator_interface_8cpp" startline="417" endline="424">setOledMode</referencedby>
        <referencedby refid="class_indicator_interface_1a7d807749bff6ef06c128617b35f4dcce" compoundref="_indicator_interface_8cpp" startline="467" endline="473">setOLEDOn</referencedby>
        <referencedby refid="class_indicator_interface_1a0f23c8a09f237eca7d71a9ff4e560e96" compoundref="_indicator_interface_8cpp" startline="412" endline="415">setOledSleepDelay</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1a30f46d2a644df56a3e0864dbee8cf7d1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::_saveCurrentText</definition>
        <argsstring>()</argsstring>
        <name>_saveCurrentText</name>
        <qualifiedname>IndicatorInterface::_saveCurrentText</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="181" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="922" bodyend="929"/>
        <references refid="class_indicator_interface_1ab74bae75e78806a6eb4df3ad364321cd" compoundref="_indicator_interface_8h" startline="140">_oledLines</references>
        <references refid="class_indicator_interface_1a4017512513ab2ada6ec2791d481708fb" compoundref="_indicator_interface_8h" startline="173">_savedOledLines</references>
        <references refid="class_indicator_interface_1acc98489f9f8aad76f42bb4178626b631" compoundref="_indicator_interface_8h" startline="171">_savedTextBuffer</references>
        <references refid="class_indicator_interface_1aca206ae7f20a60f0fd4661cebc9c113f" compoundref="_indicator_interface_8h" startline="172">_savedTextBufferSize</references>
        <references refid="class_indicator_interface_1ae69883abed1813161f5e451245136fb3" compoundref="_indicator_interface_8h" startline="141">_textBuffer</references>
        <references refid="class_indicator_interface_1afc6b2600d29f5d85758fd75cae83b0b9" compoundref="_indicator_interface_8h" startline="142">_textBufferSize</references>
        <referencedby refid="class_indicator_interface_1ac5ef0d744798dc4643c4fa0074e9b503" compoundref="_indicator_interface_8cpp" startline="901" endline="913">blinkCross</referencedby>
        <referencedby refid="class_indicator_interface_1aa7c6bd010177acde7097bd4b186fa96d" compoundref="_indicator_interface_8cpp" startline="887" endline="899">blinkOK</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1aa24a016a7358ca6f0c955794d5774512" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::_restoreCurrentText</definition>
        <argsstring>()</argsstring>
        <name>_restoreCurrentText</name>
        <qualifiedname>IndicatorInterface::_restoreCurrentText</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="182" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="931" bodyend="940"/>
        <references refid="class_indicator_interface_1ab74bae75e78806a6eb4df3ad364321cd" compoundref="_indicator_interface_8h" startline="140">_oledLines</references>
        <references refid="class_indicator_interface_1a4017512513ab2ada6ec2791d481708fb" compoundref="_indicator_interface_8h" startline="173">_savedOledLines</references>
        <references refid="class_indicator_interface_1acc98489f9f8aad76f42bb4178626b631" compoundref="_indicator_interface_8h" startline="171">_savedTextBuffer</references>
        <references refid="class_indicator_interface_1aca206ae7f20a60f0fd4661cebc9c113f" compoundref="_indicator_interface_8h" startline="172">_savedTextBufferSize</references>
        <references refid="class_indicator_interface_1ae69883abed1813161f5e451245136fb3" compoundref="_indicator_interface_8h" startline="141">_textBuffer</references>
        <references refid="class_indicator_interface_1afc6b2600d29f5d85758fd75cae83b0b9" compoundref="_indicator_interface_8h" startline="142">_textBufferSize</references>
        <references refid="class_indicator_interface_1a38acc1a5120e275253fc4e458aea91f0" compoundref="_indicator_interface_8cpp" startline="601" endline="628">_updateOLEDDisplay</references>
        <referencedby refid="class_indicator_interface_1ad70f8a9e7f527bc4faeb576b47483385" compoundref="_indicator_interface_8cpp" startline="942" endline="962">_handleSpecialBlink</referencedby>
        <referencedby refid="class_indicator_interface_1a1573397b085b78ea7f714665d55cece0" compoundref="_indicator_interface_8cpp" startline="916" endline="920">stopBlinking</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_indicator_interface_1ad70f8a9e7f527bc4faeb576b47483385" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndicatorInterface::_handleSpecialBlink</definition>
        <argsstring>()</argsstring>
        <name>_handleSpecialBlink</name>
        <qualifiedname>IndicatorInterface::_handleSpecialBlink</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="183" column="10" bodyfile="src/IndicatorInterface.cpp" bodystart="942" bodyend="962"/>
        <references refid="class_indicator_interface_1a13c8569b739cf6e99de0bd3ad7c20801" compoundref="_indicator_interface_8h" startline="176">_blinkDelayTime</references>
        <references refid="class_indicator_interface_1a5b4a1c66db5909b0eeef1016287f8a75" compoundref="_indicator_interface_8h" startline="178">_blinkShowSpecial</references>
        <references refid="class_indicator_interface_1a603d635417e1a1c3ed705296051ac32c" compoundref="_indicator_interface_8h" startline="175">_isBlinkingCross</references>
        <references refid="class_indicator_interface_1a3e32b13b3477abe772192591a20a907e" compoundref="_indicator_interface_8h" startline="174">_isBlinkingOK</references>
        <references refid="class_indicator_interface_1af2d0c2c932ac0b9ebe7e6266b63a218b" compoundref="_indicator_interface_8h" startline="177">_lastBlinkToggle</references>
        <references refid="class_indicator_interface_1aa24a016a7358ca6f0c955794d5774512" compoundref="_indicator_interface_8cpp" startline="931" endline="940">_restoreCurrentText</references>
        <references refid="class_indicator_interface_1a54fa76657f9ef0c9e19b6e94d682fb65" compoundref="_indicator_interface_8cpp" startline="808" endline="849">displayCross</references>
        <references refid="class_indicator_interface_1aaa36eb97521df2decb957418acc277a9" compoundref="_indicator_interface_8cpp" startline="778" endline="806">displayOK</references>
        <referencedby refid="class_indicator_interface_1a5f9eaa4ad4d2da76bf9536a4dfad8723" compoundref="_indicator_interface_8cpp" startline="475" endline="489">updateOLED</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_indicator_interface_1ad4fddb918d5f80046ab61a70fbc9eed2" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void IRAM_ATTR</type>
        <definition>void IRAM_ATTR IndicatorInterface::_staticInterruptHandler</definition>
        <argsstring>()</argsstring>
        <name>_staticInterruptHandler</name>
        <qualifiedname>IndicatorInterface::_staticInterruptHandler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/IndicatorInterface.h" line="135" column="27" bodyfile="src/IndicatorInterface.cpp" bodystart="379" bodyend="383"/>
        <references refid="class_indicator_interface_1adefd227476c9f85bc7fb1302c99fb60b" compoundref="_indicator_interface_8h" startline="134">_instance</references>
        <referencedby refid="class_indicator_interface_1a2c93b45764662f0db2348fd0fa9635db" compoundref="_indicator_interface_8cpp" startline="75" endline="90">_configureInterruptPin</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>IndicatorInterface</label>
        <link refid="class_indicator_interface"/>
        <childnode refid="1" relation="usage">
          <edgelabel>-_instance</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/IndicatorInterface.h" line="13" column="1" bodyfile="include/IndicatorInterface.h" bodystart="13" bodyend="185"/>
    <listofallmembers>
      <member refid="class_indicator_interface_1a79a3f596138d02404e732cc354b6e78b" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_applyModeLogic</name></member>
      <member refid="class_indicator_interface_1a13c8569b739cf6e99de0bd3ad7c20801" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_blinkDelayTime</name></member>
      <member refid="class_indicator_interface_1a7ba08be0780b5c3e1e1a85fcb75a40b4" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_blinkingPorts</name></member>
      <member refid="class_indicator_interface_1a5b4a1c66db5909b0eeef1016287f8a75" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_blinkShowSpecial</name></member>
      <member refid="class_indicator_interface_1a5b059b24e3fa66de2165fb17e9026fd7" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_blinkState</name></member>
      <member refid="class_indicator_interface_1a3080269e210288582ea05cf63afd16d5" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_blinkTimeOff</name></member>
      <member refid="class_indicator_interface_1aa85df0334d9959edc154bed17747ae04" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_blinkTimeOn</name></member>
      <member refid="class_indicator_interface_1a2f021f6fa16dec590a8b9cf41a82349d" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_calculateDisplayParams</name></member>
      <member refid="class_indicator_interface_1a12aa1363cd7159475c7ca7b145b688cd" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_charWidth</name></member>
      <member refid="class_indicator_interface_1a55da41c64cf3538a8bbb5252dd38b885" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_clearInterrupt</name></member>
      <member refid="class_indicator_interface_1a2c93b45764662f0db2348fd0fa9635db" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_configureInterruptPin</name></member>
      <member refid="class_indicator_interface_1a9cebce08d61558a1c8f60bfd558ea656" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_currentState</name></member>
      <member refid="class_indicator_interface_1aa86f0bf7ac0aa21e3dd58e9f22a9d006" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_directionMask</name></member>
      <member refid="class_indicator_interface_1a56c23034a963e2099e36cf55ec70055e" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_drawTextLine</name></member>
      <member refid="class_indicator_interface_1afc1bacc73d487f912d7a71f559e193ef" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_handleOLEDBlink</name></member>
      <member refid="class_indicator_interface_1a01fa37471cccc2655c0a817b1cab0826" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_handleOLEDSleep</name></member>
      <member refid="class_indicator_interface_1a520ad5df9ff7c3f3b716b2b179e50a7e" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_handleScrolling</name></member>
      <member refid="class_indicator_interface_1ad70f8a9e7f527bc4faeb576b47483385" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_handleSpecialBlink</name></member>
      <member refid="class_indicator_interface_1a2d448f416c41a0faa436e951764133ae" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_i2cBus</name></member>
      <member refid="class_indicator_interface_1a57958896691800d0526ad7941e305136" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_initOLED</name></member>
      <member refid="class_indicator_interface_1adefd227476c9f85bc7fb1302c99fb60b" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_instance</name></member>
      <member refid="class_indicator_interface_1a7a520f568f2ce58dd2692b9e7a217d21" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_interruptCallback</name></member>
      <member refid="class_indicator_interface_1adac6de445ff7c1d1bc1afa660849c272" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_interruptFlag</name></member>
      <member refid="class_indicator_interface_1ac99448e370702160d9a0d164fcaa6fc9" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_intPin</name></member>
      <member refid="class_indicator_interface_1a603d635417e1a1c3ed705296051ac32c" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_isBlinkingCross</name></member>
      <member refid="class_indicator_interface_1a3e32b13b3477abe772192591a20a907e" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_isBlinkingOK</name></member>
      <member refid="class_indicator_interface_1a608486f8f9a8373d4363b753d61b8968" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_lastActivityTime</name></member>
      <member refid="class_indicator_interface_1a5026d82e76d2b3efd1eab90878803e8d" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_lastBlinkTime</name></member>
      <member refid="class_indicator_interface_1af2d0c2c932ac0b9ebe7e6266b63a218b" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_lastBlinkToggle</name></member>
      <member refid="class_indicator_interface_1a219fe74846bda45250104f2d60e90d8a" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_lastReadTime</name></member>
      <member refid="class_indicator_interface_1a4a32b171da54c67284aebede765d976d" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_lastScrollTime</name></member>
      <member refid="class_indicator_interface_1ab7a2790dc55140d67ca7280ea3625002" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_lastState</name></member>
      <member refid="class_indicator_interface_1aa0218f414dcc1be0b62c29e7d39b985d" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_lineHeight</name></member>
      <member refid="class_indicator_interface_1a54182aa1c8eb74b781bea42002efb18e" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_maxCharsPerLine</name></member>
      <member refid="class_indicator_interface_1aa55179bd0567655980bef4f29df366c7" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_modeMask</name></member>
      <member refid="class_indicator_interface_1ab944524710a5026f7f20d62d44a2dee7" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_oledBlink</name></member>
      <member refid="class_indicator_interface_1ab74bae75e78806a6eb4df3ad364321cd" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_oledLines</name></member>
      <member refid="class_indicator_interface_1a942bea540c40919390bc25816cc5b064" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_oledOn</name></member>
      <member refid="class_indicator_interface_1ad22a15d0f7561db46969879a10aa1de5" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_oledSleepDelay</name></member>
      <member refid="class_indicator_interface_1a36e848846a6ca0327c1f0d3f0a8e80ed" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_oledSleeping</name></member>
      <member refid="class_indicator_interface_1a90bbc0d232433baeb2cc326a86070570" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_pcf8575</name></member>
      <member refid="class_indicator_interface_1aa53e601aa0ea14bafc2260097067a341" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_pcf_i2cAddress</name></member>
      <member refid="class_indicator_interface_1a7f534e3c6ff085592acf3cc2b047b859" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_pollInterval</name></member>
      <member refid="class_indicator_interface_1a412495eaf75665fa714b37fc36a3b82d" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_portNames</name></member>
      <member refid="class_indicator_interface_1a14a57c25bda0a46008b2184fa04517ac" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_portNumbers</name></member>
      <member refid="class_indicator_interface_1aad7f389062d31610e8b0d01e6c75413e" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_readPCF</name></member>
      <member refid="class_indicator_interface_1aa24a016a7358ca6f0c955794d5774512" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_restoreCurrentText</name></member>
      <member refid="class_indicator_interface_1a8571bc4adfb0efb4f230b8c9d1b6bda7" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_reverseModeLogic</name></member>
      <member refid="class_indicator_interface_1a30f46d2a644df56a3e0864dbee8cf7d1" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_saveCurrentText</name></member>
      <member refid="class_indicator_interface_1a4017512513ab2ada6ec2791d481708fb" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_savedOledLines</name></member>
      <member refid="class_indicator_interface_1acc98489f9f8aad76f42bb4178626b631" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_savedTextBuffer</name></member>
      <member refid="class_indicator_interface_1aca206ae7f20a60f0fd4661cebc9c113f" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_savedTextBufferSize</name></member>
      <member refid="class_indicator_interface_1a247d77090e8e2bb0db34c401c89cb002" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_scrollDelay</name></member>
      <member refid="class_indicator_interface_1ae2a7330b015b9da1a2c151821756a4d6" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_scrollOffset</name></member>
      <member refid="class_indicator_interface_1ad4fddb918d5f80046ab61a70fbc9eed2" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_staticInterruptHandler</name></member>
      <member refid="class_indicator_interface_1ae69883abed1813161f5e451245136fb3" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_textBuffer</name></member>
      <member refid="class_indicator_interface_1afc6b2600d29f5d85758fd75cae83b0b9" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_textBufferSize</name></member>
      <member refid="class_indicator_interface_1a38acc1a5120e275253fc4e458aea91f0" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_updateOLEDDisplay</name></member>
      <member refid="class_indicator_interface_1aea37934542bbe7b6c50941dff4646fef" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_updateState</name></member>
      <member refid="class_indicator_interface_1a93e019715a500012887e2bfc589c44b4" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_useInterrupts</name></member>
      <member refid="class_indicator_interface_1af64dc2a4b4256050b070991dfaf05f1a" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_wakeOLED</name></member>
      <member refid="class_indicator_interface_1a850e37bb28d58c3acad37496fa101e64" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>_writePCF</name></member>
      <member refid="class_indicator_interface_1a6083d92cd6b29de3ceb7a9619b9cb03b" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>begin</name></member>
      <member refid="class_indicator_interface_1ac5ef0d744798dc4643c4fa0074e9b503" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>blinkCross</name></member>
      <member refid="class_indicator_interface_1aa7c6bd010177acde7097bd4b186fa96d" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>blinkOK</name></member>
      <member refid="class_indicator_interface_1a54fa76657f9ef0c9e19b6e94d682fb65" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>displayCross</name></member>
      <member refid="class_indicator_interface_1aaa36eb97521df2decb957418acc277a9" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>displayOK</name></member>
      <member refid="class_indicator_interface_1a6e69fba966a59153449facfac1e04057" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>getCurrentState</name></member>
      <member refid="class_indicator_interface_1a657f720c3bab755d0864436241c847ad" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>getPortName</name></member>
      <member refid="class_indicator_interface_1a72e0284ed13aa7d2a22fe26ce90c0e3f" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>getPortNumber</name></member>
      <member refid="class_indicator_interface_1a4586496158d0d102742463c908d9b2c3" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>handleInterrupt</name></member>
      <member refid="class_indicator_interface_1addc325e3c4d6bdc53257fbd9075aaecf" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>IndicatorInterface</name></member>
      <member refid="class_indicator_interface_1a84a7f5f2394abde177b41becd340b678" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>isBlinking</name></member>
      <member refid="class_indicator_interface_1a962c3af9c6eb2c1af86ae52630249563" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>isInput</name></member>
      <member refid="class_indicator_interface_1a3b900f1de29de5489f19b94b27f4b5c1" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>isInverted</name></member>
      <member refid="class_indicator_interface_1a0a785a20dd66dbe0077d60e779930140" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>isOutput</name></member>
      <member refid="class_indicator_interface_1a9ccc079e94fae6312ed33cf2c6de05cf" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>oled_i2cAddress</name></member>
      <member refid="class_indicator_interface_1a6133988d818d830ad9bc5c902c63ec29" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>printConfiguration</name></member>
      <member refid="class_indicator_interface_1a21ce0e3bc0531d92f815059890c66c4c" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>printPortStates</name></member>
      <member refid="class_indicator_interface_1ac3d970f4cfa8af402fa2538cf05e8cd6" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>printText</name></member>
      <member refid="class_indicator_interface_1a3d7f75c8c69808ecc98d1e1fb272984d" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>pushLine</name></member>
      <member refid="class_indicator_interface_1ae2b56d143ce0f191549656e8a95335cc" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>readPort</name></member>
      <member refid="class_indicator_interface_1a9e7d2c4cadd548e3fe2a16e41f8ae8d4" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>readPort</name></member>
      <member refid="class_indicator_interface_1a52dd1fa732e288e344fe017f100d6c0d" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>setAllOutputs</name></member>
      <member refid="class_indicator_interface_1ada8f967d6d074b194ab4876b10869357" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>setAllOutputsHigh</name></member>
      <member refid="class_indicator_interface_1a7da1cedbcb4ab157e483afcd02f35066" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>setAllOutputsLow</name></member>
      <member refid="class_indicator_interface_1aac59d81d86b39af42b24afc4378736f9" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>setDirection</name></member>
      <member refid="class_indicator_interface_1a49ab6e47d490a3367acc819bf6116d9b" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>setInterruptCallback</name></member>
      <member refid="class_indicator_interface_1a427021193bee0fcb775b4975ddd5fa54" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>setMode</name></member>
      <member refid="class_indicator_interface_1ab8a4f7cc08c2fb112aa893f0aeca044a" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>setOLEDblink</name></member>
      <member refid="class_indicator_interface_1acf545ec2921c786020f7826a846b364d" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>setOledMode</name></member>
      <member refid="class_indicator_interface_1a62ad23d6e52cf3abe43f6dad6000ebbd" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>setOLEDOff</name></member>
      <member refid="class_indicator_interface_1a7d807749bff6ef06c128617b35f4dcce" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>setOLEDOn</name></member>
      <member refid="class_indicator_interface_1a0f23c8a09f237eca7d71a9ff4e560e96" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>setOledSleepDelay</name></member>
      <member refid="class_indicator_interface_1a590c38190df4400edafe532b12a34062" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>setPortInverted</name></member>
      <member refid="class_indicator_interface_1a42a67a268adfbcc9951e1dc71fe10af4" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>setPortInverted</name></member>
      <member refid="class_indicator_interface_1a37cacef74b1515a3401941d9559eb828" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>setPortName</name></member>
      <member refid="class_indicator_interface_1a5d7c083ac206b53e5530709cc6d1df81" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>setPortNames</name></member>
      <member refid="class_indicator_interface_1aafa418167df7eb74fc90fca14818a5eb" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>startBlinking</name></member>
      <member refid="class_indicator_interface_1a1573397b085b78ea7f714665d55cece0" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>stopBlinking</name></member>
      <member refid="class_indicator_interface_1a4458930151b73e21364fada5ba6fe129" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>stopBlinking</name></member>
      <member refid="class_indicator_interface_1a76ba2dca5a876b151ce79ec1af4da9dd" prot="private" virt="non-virtual"><scope>IndicatorInterface</scope><name>u8g2</name></member>
      <member refid="class_indicator_interface_1a01db31cebc14d62f6aa9b1266e6c278d" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>update</name></member>
      <member refid="class_indicator_interface_1a891f8dd7ca0b76e7d89c0ab5567303da" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>updateBlinking</name></member>
      <member refid="class_indicator_interface_1a5f9eaa4ad4d2da76bf9536a4dfad8723" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>updateOLED</name></member>
      <member refid="class_indicator_interface_1a89a41cb1580141ed65c07ced6692322e" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>writePort</name></member>
      <member refid="class_indicator_interface_1a6b01cb93befc42d644388756ff986f6e" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>writePort</name></member>
      <member refid="class_indicator_interface_1afb68095f494956d24c4013a048b083bf" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>writePorts</name></member>
      <member refid="class_indicator_interface_1aa39afb334632d4c84a44086985c7274b" prot="public" virt="non-virtual"><scope>IndicatorInterface</scope><name>~IndicatorInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
