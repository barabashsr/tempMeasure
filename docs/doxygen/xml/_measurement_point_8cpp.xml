<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="_measurement_point_8cpp" kind="file" language="C++">
    <compoundname>MeasurementPoint.cpp</compoundname>
    <includes refid="_measurement_point_8h" local="yes">MeasurementPoint.h</includes>
    <incdepgraph>
      <node id="8">
        <label>LoggerManager.h</label>
        <link refid="_logger_manager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>MeasurementPoint.h</label>
        <link refid="_measurement_point_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Sensor.h</label>
        <link refid="_sensor_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>TimeManager.h</label>
        <link refid="_time_manager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/MeasurementPoint.cpp</label>
        <link refid="_measurement_point_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Adafruit_MAX31865.h</label>
      </node>
      <node id="3">
        <label>Arduino.h</label>
      </node>
      <node id="17">
        <label>ArduinoJson.h</label>
      </node>
      <node id="6">
        <label>DallasTemperature.h</label>
      </node>
      <node id="9">
        <label>FS.h</label>
      </node>
      <node id="15">
        <label>NTPClient.h</label>
      </node>
      <node id="5">
        <label>OneWire.h</label>
      </node>
      <node id="14">
        <label>RTClib.h</label>
      </node>
      <node id="10">
        <label>SD.h</label>
      </node>
      <node id="12">
        <label>WiFi.h</label>
      </node>
      <node id="16">
        <label>WiFiUdp.h</label>
      </node>
      <node id="13">
        <label>Wire.h</label>
      </node>
      <node id="18">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_measurement_point_8h" kindref="compound">MeasurementPoint.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="class_measurement_point_1a4441879bac27ef9cf2623d40bd347c18" refkind="member"><highlight class="normal"><ref refid="class_measurement_point_1a4abbf3752cd60d76f086071c4823ac1a" kindref="member">MeasurementPoint::MeasurementPoint</ref>(uint8_t<sp/><ref refid="class_measurement_point_1a13e1f193f0588973d8fe6b836ebe0fb9" kindref="member">address</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String&amp;<sp/><ref refid="class_measurement_point_1aa689590a454a7e11401a59e0399e66f4" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_measurement_point_1a13e1f193f0588973d8fe6b836ebe0fb9" kindref="member">address</ref>(<ref refid="class_measurement_point_1a13e1f193f0588973d8fe6b836ebe0fb9" kindref="member">address</ref>),</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_measurement_point_1aa689590a454a7e11401a59e0399e66f4" kindref="member">name</ref>(<ref refid="class_measurement_point_1aa689590a454a7e11401a59e0399e66f4" kindref="member">name</ref>),</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_measurement_point_1ada9ba45e500305e667f2a489603e84a8" kindref="member">currentTemp</ref>(0),</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_measurement_point_1a2848f528b229967f371cc83e394b26fb" kindref="member">minTemp</ref>(32767),</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_measurement_point_1a38e188f2325f505993d55fa7a2d3e169" kindref="member">maxTemp</ref>(-32768),</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_measurement_point_1a3f1d2653a05ccfa24d2305f5b07e35db" kindref="member">lowAlarmThreshold</ref>(-10),</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_measurement_point_1a63f7bd3c914d6b77bc6828cc83f4fef6" kindref="member">highAlarmThreshold</ref>(50),</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_measurement_point_1a18c9fe4e70a4cc17473fd9df8a3c6b68" kindref="member">alarmStatus</ref>(0),</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_measurement_point_1a9b17fba6e1ea928d4aa88abf28731fc7" kindref="member">errorStatus</ref>(0),</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_measurement_point_1a2bd6f123317fd8ff0ed22be09a7ac495" kindref="member">boundSensor</ref>(nullptr)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//oneWireBus(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>else<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="class_measurement_point_1a8ee3863bb5548fe9c919234aff8ee0b6" refkind="member"><highlight class="normal"><ref refid="class_measurement_point_1a8ee3863bb5548fe9c919234aff8ee0b6" kindref="member">MeasurementPoint::~MeasurementPoint</ref>()<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>delete<sp/>boundSensor<sp/>here;<sp/>ownership<sp/>is<sp/>external</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_measurement_point_1a2bd6f123317fd8ff0ed22be09a7ac495" kindref="member">boundSensor</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="class_measurement_point_1a7b74a18d86e0e545264a774aa2c31cad" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_measurement_point_1a7b74a18d86e0e545264a774aa2c31cad" kindref="member">MeasurementPoint::getAddress</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_measurement_point_1a13e1f193f0588973d8fe6b836ebe0fb9" kindref="member">address</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_measurement_point_1aa3a80d373c7609c7b178bf7353ffdd7a" refkind="member"><highlight class="normal">String<sp/><ref refid="class_measurement_point_1aa3a80d373c7609c7b178bf7353ffdd7a" kindref="member">MeasurementPoint::getName</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_measurement_point_1aa689590a454a7e11401a59e0399e66f4" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="class_measurement_point_1aceaf14fde40bcd5331e5ea6a07d7dde8" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="class_measurement_point_1aceaf14fde40bcd5331e5ea6a07d7dde8" kindref="member">MeasurementPoint::getCurrentTemp</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_measurement_point_1ada9ba45e500305e667f2a489603e84a8" kindref="member">currentTemp</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="class_measurement_point_1adc31f012462c1623617d5f362bcb2c59" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="class_measurement_point_1adc31f012462c1623617d5f362bcb2c59" kindref="member">MeasurementPoint::getMinTemp</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_measurement_point_1a2848f528b229967f371cc83e394b26fb" kindref="member">minTemp</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_measurement_point_1a8677e00e0be369d7874f4982990dc56d" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="class_measurement_point_1a8677e00e0be369d7874f4982990dc56d" kindref="member">MeasurementPoint::getMaxTemp</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_measurement_point_1a38e188f2325f505993d55fa7a2d3e169" kindref="member">maxTemp</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="class_measurement_point_1a6e538e117d9e22c6998b56519a51d6ba" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="class_measurement_point_1a6e538e117d9e22c6998b56519a51d6ba" kindref="member">MeasurementPoint::getLowAlarmThreshold</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_measurement_point_1a3f1d2653a05ccfa24d2305f5b07e35db" kindref="member">lowAlarmThreshold</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="class_measurement_point_1a71d6d440240f110cbd80c58bbc47aff6" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="class_measurement_point_1a71d6d440240f110cbd80c58bbc47aff6" kindref="member">MeasurementPoint::getHighAlarmThreshold</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_measurement_point_1a63f7bd3c914d6b77bc6828cc83f4fef6" kindref="member">highAlarmThreshold</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="class_measurement_point_1a1421d744f7982e528a579da02adb1919" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_measurement_point_1a1421d744f7982e528a579da02adb1919" kindref="member">MeasurementPoint::getAlarmStatus</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_measurement_point_1a18c9fe4e70a4cc17473fd9df8a3c6b68" kindref="member">alarmStatus</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_measurement_point_1a3fb0693931f12190a7f96e5d6be51b51" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_measurement_point_1a3fb0693931f12190a7f96e5d6be51b51" kindref="member">MeasurementPoint::getErrorStatus</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_measurement_point_1a9b17fba6e1ea928d4aa88abf28731fc7" kindref="member">errorStatus</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="class_measurement_point_1ae3abe83ed3e7979a906c7d753ac9d22d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_measurement_point_1ae3abe83ed3e7979a906c7d753ac9d22d" kindref="member">MeasurementPoint::setName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String&amp;<sp/>newName)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newName<sp/>!=<sp/><ref refid="class_measurement_point_1aa689590a454a7e11401a59e0399e66f4" kindref="member">name</ref>)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>oldName<sp/>=<sp/><ref refid="class_measurement_point_1aa689590a454a7e11401a59e0399e66f4" kindref="member">name</ref>.isEmpty()<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Point_&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(<ref refid="class_measurement_point_1a13e1f193f0588973d8fe6b836ebe0fb9" kindref="member">address</ref>)<sp/>:<sp/><ref refid="class_measurement_point_1aa689590a454a7e11401a59e0399e66f4" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_measurement_point_1aa689590a454a7e11401a59e0399e66f4" kindref="member">name</ref><sp/>=<sp/>newName;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" kindref="member">LoggerManager::info</ref>(</highlight><highlight class="stringliteral">&quot;POINT_CONFIG&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Point<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(<ref refid="class_measurement_point_1a13e1f193f0588973d8fe6b836ebe0fb9" kindref="member">address</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>name<sp/>changed<sp/>from<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>to<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_measurement_point_1aa689590a454a7e11401a59e0399e66f4" kindref="member">name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//name<sp/>=<sp/>newName;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="class_measurement_point_1ac780917beebc11d705824cab8f43b94d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_measurement_point_1ac780917beebc11d705824cab8f43b94d" kindref="member">MeasurementPoint::setLowAlarmThreshold</ref>(int16_t<sp/>threshold)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_measurement_point_1a3f1d2653a05ccfa24d2305f5b07e35db" kindref="member">lowAlarmThreshold</ref><sp/>!=<sp/>threshold)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" kindref="member">LoggerManager::info</ref>(</highlight><highlight class="stringliteral">&quot;POINT_CONFIG&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Point<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(<ref refid="class_measurement_point_1a13e1f193f0588973d8fe6b836ebe0fb9" kindref="member">address</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_measurement_point_1aa689590a454a7e11401a59e0399e66f4" kindref="member">name</ref><sp/>+<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;)<sp/>low<sp/>alarm<sp/>threshold<sp/>changed<sp/>from<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(<ref refid="class_measurement_point_1a3f1d2653a05ccfa24d2305f5b07e35db" kindref="member">lowAlarmThreshold</ref>)<sp/>+<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;°C<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(threshold)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;°C&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_measurement_point_1a3f1d2653a05ccfa24d2305f5b07e35db" kindref="member">lowAlarmThreshold</ref><sp/>=<sp/>threshold;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//lowAlarmThreshold<sp/>=<sp/>threshold;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_measurement_point_1a71995209f2507e6cc15d01607f60767f" kindref="member">updateAlarmStatus</ref>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="class_measurement_point_1aefb47fef40f33161be5c6fddf0cf6329" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_measurement_point_1aefb47fef40f33161be5c6fddf0cf6329" kindref="member">MeasurementPoint::setHighAlarmThreshold</ref>(int16_t<sp/>threshold)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_measurement_point_1a63f7bd3c914d6b77bc6828cc83f4fef6" kindref="member">highAlarmThreshold</ref><sp/>!=<sp/>threshold)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" kindref="member">LoggerManager::info</ref>(</highlight><highlight class="stringliteral">&quot;POINT_CONFIG&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Point<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(<ref refid="class_measurement_point_1a13e1f193f0588973d8fe6b836ebe0fb9" kindref="member">address</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_measurement_point_1aa689590a454a7e11401a59e0399e66f4" kindref="member">name</ref><sp/>+<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;)<sp/>high<sp/>alarm<sp/>threshold<sp/>changed<sp/>from<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(<ref refid="class_measurement_point_1a63f7bd3c914d6b77bc6828cc83f4fef6" kindref="member">highAlarmThreshold</ref>)<sp/>+<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;°C<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(threshold)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;°C&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_measurement_point_1a63f7bd3c914d6b77bc6828cc83f4fef6" kindref="member">highAlarmThreshold</ref><sp/>=<sp/>threshold;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//highAlarmThreshold<sp/>=<sp/>threshold;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_measurement_point_1a71995209f2507e6cc15d01607f60767f" kindref="member">updateAlarmStatus</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="class_measurement_point_1a3c3af28d9aabc9e5b9e2e370eaa29ce0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_measurement_point_1a3c3af28d9aabc9e5b9e2e370eaa29ce0" kindref="member">MeasurementPoint::bindSensor</ref>(<ref refid="class_sensor" kindref="compound">Sensor</ref>*<sp/>sensor)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_measurement_point_1a2bd6f123317fd8ff0ed22be09a7ac495" kindref="member">boundSensor</ref><sp/>=<sp/>sensor;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="class_measurement_point_1ab93923a15b7e55af89d1269b681fb856" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_measurement_point_1ab93923a15b7e55af89d1269b681fb856" kindref="member">MeasurementPoint::unbindSensor</ref>()<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_measurement_point_1a2bd6f123317fd8ff0ed22be09a7ac495" kindref="member">boundSensor</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="class_measurement_point_1a81c7ae93a9314344967d0f31c6fefe2f" refkind="member"><highlight class="normal"><ref refid="class_sensor" kindref="compound">Sensor</ref>*<sp/><ref refid="class_measurement_point_1a81c7ae93a9314344967d0f31c6fefe2f" kindref="member">MeasurementPoint::getBoundSensor</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_measurement_point_1a2bd6f123317fd8ff0ed22be09a7ac495" kindref="member">boundSensor</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="class_measurement_point_1a3c6d3325a506e8797bc759f15b70391f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_measurement_point_1a3c6d3325a506e8797bc759f15b70391f" kindref="member">MeasurementPoint::update</ref>()<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_measurement_point_1a2bd6f123317fd8ff0ed22be09a7ac495" kindref="member">boundSensor</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Example:<sp/>ask<sp/>the<sp/>sensor<sp/>for<sp/>the<sp/>latest<sp/>temperature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(boundSensor-&gt;readTemperature())<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_measurement_point_1ada9ba45e500305e667f2a489603e84a8" kindref="member">currentTemp</ref><sp/>=<sp/><ref refid="class_measurement_point_1a2bd6f123317fd8ff0ed22be09a7ac495" kindref="member">boundSensor</ref>-&gt;getCurrentTemp();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.printf(&quot;\nPoint:<sp/>%d.<sp/>%s.<sp/>Sensor:<sp/>%s.<sp/>Temp:<sp/>%d\n&quot;,<sp/>getAddress(),<sp/>getName(),<sp/>boundSensor-&gt;getName(),<sp/>currentTemp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_measurement_point_1ada9ba45e500305e667f2a489603e84a8" kindref="member">currentTemp</ref><sp/>&lt;<sp/><ref refid="class_measurement_point_1a2848f528b229967f371cc83e394b26fb" kindref="member">minTemp</ref>)<sp/><ref refid="class_measurement_point_1a2848f528b229967f371cc83e394b26fb" kindref="member">minTemp</ref><sp/>=<sp/><ref refid="class_measurement_point_1ada9ba45e500305e667f2a489603e84a8" kindref="member">currentTemp</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_measurement_point_1ada9ba45e500305e667f2a489603e84a8" kindref="member">currentTemp</ref><sp/>&gt;<sp/><ref refid="class_measurement_point_1a38e188f2325f505993d55fa7a2d3e169" kindref="member">maxTemp</ref>)<sp/><ref refid="class_measurement_point_1a38e188f2325f505993d55fa7a2d3e169" kindref="member">maxTemp</ref><sp/>=<sp/><ref refid="class_measurement_point_1ada9ba45e500305e667f2a489603e84a8" kindref="member">currentTemp</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_measurement_point_1a9b17fba6e1ea928d4aa88abf28731fc7" kindref="member">errorStatus</ref><sp/>=<sp/><ref refid="class_measurement_point_1a2bd6f123317fd8ff0ed22be09a7ac495" kindref="member">boundSensor</ref>-&gt;getErrorStatus();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}<sp/>else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//errorStatus<sp/>=<sp/>boundSensor-&gt;getErrorStatus();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_measurement_point_1a9b17fba6e1ea928d4aa88abf28731fc7" kindref="member">errorStatus</ref><sp/>=<sp/>0x01;<sp/></highlight><highlight class="comment">//<sp/>Example:<sp/>error<sp/>code<sp/>for<sp/>&quot;not<sp/>bound&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_measurement_point_1a71995209f2507e6cc15d01607f60767f" kindref="member">updateAlarmStatus</ref>();</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="class_measurement_point_1a6a78c850d05aa4ae8151e5e9f828fce0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_measurement_point_1a6a78c850d05aa4ae8151e5e9f828fce0" kindref="member">MeasurementPoint::resetMinMaxTemp</ref>()<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_measurement_point_1a2848f528b229967f371cc83e394b26fb" kindref="member">minTemp</ref><sp/>=<sp/><ref refid="class_measurement_point_1ada9ba45e500305e667f2a489603e84a8" kindref="member">currentTemp</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_measurement_point_1a38e188f2325f505993d55fa7a2d3e169" kindref="member">maxTemp</ref><sp/>=<sp/><ref refid="class_measurement_point_1ada9ba45e500305e667f2a489603e84a8" kindref="member">currentTemp</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="class_measurement_point_1a71995209f2507e6cc15d01607f60767f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_measurement_point_1a71995209f2507e6cc15d01607f60767f" kindref="member">MeasurementPoint::updateAlarmStatus</ref>()<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_measurement_point_1a18c9fe4e70a4cc17473fd9df8a3c6b68" kindref="member">alarmStatus</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_measurement_point_1a9b17fba6e1ea928d4aa88abf28731fc7" kindref="member">errorStatus</ref><sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_measurement_point_1ada9ba45e500305e667f2a489603e84a8" kindref="member">currentTemp</ref><sp/>&lt;<sp/><ref refid="class_measurement_point_1a3f1d2653a05ccfa24d2305f5b07e35db" kindref="member">lowAlarmThreshold</ref>)<sp/><ref refid="class_measurement_point_1a18c9fe4e70a4cc17473fd9df8a3c6b68" kindref="member">alarmStatus</ref><sp/>|=<sp/>0x01;<sp/></highlight><highlight class="comment">//<sp/>Low<sp/>alarm<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_measurement_point_1ada9ba45e500305e667f2a489603e84a8" kindref="member">currentTemp</ref><sp/>&gt;<sp/><ref refid="class_measurement_point_1a63f7bd3c914d6b77bc6828cc83f4fef6" kindref="member">highAlarmThreshold</ref>)<sp/><ref refid="class_measurement_point_1a18c9fe4e70a4cc17473fd9df8a3c6b68" kindref="member">alarmStatus</ref><sp/>|=<sp/>0x02;<sp/></highlight><highlight class="comment">//<sp/>High<sp/>alarm<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>MeasurementPoint::setOneWireBus(uint8_t<sp/>bus)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>oneWireBus<sp/>=<sp/>bus;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/>uint8_t<sp/>MeasurementPoint::getOneWireBus()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>oneWireBus;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/MeasurementPoint.cpp"/>
  </compounddef>
</doxygen>
