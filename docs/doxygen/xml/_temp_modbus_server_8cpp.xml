<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="_temp_modbus_server_8cpp" kind="file" language="C++">
    <compoundname>TempModbusServer.cpp</compoundname>
    <includes refid="_temp_modbus_server_8h" local="yes">TempModbusServer.h</includes>
    <incdepgraph>
      <node id="12">
        <label>LoggerManager.h</label>
        <link refid="_logger_manager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>MeasurementPoint.h</label>
        <link refid="_measurement_point_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>RegisterMap.h</label>
        <link refid="_register_map_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Sensor.h</label>
        <link refid="_sensor_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>TempModbusServer.h</label>
        <link refid="_temp_modbus_server_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>TimeManager.h</label>
        <link refid="_time_manager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/TempModbusServer.cpp</label>
        <link refid="_temp_modbus_server_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Adafruit_MAX31865.h</label>
      </node>
      <node id="3">
        <label>Arduino.h</label>
      </node>
      <node id="21">
        <label>ArduinoJson.h</label>
      </node>
      <node id="10">
        <label>DallasTemperature.h</label>
      </node>
      <node id="13">
        <label>FS.h</label>
      </node>
      <node id="4">
        <label>ModbusServerRTU.h</label>
      </node>
      <node id="19">
        <label>NTPClient.h</label>
      </node>
      <node id="9">
        <label>OneWire.h</label>
      </node>
      <node id="18">
        <label>RTClib.h</label>
      </node>
      <node id="14">
        <label>SD.h</label>
      </node>
      <node id="16">
        <label>WiFi.h</label>
      </node>
      <node id="20">
        <label>WiFiUdp.h</label>
      </node>
      <node id="17">
        <label>Wire.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="22">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_temp_modbus_server_8h" kindref="compound">TempModbusServer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="class_temp_modbus_server_1a32478c395aa45fcdcafcd8790de50691" refkind="member"><highlight class="normal"><ref refid="class_temp_modbus_server_1a32478c395aa45fcdcafcd8790de50691" kindref="member">TempModbusServer::TempModbusServer</ref>(<ref refid="class_register_map" kindref="compound">RegisterMap</ref>&amp;<sp/>regMap,<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>HardwareSerial&amp;<sp/>serialPort,<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rx,<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tx,<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>de,</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>baud)<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal">:<sp/><ref refid="class_temp_modbus_server_1a9caa115b3b1a8131680cdc620a23139e" kindref="member">registerMap</ref>(regMap),<sp/><ref refid="class_temp_modbus_server_1a4db19b8c522c7241cc8507b26dae6997" kindref="member">serverID</ref>(id),<sp/><ref refid="class_temp_modbus_server_1afecdc5347ebf2b0a5729b2e8e2cb0642" kindref="member">serial</ref>(serialPort),<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><ref refid="class_temp_modbus_server_1ae3a8fcae5056d16b97c0281fc4bddf74" kindref="member">rxPin</ref>(rx),<sp/><ref refid="class_temp_modbus_server_1ab07ddf78bd3b4f6fde1f0e86e6eb4449" kindref="member">txPin</ref>(tx),<sp/><ref refid="class_temp_modbus_server_1acd386ba587dcfd86230f2f4156ee7303" kindref="member">baudRate</ref>(baud),<sp/><ref refid="class_temp_modbus_server_1a91abdc37c36d4d2a8b070bd3031a2373" kindref="member">dePin</ref>(de)<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>ModbusRTU<sp/>server<sp/>with<sp/>2000ms<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><ref refid="class_temp_modbus_server_1a84bf329562ebb8bb9b9b55c120a4ddae" kindref="member">mbServer</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ModbusServerRTU(1000,<sp/><ref refid="class_temp_modbus_server_1a91abdc37c36d4d2a8b070bd3031a2373" kindref="member">dePin</ref>);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>static<sp/>pointer<sp/>to<sp/>register<sp/>map<sp/>for<sp/>worker<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><ref refid="class_temp_modbus_server_1a512f10fc6c18f19302b042bfc97bac80" kindref="member">registerMapPtr</ref><sp/>=<sp/>&amp;regMap;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LOG:<sp/>Modbus<sp/>server<sp/>creation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><ref refid="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" kindref="member">LoggerManager::info</ref>(</highlight><highlight class="stringliteral">&quot;MODBUS&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;Modbus<sp/>server<sp/>created<sp/>-<sp/>ID:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>+<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;,<sp/>Baud:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(baud)<sp/>+<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;,<sp/>RX:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(rx)<sp/>+<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;,<sp/>TX:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(tx)<sp/>+<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;,<sp/>DE:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(de));</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="class_register_map" kindref="compound">RegisterMap</ref>*<sp/><ref refid="class_temp_modbus_server_1a512f10fc6c18f19302b042bfc97bac80" kindref="member">TempModbusServer::registerMapPtr</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_temp_modbus_server_1ac703f8733fd8afdec9b315b266f5204a" refkind="member"><highlight class="normal"><ref refid="class_temp_modbus_server_1ac703f8733fd8afdec9b315b266f5204a" kindref="member">TempModbusServer::~TempModbusServer</ref>()<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_temp_modbus_server_1a84bf329562ebb8bb9b9b55c120a4ddae" kindref="member">mbServer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>need<sp/>to<sp/>call<sp/>stop()<sp/>as<sp/>it<sp/>doesn&apos;t<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_temp_modbus_server_1a84bf329562ebb8bb9b9b55c120a4ddae" kindref="member">mbServer</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_temp_modbus_server_1a84bf329562ebb8bb9b9b55c120a4ddae" kindref="member">mbServer</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bool<sp/>TempModbusServer::begin()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>Prepare<sp/>serial<sp/>port<sp/>for<sp/>Modbus<sp/>RTU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>RTUutils::prepareHardwareSerial(serial);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Serial.println(&quot;Modbus<sp/>begin1&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if<sp/>(baudRate<sp/>==<sp/>0)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baudRate<sp/>=<sp/>9600;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>serial.begin(baudRate,<sp/>SERIAL_8N1,<sp/>rxPin,<sp/>txPin);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Serial.println(&quot;Modbus<sp/>begin2&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>Register<sp/>worker<sp/>functions<sp/>for<sp/>different<sp/>Modbus<sp/>function<sp/>codes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>mbServer-&gt;registerWorker(serverID,<sp/>READ_HOLD_REGISTER,<sp/>&amp;TempModbusServer::readHoldingRegistersWorker);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Serial.println(&quot;Modbus<sp/>begin3&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>mbServer-&gt;registerWorker(serverID,<sp/>WRITE_HOLD_REGISTER,<sp/>&amp;TempModbusServer::writeHoldingRegisterWorker);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Serial.println(&quot;Modbus<sp/>begin4&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>mbServer-&gt;registerWorker(serverID,<sp/>WRITE_MULT_REGISTERS,<sp/>&amp;TempModbusServer::writeMultipleRegistersWorker);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Serial.println(&quot;Modbus<sp/>begin5&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>Start<sp/>ModbusRTU<sp/>server<sp/>-<sp/>note<sp/>that<sp/>begin()<sp/>returns<sp/>void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>mbServer-&gt;begin(serial);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>true;<sp/>//<sp/>Assume<sp/>success<sp/>since<sp/>we<sp/>can&apos;t<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="class_temp_modbus_server_1aac671b84770f4139745d08d05b5c1d92" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_temp_modbus_server_1aac671b84770f4139745d08d05b5c1d92" kindref="member">TempModbusServer::begin</ref>()<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" kindref="member">LoggerManager::info</ref>(</highlight><highlight class="stringliteral">&quot;MODBUS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Starting<sp/>Modbus<sp/>RTU<sp/>server<sp/>initialization&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prepare<sp/>serial<sp/>port<sp/>for<sp/>Modbus<sp/>RTU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>RTUutils::prepareHardwareSerial(<ref refid="class_temp_modbus_server_1afecdc5347ebf2b0a5729b2e8e2cb0642" kindref="member">serial</ref>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;Modbus<sp/>begin1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_temp_modbus_server_1acd386ba587dcfd86230f2f4156ee7303" kindref="member">baudRate</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_temp_modbus_server_1acd386ba587dcfd86230f2f4156ee7303" kindref="member">baudRate</ref><sp/>=<sp/>9600;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_logger_manager_1a0d52b0ff7bff22817e987ad753102854" kindref="member">LoggerManager::warning</ref>(</highlight><highlight class="stringliteral">&quot;MODBUS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Baud<sp/>rate<sp/>was<sp/>0,<sp/>defaulting<sp/>to<sp/>9600&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_temp_modbus_server_1afecdc5347ebf2b0a5729b2e8e2cb0642" kindref="member">serial</ref>.begin(<ref refid="class_temp_modbus_server_1acd386ba587dcfd86230f2f4156ee7303" kindref="member">baudRate</ref>,<sp/>SERIAL_8N1,<sp/><ref refid="class_temp_modbus_server_1ae3a8fcae5056d16b97c0281fc4bddf74" kindref="member">rxPin</ref>,<sp/><ref refid="class_temp_modbus_server_1ab07ddf78bd3b4f6fde1f0e86e6eb4449" kindref="member">txPin</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" kindref="member">LoggerManager::info</ref>(</highlight><highlight class="stringliteral">&quot;MODBUS&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Serial<sp/>port<sp/>initialized<sp/>-<sp/>Baud:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(<ref refid="class_temp_modbus_server_1acd386ba587dcfd86230f2f4156ee7303" kindref="member">baudRate</ref>)<sp/>+<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>RX:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(<ref refid="class_temp_modbus_server_1ae3a8fcae5056d16b97c0281fc4bddf74" kindref="member">rxPin</ref>)<sp/>+<sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>TX:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(<ref refid="class_temp_modbus_server_1ab07ddf78bd3b4f6fde1f0e86e6eb4449" kindref="member">txPin</ref>));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;Modbus<sp/>begin2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>worker<sp/>functions<sp/>for<sp/>different<sp/>Modbus<sp/>function<sp/>codes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_temp_modbus_server_1a84bf329562ebb8bb9b9b55c120a4ddae" kindref="member">mbServer</ref>-&gt;registerWorker(<ref refid="class_temp_modbus_server_1a4db19b8c522c7241cc8507b26dae6997" kindref="member">serverID</ref>,<sp/>READ_HOLD_REGISTER,<sp/>&amp;<ref refid="class_temp_modbus_server_1a7d4a0ced2cfd174a4697a85492e12a58" kindref="member">TempModbusServer::readHoldingRegistersWorker</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" kindref="member">LoggerManager::info</ref>(</highlight><highlight class="stringliteral">&quot;MODBUS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Registered<sp/>READ_HOLD_REGISTER<sp/>worker<sp/>(FC=03)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;Modbus<sp/>begin3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_temp_modbus_server_1a84bf329562ebb8bb9b9b55c120a4ddae" kindref="member">mbServer</ref>-&gt;registerWorker(<ref refid="class_temp_modbus_server_1a4db19b8c522c7241cc8507b26dae6997" kindref="member">serverID</ref>,<sp/>WRITE_HOLD_REGISTER,<sp/>&amp;<ref refid="class_temp_modbus_server_1a88b7288d622b52f9e28b7c6075b75fe0" kindref="member">TempModbusServer::writeHoldingRegisterWorker</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" kindref="member">LoggerManager::info</ref>(</highlight><highlight class="stringliteral">&quot;MODBUS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Registered<sp/>WRITE_HOLD_REGISTER<sp/>worker<sp/>(FC=06)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;Modbus<sp/>begin4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_temp_modbus_server_1a84bf329562ebb8bb9b9b55c120a4ddae" kindref="member">mbServer</ref>-&gt;registerWorker(<ref refid="class_temp_modbus_server_1a4db19b8c522c7241cc8507b26dae6997" kindref="member">serverID</ref>,<sp/>WRITE_MULT_REGISTERS,<sp/>&amp;<ref refid="class_temp_modbus_server_1a52236f3c77c42d126dcaee7515fa37d3" kindref="member">TempModbusServer::writeMultipleRegistersWorker</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" kindref="member">LoggerManager::info</ref>(</highlight><highlight class="stringliteral">&quot;MODBUS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Registered<sp/>WRITE_MULT_REGISTERS<sp/>worker<sp/>(FC=16)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;Modbus<sp/>begin5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>ModbusRTU<sp/>server<sp/>-<sp/>note<sp/>that<sp/>begin()<sp/>returns<sp/>void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_temp_modbus_server_1a84bf329562ebb8bb9b9b55c120a4ddae" kindref="member">mbServer</ref>-&gt;begin(<ref refid="class_temp_modbus_server_1afecdc5347ebf2b0a5729b2e8e2cb0642" kindref="member">serial</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" kindref="member">LoggerManager::info</ref>(</highlight><highlight class="stringliteral">&quot;MODBUS&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Modbus<sp/>RTU<sp/>server<sp/>started<sp/>successfully<sp/>-<sp/>Server<sp/>ID:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(<ref refid="class_temp_modbus_server_1a4db19b8c522c7241cc8507b26dae6997" kindref="member">serverID</ref>));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>success<sp/>since<sp/>we<sp/>can&apos;t<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="class_temp_modbus_server_1a8bbfa71756ccff5f4b80509c41078c6c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_temp_modbus_server_1a8bbfa71756ccff5f4b80509c41078c6c" kindref="member">TempModbusServer::stop</ref>()<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>no<sp/>stop()<sp/>method<sp/>in<sp/>ModbusServerRTU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>You<sp/>might<sp/>want<sp/>to<sp/>implement<sp/>any<sp/>cleanup<sp/>needed<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Worker<sp/>function<sp/>for<sp/>READ_HOLD_REGISTER<sp/>(FC=03)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ModbusMessage<sp/>TempModbusServer::readHoldingRegistersWorker(ModbusMessage<sp/>request)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>address;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Requested<sp/>register<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>words;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Requested<sp/>number<sp/>of<sp/>registers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>ModbusMessage<sp/>response;<sp/><sp/><sp/><sp/><sp/>//<sp/>Response<sp/>message<sp/>to<sp/>be<sp/>sent<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>Get<sp/>request<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>request.get(2,<sp/>address);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>request.get(4,<sp/>words);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>Check<sp/>if<sp/>address<sp/>and<sp/>word<sp/>count<sp/>are<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if<sp/>(words<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>words<sp/>&lt;=<sp/>125)<sp/>{<sp/><sp/>//<sp/>Max<sp/>125<sp/>registers<sp/>per<sp/>request<sp/>as<sp/>per<sp/>Modbus<sp/>spec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Set<sp/>up<sp/>response<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.add(request.getServerID(),<sp/>request.getFunctionCode(),<sp/>(uint8_t)(words<sp/>*<sp/>2));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Add<sp/>requested<sp/>register<sp/>values<sp/>to<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>allValid<sp/>=<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(uint16_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>words;<sp/>i++)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>regValue<sp/>=<sp/>registerMapPtr-&gt;readHoldingRegister(address<sp/>+<sp/>i);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Check<sp/>if<sp/>register<sp/>read<sp/>was<sp/>successful<sp/>-<sp/>0xFFFF<sp/>is<sp/>often<sp/>used<sp/>as<sp/>an<sp/>error<sp/>indicator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(regValue<sp/>!=<sp/>0xFFFF)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.add(regValue);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allValid<sp/>=<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>If<sp/>any<sp/>register<sp/>was<sp/>invalid,<sp/>return<sp/>error<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!allValid)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.clear();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.setError(request.getServerID(),<sp/>request.getFunctionCode(),<sp/>ILLEGAL_DATA_ADDRESS);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Invalid<sp/>word<sp/>count,<sp/>return<sp/>error<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.setError(request.getServerID(),<sp/>request.getFunctionCode(),<sp/>ILLEGAL_DATA_ADDRESS);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>response;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="class_temp_modbus_server_1a7d4a0ced2cfd174a4697a85492e12a58" refkind="member"><highlight class="normal">ModbusMessage<sp/><ref refid="class_temp_modbus_server_1a7d4a0ced2cfd174a4697a85492e12a58" kindref="member">TempModbusServer::readHoldingRegistersWorker</ref>(ModbusMessage<sp/>request)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>address;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Requested<sp/>register<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>words;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Requested<sp/>number<sp/>of<sp/>registers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>ModbusMessage<sp/>response;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Response<sp/>message<sp/>to<sp/>be<sp/>sent<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>request<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>request.get(2,<sp/>address);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>request.get(4,<sp/>words);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOG:<sp/>Read<sp/>request<sp/>received</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" kindref="member">LoggerManager::info</ref>(</highlight><highlight class="stringliteral">&quot;MODBUS_READ&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Read<sp/>request<sp/>-<sp/>Address:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(address)<sp/>+<sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Count:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(words)<sp/>+<sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Client<sp/>ID:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(request.getServerID()));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>address<sp/>and<sp/>word<sp/>count<sp/>are<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(words<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>words<sp/>&lt;=<sp/>125)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Max<sp/>125<sp/>registers<sp/>per<sp/>request<sp/>as<sp/>per<sp/>Modbus<sp/>spec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>response<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.add(request.getServerID(),<sp/>request.getFunctionCode(),<sp/>(uint8_t)(words<sp/>*<sp/>2));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>requested<sp/>register<sp/>values<sp/>to<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allValid<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>readValues<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>words;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>regValue<sp/>=<sp/><ref refid="class_temp_modbus_server_1a512f10fc6c18f19302b042bfc97bac80" kindref="member">registerMapPtr</ref>-&gt;readHoldingRegister(address<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>register<sp/>read<sp/>was<sp/>successful<sp/>-<sp/>0xFFFF<sp/>is<sp/>often<sp/>used<sp/>as<sp/>an<sp/>error<sp/>indicator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regValue<sp/>!=<sp/>0xFFFF)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.add(regValue);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>5)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Log<sp/>first<sp/>5<sp/>values<sp/>to<sp/>avoid<sp/>spam</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readValues<sp/>+=<sp/>String(address<sp/>+<sp/>i)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(regValue)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readValues<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;...&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allValid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_logger_manager_1aef24f00186213fa78be3b104a50d58e6" kindref="member">LoggerManager::error</ref>(</highlight><highlight class="stringliteral">&quot;MODBUS_READ&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>register<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(address<sp/>+<sp/>i));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>any<sp/>register<sp/>was<sp/>invalid,<sp/>return<sp/>error<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!allValid)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.clear();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.setError(request.getServerID(),<sp/>request.getFunctionCode(),<sp/>ILLEGAL_DATA_ADDRESS);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_logger_manager_1aef24f00186213fa78be3b104a50d58e6" kindref="member">LoggerManager::error</ref>(</highlight><highlight class="stringliteral">&quot;MODBUS_READ&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Read<sp/>failed<sp/>-<sp/>Invalid<sp/>register<sp/>address<sp/>range:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String(address)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(address<sp/>+<sp/>words<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" kindref="member">LoggerManager::info</ref>(</highlight><highlight class="stringliteral">&quot;MODBUS_READ&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Read<sp/>successful<sp/>-<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(words)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>registers:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>readValues);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Invalid<sp/>word<sp/>count,<sp/>return<sp/>error<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.setError(request.getServerID(),<sp/>request.getFunctionCode(),<sp/>ILLEGAL_DATA_ADDRESS);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_logger_manager_1aef24f00186213fa78be3b104a50d58e6" kindref="member">LoggerManager::error</ref>(</highlight><highlight class="stringliteral">&quot;MODBUS_READ&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Read<sp/>failed<sp/>-<sp/>Invalid<sp/>word<sp/>count:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(words)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(max<sp/>125)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>response;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Worker<sp/>function<sp/>for<sp/>WRITE_HOLD_REGISTER<sp/>(FC=06)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ModbusMessage<sp/>TempModbusServer::writeHoldingRegisterWorker(ModbusMessage<sp/>request)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>address;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Register<sp/>address<sp/>to<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>value;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Value<sp/>to<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>ModbusMessage<sp/>response;<sp/><sp/><sp/><sp/><sp/>//<sp/>Response<sp/>message<sp/>to<sp/>be<sp/>sent<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>Get<sp/>request<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>request.get(2,<sp/>address);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>request.get(4,<sp/>value);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>Try<sp/>to<sp/>write<sp/>the<sp/>value<sp/>to<sp/>the<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if<sp/>(registerMapPtr-&gt;writeHoldingRegister(address,<sp/>value))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Success<sp/>-<sp/>echo<sp/>the<sp/>request<sp/>as<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>request;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Failed<sp/>-<sp/>return<sp/>error<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.setError(request.getServerID(),<sp/>request.getFunctionCode(),<sp/>ILLEGAL_DATA_ADDRESS);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>response;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="class_temp_modbus_server_1a88b7288d622b52f9e28b7c6075b75fe0" refkind="member"><highlight class="normal">ModbusMessage<sp/><ref refid="class_temp_modbus_server_1a88b7288d622b52f9e28b7c6075b75fe0" kindref="member">TempModbusServer::writeHoldingRegisterWorker</ref>(ModbusMessage<sp/>request)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>address;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>address<sp/>to<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>value;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Value<sp/>to<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>ModbusMessage<sp/>response;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Response<sp/>message<sp/>to<sp/>be<sp/>sent<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>request<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>request.get(2,<sp/>address);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>request.get(4,<sp/>value);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOG:<sp/>Write<sp/>request<sp/>received</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" kindref="member">LoggerManager::info</ref>(</highlight><highlight class="stringliteral">&quot;MODBUS_WRITE&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Write<sp/>single<sp/>register<sp/>-<sp/>Address:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(address)<sp/>+<sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Value:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(value)<sp/>+<sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Client<sp/>ID:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(request.getServerID()));</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>write<sp/>the<sp/>value<sp/>to<sp/>the<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_temp_modbus_server_1a512f10fc6c18f19302b042bfc97bac80" kindref="member">registerMapPtr</ref>-&gt;writeHoldingRegister(address,<sp/>value))<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Success<sp/>-<sp/>echo<sp/>the<sp/>request<sp/>as<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" kindref="member">LoggerManager::info</ref>(</highlight><highlight class="stringliteral">&quot;MODBUS_WRITE&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Write<sp/>successful<sp/>-<sp/>Register<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(address)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(value));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>request;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Failed<sp/>-<sp/>return<sp/>error<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.setError(request.getServerID(),<sp/>request.getFunctionCode(),<sp/>ILLEGAL_DATA_ADDRESS);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_logger_manager_1aef24f00186213fa78be3b104a50d58e6" kindref="member">LoggerManager::error</ref>(</highlight><highlight class="stringliteral">&quot;MODBUS_WRITE&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Write<sp/>failed<sp/>-<sp/>Invalid<sp/>register<sp/>address:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(address));</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>response;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Worker<sp/>function<sp/>for<sp/>WRITE_MULT_REGISTERS<sp/>(FC=16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ModbusMessage<sp/>TempModbusServer::writeMultipleRegistersWorker(ModbusMessage<sp/>request)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>address;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Starting<sp/>register<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>words;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Number<sp/>of<sp/>registers<sp/>to<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>bytesCount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Number<sp/>of<sp/>data<sp/>bytes<sp/>in<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>ModbusMessage<sp/>response;<sp/><sp/><sp/><sp/><sp/>//<sp/>Response<sp/>message<sp/>to<sp/>be<sp/>sent<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>Get<sp/>request<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>request.get(2,<sp/>address);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>request.get(4,<sp/>words);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>request.get(6,<sp/>bytesCount);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>Check<sp/>if<sp/>word<sp/>count<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if<sp/>(words<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>words<sp/>&lt;=<sp/>123<sp/>&amp;&amp;<sp/>bytesCount<sp/>==<sp/>words<sp/>*<sp/>2)<sp/>{<sp/><sp/>//<sp/>Max<sp/>123<sp/>registers<sp/>per<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>allWritten<sp/>=<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Write<sp/>each<sp/>register<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(uint16_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>words;<sp/>i++)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>value;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request.get(7<sp/>+<sp/>i<sp/>*<sp/>2,<sp/>value);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!registerMapPtr-&gt;writeHoldingRegister(address<sp/>+<sp/>i,<sp/>value))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allWritten<sp/>=<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(allWritten)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Success<sp/>-<sp/>create<sp/>response<sp/>with<sp/>address<sp/>and<sp/>word<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.add(request.getServerID(),<sp/>request.getFunctionCode());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.add(address);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.add(words);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Failed<sp/>to<sp/>write<sp/>at<sp/>least<sp/>one<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.setError(request.getServerID(),<sp/>request.getFunctionCode(),<sp/>ILLEGAL_DATA_ADDRESS);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Invalid<sp/>word<sp/>count<sp/>or<sp/>byte<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.setError(request.getServerID(),<sp/>request.getFunctionCode(),<sp/>ILLEGAL_DATA_ADDRESS);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>response;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="class_temp_modbus_server_1a52236f3c77c42d126dcaee7515fa37d3" refkind="member"><highlight class="normal">ModbusMessage<sp/><ref refid="class_temp_modbus_server_1a52236f3c77c42d126dcaee7515fa37d3" kindref="member">TempModbusServer::writeMultipleRegistersWorker</ref>(ModbusMessage<sp/>request)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>address;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Starting<sp/>register<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>words;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>registers<sp/>to<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>bytesCount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>data<sp/>bytes<sp/>in<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>ModbusMessage<sp/>response;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Response<sp/>message<sp/>to<sp/>be<sp/>sent<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>request<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>request.get(2,<sp/>address);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>request.get(4,<sp/>words);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>request.get(6,<sp/>bytesCount);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOG:<sp/>Multiple<sp/>write<sp/>request<sp/>received</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" kindref="member">LoggerManager::info</ref>(</highlight><highlight class="stringliteral">&quot;MODBUS_WRITE&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Write<sp/>multiple<sp/>registers<sp/>-<sp/>Start:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(address)<sp/>+<sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Count:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(words)<sp/>+<sp/></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Bytes:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(bytesCount)<sp/>+<sp/></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Client<sp/>ID:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(request.getServerID()));</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>word<sp/>count<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(words<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>words<sp/>&lt;=<sp/>123<sp/>&amp;&amp;<sp/>bytesCount<sp/>==<sp/>words<sp/>*<sp/>2)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Max<sp/>123<sp/>registers<sp/>per<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allWritten<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>writeValues<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>each<sp/>register<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>words;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>value;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request.get(7<sp/>+<sp/>i<sp/>*<sp/>2,<sp/>value);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_temp_modbus_server_1a512f10fc6c18f19302b042bfc97bac80" kindref="member">registerMapPtr</ref>-&gt;writeHoldingRegister(address<sp/>+<sp/>i,<sp/>value))<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>5)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Log<sp/>first<sp/>5<sp/>values<sp/>to<sp/>avoid<sp/>spam</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeValues<sp/>+=<sp/>String(address<sp/>+<sp/>i)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(value)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeValues<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;...&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allWritten<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_logger_manager_1aef24f00186213fa78be3b104a50d58e6" kindref="member">LoggerManager::error</ref>(</highlight><highlight class="stringliteral">&quot;MODBUS_WRITE&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>write<sp/>register<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(address<sp/>+<sp/>i)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(value));</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allWritten)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Success<sp/>-<sp/>create<sp/>response<sp/>with<sp/>address<sp/>and<sp/>word<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.add(request.getServerID(),<sp/>request.getFunctionCode());</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.add(address);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.add(words);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" kindref="member">LoggerManager::info</ref>(</highlight><highlight class="stringliteral">&quot;MODBUS_WRITE&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Multiple<sp/>write<sp/>successful<sp/>-<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(words)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>registers:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>writeValues);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Failed<sp/>to<sp/>write<sp/>at<sp/>least<sp/>one<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.setError(request.getServerID(),<sp/>request.getFunctionCode(),<sp/>ILLEGAL_DATA_ADDRESS);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_logger_manager_1aef24f00186213fa78be3b104a50d58e6" kindref="member">LoggerManager::error</ref>(</highlight><highlight class="stringliteral">&quot;MODBUS_WRITE&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Multiple<sp/>write<sp/>failed<sp/>-<sp/>Error<sp/>writing<sp/>to<sp/>register<sp/>range:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String(address)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(address<sp/>+<sp/>words<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Invalid<sp/>word<sp/>count<sp/>or<sp/>byte<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.setError(request.getServerID(),<sp/>request.getFunctionCode(),<sp/>ILLEGAL_DATA_ADDRESS);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_logger_manager_1aef24f00186213fa78be3b104a50d58e6" kindref="member">LoggerManager::error</ref>(</highlight><highlight class="stringliteral">&quot;MODBUS_WRITE&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Multiple<sp/>write<sp/>failed<sp/>-<sp/>Invalid<sp/>parameters:<sp/>Words=&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(words)<sp/>+<sp/></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Bytes=&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(bytesCount)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(expected<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(words<sp/>*<sp/>2)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>response;</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/TempModbusServer.cpp"/>
  </compounddef>
</doxygen>
