<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="class_logger_manager" kind="class" language="C++" prot="public">
    <compoundname>LoggerManager</compoundname>
    <includes refid="_logger_manager_8h" local="no">LoggerManager.h</includes>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_logger_manager_1a3f4c0cc78425ddd99d489740be325f4d" prot="private" static="yes" mutable="no">
        <type><ref refid="class_logger_manager" kindref="compound">LoggerManager</ref> *</type>
        <definition>LoggerManager * LoggerManager::_instance</definition>
        <argsstring></argsstring>
        <name>_instance</name>
        <qualifiedname>LoggerManager::_instance</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>Singleton instance pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="39" column="26" bodyfile="include/LoggerManager.h" bodystart="39" bodyend="-1"/>
        <referencedby refid="class_logger_manager_1a0bd4f43205e247f114f1a49a8de438d5" compoundref="_logger_manager_8cpp" startline="1175" endline="1230">_getAlarmLogFilesInRange</referencedby>
        <referencedby refid="class_logger_manager_1ad3222128e4c210c2006e314966c511f5" compoundref="_logger_manager_8cpp" startline="1623" endline="1675">_getEventLogFilesInRange</referencedby>
        <referencedby refid="class_logger_manager_1adec54c926cce1f89ac492f0c647e2ba1" compoundref="_logger_manager_8h" startline="175" endline="177">critical</referencedby>
        <referencedby refid="class_logger_manager_1aef24f00186213fa78be3b104a50d58e6" compoundref="_logger_manager_8h" startline="165" endline="167">error</referencedby>
        <referencedby refid="class_logger_manager_1a612d1bdfbfd0d93f9452fd7bac8775ca" compoundref="_logger_manager_8cpp" startline="1130" endline="1173">getAlarmHistoryCsv</referencedby>
        <referencedby refid="class_logger_manager_1af04d8d79f7bcb9ff4dace5b490502b50" compoundref="_logger_manager_8cpp" startline="1050" endline="1128">getAlarmHistoryJson</referencedby>
        <referencedby refid="class_logger_manager_1a19e6a7d2c3ad2b1d3fa5acb578fb1619" compoundref="_logger_manager_8cpp" startline="1865" endline="1889">getAlarmStateLogFiles</referencedby>
        <referencedby refid="class_logger_manager_1a782a868803b4e2861169796aad7b8b60" compoundref="_logger_manager_8cpp" startline="1804" endline="1833">getEventLogFilesStatic</referencedby>
        <referencedby refid="class_logger_manager_1a752cebdb1c0344890d265af9daee8313" compoundref="_logger_manager_8cpp" startline="1577" endline="1620">getEventLogsCsv</referencedby>
        <referencedby refid="class_logger_manager_1a8e154caf5cdb9dd50722e2f52314e383" compoundref="_logger_manager_8cpp" startline="1511" endline="1574">getEventLogsJson</referencedby>
        <referencedby refid="class_logger_manager_1ab16e7ab4b0cc70674b9b87118f72d805" compoundref="_logger_manager_8cpp" startline="1718" endline="1801">getEventLogStatsJson</referencedby>
        <referencedby refid="class_logger_manager_1acb4313c65e6a661229f2c3d662f1c059" compoundref="_logger_manager_8cpp" startline="1892" endline="1924">getFileInfo</referencedby>
        <referencedby refid="class_logger_manager_1aa1d28a0eee6d794090563cdffe7f43c1" compoundref="_logger_manager_8h" startline="136" endline="136">getInstance</referencedby>
        <referencedby refid="class_logger_manager_1af7630428e323854b0bcf5e2159511f84" compoundref="_logger_manager_8cpp" startline="143" endline="145">getLogDirectory</referencedby>
        <referencedby refid="class_logger_manager_1a72c969cc82b969c4899dc4d2c8280f0b" compoundref="_logger_manager_8cpp" startline="1941" endline="1955">getLogDirectoryPath</referencedby>
        <referencedby refid="class_logger_manager_1a2b670504d6ebd0c2c2f833caed6842d5" compoundref="_logger_manager_8cpp" startline="1838" endline="1862">getLogFiles</referencedby>
        <referencedby refid="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" compoundref="_logger_manager_8h" startline="145" endline="147">info</referencedby>
        <referencedby refid="class_logger_manager_1aa74d58708cf5cdf8ddafad648edadcf7" compoundref="_logger_manager_8cpp" startline="870" endline="877">logAlarmStateChange</referencedby>
        <referencedby refid="class_logger_manager_1a321bbaf7cc3b3aa05c8ec036d4dbfea0" compoundref="_logger_manager_8cpp" startline="8" endline="16">LoggerManager</referencedby>
        <referencedby refid="class_logger_manager_1a92719154d919a9bd45a8ea192e70dfcc" compoundref="_logger_manager_8cpp" startline="1927" endline="1938">openLogFile</referencedby>
        <referencedby refid="class_logger_manager_1a0d52b0ff7bff22817e987ad753102854" compoundref="_logger_manager_8h" startline="155" endline="157">warning</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_logger_manager_1ac79c2496082ce8e6ecd42c77e1c5292d" prot="private" static="no" mutable="no">
        <type><ref refid="class_temperature_controller" kindref="compound">TemperatureController</ref> *</type>
        <definition>TemperatureController* LoggerManager::_controller</definition>
        <argsstring></argsstring>
        <name>_controller</name>
        <qualifiedname>LoggerManager::_controller</qualifiedname>
        <briefdescription>
<para>Reference to temperature controller. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="40" column="27" bodyfile="include/LoggerManager.h" bodystart="40" bodyend="-1"/>
        <referencedby refid="class_logger_manager_1aab43f573f73cfe426cfbea04a9fdd3ee" compoundref="_logger_manager_8cpp" startline="259" endline="278">_generateCSVHeader</referencedby>
        <referencedby refid="class_logger_manager_1aa6938b6a5c002d6ed72ef352f0cc7a19" compoundref="_logger_manager_8cpp" startline="301" endline="335">_writeDataRow</referencedby>
        <referencedby refid="class_logger_manager_1a321bbaf7cc3b3aa05c8ec036d4dbfea0" compoundref="_logger_manager_8cpp" startline="8" endline="16">LoggerManager</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_logger_manager_1aaa946fe85923b5fd13ff8bb1c9a3e011" prot="private" static="no" mutable="no">
        <type><ref refid="class_time_manager" kindref="compound">TimeManager</ref> *</type>
        <definition>TimeManager* LoggerManager::_timeManager</definition>
        <argsstring></argsstring>
        <name>_timeManager</name>
        <qualifiedname>LoggerManager::_timeManager</qualifiedname>
        <briefdescription>
<para>Reference to time manager. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="41" column="17" bodyfile="include/LoggerManager.h" bodystart="41" bodyend="-1"/>
        <referencedby refid="class_logger_manager_1a3ca0b934265a4d9ce6391bf97dec179a" compoundref="_logger_manager_8cpp" startline="379" endline="387">_getCurrentDateString</referencedby>
        <referencedby refid="class_logger_manager_1a4f31651f8963f741bfbdb944164ffc15" compoundref="_logger_manager_8cpp" startline="389" endline="403">_getCurrentTimeString</referencedby>
        <referencedby refid="class_logger_manager_1a321bbaf7cc3b3aa05c8ec036d4dbfea0" compoundref="_logger_manager_8cpp" startline="8" endline="16">LoggerManager</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_logger_manager_1af144897db95f5165f66ba0937d23847d" prot="private" static="no" mutable="no">
        <type>fs::FS *</type>
        <definition>fs::FS* LoggerManager::_fs</definition>
        <argsstring></argsstring>
        <name>_fs</name>
        <qualifiedname>LoggerManager::_fs</qualifiedname>
        <briefdescription>
<para>File system interface (SD or LittleFS) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="42" column="12" bodyfile="include/LoggerManager.h" bodystart="42" bodyend="-1"/>
        <referencedby refid="class_logger_manager_1a0bb3b084e2a16c2d089e8761a093bef5" compoundref="_logger_manager_8cpp" startline="926" endline="937">_ensureAlarmStateLogExists</referencedby>
        <referencedby refid="class_logger_manager_1a27150c2682f4f8fa6bef8b5bb1b25e52" compoundref="_logger_manager_8cpp" startline="353" endline="377">_ensureDirectoryExists</referencedby>
        <referencedby refid="class_logger_manager_1a4f7591a3b5cb024b7354005b4362e049" compoundref="_logger_manager_8cpp" startline="784" endline="795">_ensureEventLogExists</referencedby>
        <referencedby refid="class_logger_manager_1a21b4985f38a484ab83b984ab285ea32e" compoundref="_logger_manager_8cpp" startline="532" endline="567">_getFilesForDate</referencedby>
        <referencedby refid="class_logger_manager_1a45f8c21f50e1920b78d24e1007b6af7d" compoundref="_logger_manager_8cpp" startline="1039" endline="1047">_isSDCardAvailable</referencedby>
        <referencedby refid="class_logger_manager_1ac50bc65494e34dca73f6ee0745a8b6e6" compoundref="_logger_manager_8cpp" startline="612" endline="638">_readHeaderFromFile</referencedby>
        <referencedby refid="class_logger_manager_1a58657d1fbd45469bb67c2c4d07c5a730" compoundref="_logger_manager_8cpp" startline="939" endline="958">_writeAlarmStateHeader</referencedby>
        <referencedby refid="class_logger_manager_1a72dc7742fbeeba07932fc5cb730c26d5" compoundref="_logger_manager_8cpp" startline="960" endline="996">_writeAlarmStateRow</referencedby>
        <referencedby refid="class_logger_manager_1aa6938b6a5c002d6ed72ef352f0cc7a19" compoundref="_logger_manager_8cpp" startline="301" endline="335">_writeDataRow</referencedby>
        <referencedby refid="class_logger_manager_1a515beeaa428acafce139d79b41fe9d0a" compoundref="_logger_manager_8cpp" startline="797" endline="816">_writeEventHeader</referencedby>
        <referencedby refid="class_logger_manager_1a472884ce9e2aed6a1570187dd37cc006" compoundref="_logger_manager_8cpp" startline="818" endline="845">_writeEventRow</referencedby>
        <referencedby refid="class_logger_manager_1a4095daee15dce39ba5f802ea5b5661a2" compoundref="_logger_manager_8cpp" startline="280" endline="299">_writeHeader</referencedby>
        <referencedby refid="class_logger_manager_1a647d06128ee720bed0022299f97b37b4" compoundref="_logger_manager_8cpp" startline="1030" endline="1035">deleteAlarmStateLogFile</referencedby>
        <referencedby refid="class_logger_manager_1a90c66b71788381dafdde9233d557c5b2" compoundref="_logger_manager_8cpp" startline="757" endline="763">deleteEventLogFile</referencedby>
        <referencedby refid="class_logger_manager_1a89aa88d2ed6cf85f31383bbce566c318" compoundref="_logger_manager_8cpp" startline="407" endline="411">deleteLogFile</referencedby>
        <referencedby refid="class_logger_manager_1a30a7b6f03fe07435ba9ce9d7b0d2ef64" compoundref="_logger_manager_8cpp" startline="730" endline="755">getEventLogFiles</referencedby>
        <referencedby refid="class_logger_manager_1a88c591ed5570ceb8c0f20a3af4092229" compoundref="_logger_manager_8cpp" startline="413" endline="421">getLogFileSize</referencedby>
        <referencedby refid="class_logger_manager_1a321bbaf7cc3b3aa05c8ec036d4dbfea0" compoundref="_logger_manager_8cpp" startline="8" endline="16">LoggerManager</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_logger_manager_1aef22c2918f9cf454cb5264145d507719" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long LoggerManager::_logFrequency</definition>
        <argsstring></argsstring>
        <name>_logFrequency</name>
        <qualifiedname>LoggerManager::_logFrequency</qualifiedname>
        <briefdescription>
<para>Logging frequency in milliseconds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="44" column="19" bodyfile="include/LoggerManager.h" bodystart="44" bodyend="-1"/>
        <referencedby refid="class_logger_manager_1a4acf0149820d73f4ed11340f63706841" compoundref="_logger_manager_8cpp" startline="23" endline="69">begin</referencedby>
        <referencedby refid="class_logger_manager_1a32f3dead07eaf23b6722f70a1da049a4" compoundref="_logger_manager_8cpp" startline="115" endline="117">getLogFrequency</referencedby>
        <referencedby refid="class_logger_manager_1a321bbaf7cc3b3aa05c8ec036d4dbfea0" compoundref="_logger_manager_8cpp" startline="8" endline="16">LoggerManager</referencedby>
        <referencedby refid="class_logger_manager_1aaa96d30e5c7f752d4ca86b651058b1a5" compoundref="_logger_manager_8cpp" startline="109" endline="113">setLogFrequency</referencedby>
        <referencedby refid="class_logger_manager_1a830c86f1f27d3799eab1de908fc6b647" compoundref="_logger_manager_8cpp" startline="147" endline="185">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_logger_manager_1a73cceb1b111822d8c701b75fcc966b44" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long LoggerManager::_lastLogTime</definition>
        <argsstring></argsstring>
        <name>_lastLogTime</name>
        <qualifiedname>LoggerManager::_lastLogTime</qualifiedname>
        <briefdescription>
<para>Last time data was logged. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="45" column="19" bodyfile="include/LoggerManager.h" bodystart="45" bodyend="-1"/>
        <referencedby refid="class_logger_manager_1a152a9994818e1aa679f740ae17647ba9" compoundref="_logger_manager_8cpp" startline="222" endline="224">getLastLogTime</referencedby>
        <referencedby refid="class_logger_manager_1a32ce9f462269787130bee46b2c34b632" compoundref="_logger_manager_8cpp" startline="190" endline="208">logDataNow</referencedby>
        <referencedby refid="class_logger_manager_1a321bbaf7cc3b3aa05c8ec036d4dbfea0" compoundref="_logger_manager_8cpp" startline="8" endline="16">LoggerManager</referencedby>
        <referencedby refid="class_logger_manager_1a830c86f1f27d3799eab1de908fc6b647" compoundref="_logger_manager_8cpp" startline="147" endline="185">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_logger_manager_1abd02a9be4279f066d2a7d0ac17a1d392" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String LoggerManager::_currentLogFile</definition>
        <argsstring></argsstring>
        <name>_currentLogFile</name>
        <qualifiedname>LoggerManager::_currentLogFile</qualifiedname>
        <briefdescription>
<para>Current log file name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="46" column="12" bodyfile="include/LoggerManager.h" bodystart="46" bodyend="-1"/>
        <referencedby refid="class_logger_manager_1ac7866b2b0244358be6a1cfe8d245cc7d" compoundref="_logger_manager_8cpp" startline="471" endline="530">_recoverFromExistingFiles</referencedby>
        <referencedby refid="class_logger_manager_1aa6938b6a5c002d6ed72ef352f0cc7a19" compoundref="_logger_manager_8cpp" startline="301" endline="335">_writeDataRow</referencedby>
        <referencedby refid="class_logger_manager_1a4095daee15dce39ba5f802ea5b5661a2" compoundref="_logger_manager_8cpp" startline="280" endline="299">_writeHeader</referencedby>
        <referencedby refid="class_logger_manager_1a4acf0149820d73f4ed11340f63706841" compoundref="_logger_manager_8cpp" startline="23" endline="69">begin</referencedby>
        <referencedby refid="class_logger_manager_1a445856fb9bb37bd5e61d5242d8996c1f" compoundref="_logger_manager_8cpp" startline="641" endline="655">createNewLogFile</referencedby>
        <referencedby refid="class_logger_manager_1aeae443ce9fe2e6c5b0174f5f2267ca07" compoundref="_logger_manager_8cpp" startline="213" endline="215">getCurrentLogFile</referencedby>
        <referencedby refid="class_logger_manager_1a88c591ed5570ceb8c0f20a3af4092229" compoundref="_logger_manager_8cpp" startline="413" endline="421">getLogFileSize</referencedby>
        <referencedby refid="class_logger_manager_1a59e0690d922ec968bf64b1b5dda8fcbe" compoundref="_logger_manager_8cpp" startline="71" endline="105">init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_logger_manager_1a049ebea196586a38022577833f2883e8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool LoggerManager::_headerWritten</definition>
        <argsstring></argsstring>
        <name>_headerWritten</name>
        <qualifiedname>LoggerManager::_headerWritten</qualifiedname>
        <briefdescription>
<para>Flag to track if header is written. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="47" column="10" bodyfile="include/LoggerManager.h" bodystart="47" bodyend="-1"/>
        <referencedby refid="class_logger_manager_1ac7866b2b0244358be6a1cfe8d245cc7d" compoundref="_logger_manager_8cpp" startline="471" endline="530">_recoverFromExistingFiles</referencedby>
        <referencedby refid="class_logger_manager_1a4acf0149820d73f4ed11340f63706841" compoundref="_logger_manager_8cpp" startline="23" endline="69">begin</referencedby>
        <referencedby refid="class_logger_manager_1a445856fb9bb37bd5e61d5242d8996c1f" compoundref="_logger_manager_8cpp" startline="641" endline="655">createNewLogFile</referencedby>
        <referencedby refid="class_logger_manager_1a32ce9f462269787130bee46b2c34b632" compoundref="_logger_manager_8cpp" startline="190" endline="208">logDataNow</referencedby>
        <referencedby refid="class_logger_manager_1a321bbaf7cc3b3aa05c8ec036d4dbfea0" compoundref="_logger_manager_8cpp" startline="8" endline="16">LoggerManager</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_logger_manager_1af1b758d10f352dc29e116a087a182531" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool LoggerManager::_enabled</definition>
        <argsstring></argsstring>
        <name>_enabled</name>
        <qualifiedname>LoggerManager::_enabled</qualifiedname>
        <briefdescription>
<para>Whether logging is enabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="50" column="10" bodyfile="include/LoggerManager.h" bodystart="50" bodyend="-1"/>
        <referencedby refid="class_logger_manager_1a0bb3b084e2a16c2d089e8761a093bef5" compoundref="_logger_manager_8cpp" startline="926" endline="937">_ensureAlarmStateLogExists</referencedby>
        <referencedby refid="class_logger_manager_1a27150c2682f4f8fa6bef8b5bb1b25e52" compoundref="_logger_manager_8cpp" startline="353" endline="377">_ensureDirectoryExists</referencedby>
        <referencedby refid="class_logger_manager_1a4f7591a3b5cb024b7354005b4362e049" compoundref="_logger_manager_8cpp" startline="784" endline="795">_ensureEventLogExists</referencedby>
        <referencedby refid="class_logger_manager_1ac7866b2b0244358be6a1cfe8d245cc7d" compoundref="_logger_manager_8cpp" startline="471" endline="530">_recoverFromExistingFiles</referencedby>
        <referencedby refid="class_logger_manager_1a58657d1fbd45469bb67c2c4d07c5a730" compoundref="_logger_manager_8cpp" startline="939" endline="958">_writeAlarmStateHeader</referencedby>
        <referencedby refid="class_logger_manager_1a72dc7742fbeeba07932fc5cb730c26d5" compoundref="_logger_manager_8cpp" startline="960" endline="996">_writeAlarmStateRow</referencedby>
        <referencedby refid="class_logger_manager_1aa6938b6a5c002d6ed72ef352f0cc7a19" compoundref="_logger_manager_8cpp" startline="301" endline="335">_writeDataRow</referencedby>
        <referencedby refid="class_logger_manager_1a515beeaa428acafce139d79b41fe9d0a" compoundref="_logger_manager_8cpp" startline="797" endline="816">_writeEventHeader</referencedby>
        <referencedby refid="class_logger_manager_1a472884ce9e2aed6a1570187dd37cc006" compoundref="_logger_manager_8cpp" startline="818" endline="845">_writeEventRow</referencedby>
        <referencedby refid="class_logger_manager_1a4095daee15dce39ba5f802ea5b5661a2" compoundref="_logger_manager_8cpp" startline="280" endline="299">_writeHeader</referencedby>
        <referencedby refid="class_logger_manager_1a4acf0149820d73f4ed11340f63706841" compoundref="_logger_manager_8cpp" startline="23" endline="69">begin</referencedby>
        <referencedby refid="class_logger_manager_1a445856fb9bb37bd5e61d5242d8996c1f" compoundref="_logger_manager_8cpp" startline="641" endline="655">createNewLogFile</referencedby>
        <referencedby refid="class_logger_manager_1a90c66b71788381dafdde9233d557c5b2" compoundref="_logger_manager_8cpp" startline="757" endline="763">deleteEventLogFile</referencedby>
        <referencedby refid="class_logger_manager_1a89aa88d2ed6cf85f31383bbce566c318" compoundref="_logger_manager_8cpp" startline="407" endline="411">deleteLogFile</referencedby>
        <referencedby refid="class_logger_manager_1a32e39dd8df48f64677732ede4066f01d" compoundref="_logger_manager_8cpp" startline="455" endline="460">forceNewFile</referencedby>
        <referencedby refid="class_logger_manager_1a88c591ed5570ceb8c0f20a3af4092229" compoundref="_logger_manager_8cpp" startline="413" endline="421">getLogFileSize</referencedby>
        <referencedby refid="class_logger_manager_1a59e0690d922ec968bf64b1b5dda8fcbe" compoundref="_logger_manager_8cpp" startline="71" endline="105">init</referencedby>
        <referencedby refid="class_logger_manager_1a185630e50e91531684cb325d035cbacc" compoundref="_logger_manager_8cpp" startline="124" endline="126">isEnabled</referencedby>
        <referencedby refid="class_logger_manager_1af736040bd57412bef8981960e6df3bda" compoundref="_logger_manager_8cpp" startline="880" endline="905">logAlarmState</referencedby>
        <referencedby refid="class_logger_manager_1a5bda848c9bd87201bf6addd035c493b1" compoundref="_logger_manager_8cpp" startline="720" endline="723">logCritical</referencedby>
        <referencedby refid="class_logger_manager_1a32ce9f462269787130bee46b2c34b632" compoundref="_logger_manager_8cpp" startline="190" endline="208">logDataNow</referencedby>
        <referencedby refid="class_logger_manager_1a181e69ea6fe3c7e07e708eada2cc8024" compoundref="_logger_manager_8cpp" startline="715" endline="718">logError</referencedby>
        <referencedby refid="class_logger_manager_1a0df2f2c96123da1989d0aaf6a4dc1615" compoundref="_logger_manager_8cpp" startline="681" endline="702">logEvent</referencedby>
        <referencedby refid="class_logger_manager_1a321bbaf7cc3b3aa05c8ec036d4dbfea0" compoundref="_logger_manager_8cpp" startline="8" endline="16">LoggerManager</referencedby>
        <referencedby refid="class_logger_manager_1a2503703714729cc95171579fe4ce0d4c" compoundref="_logger_manager_8cpp" startline="705" endline="708">logInfo</referencedby>
        <referencedby refid="class_logger_manager_1a5768a8a1983298c5b94e23dabe18f3bb" compoundref="_logger_manager_8cpp" startline="710" endline="713">logWarning</referencedby>
        <referencedby refid="class_logger_manager_1a91a4ca2debe482ad07e93c50ba4b0828" compoundref="_logger_manager_8cpp" startline="119" endline="122">setEnabled</referencedby>
        <referencedby refid="class_logger_manager_1a830c86f1f27d3799eab1de908fc6b647" compoundref="_logger_manager_8cpp" startline="147" endline="185">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_logger_manager_1a554f37e268c3aed53fba8c1af1f63ef4" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String LoggerManager::_logDirectory</definition>
        <argsstring></argsstring>
        <name>_logDirectory</name>
        <qualifiedname>LoggerManager::_logDirectory</qualifiedname>
        <briefdescription>
<para>Base directory for log files. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="51" column="12" bodyfile="include/LoggerManager.h" bodystart="51" bodyend="-1"/>
        <referencedby refid="class_logger_manager_1a27150c2682f4f8fa6bef8b5bb1b25e52" compoundref="_logger_manager_8cpp" startline="353" endline="377">_ensureDirectoryExists</referencedby>
        <referencedby refid="class_logger_manager_1ad3276c1ba03fe7e5b98e33cd207baf1f" compoundref="_logger_manager_8cpp" startline="237" endline="255">_generateLogFileNameWithSequence</referencedby>
        <referencedby refid="class_logger_manager_1a21b4985f38a484ab83b984ab285ea32e" compoundref="_logger_manager_8cpp" startline="532" endline="567">_getFilesForDate</referencedby>
        <referencedby refid="class_logger_manager_1a89aa88d2ed6cf85f31383bbce566c318" compoundref="_logger_manager_8cpp" startline="407" endline="411">deleteLogFile</referencedby>
        <referencedby refid="class_logger_manager_1a321bbaf7cc3b3aa05c8ec036d4dbfea0" compoundref="_logger_manager_8cpp" startline="8" endline="16">LoggerManager</referencedby>
        <referencedby refid="class_logger_manager_1a96c328bee3d3cd89e2131595906ef776" compoundref="_logger_manager_8cpp" startline="136" endline="141">setLogDirectory</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_logger_manager_1a998996a09ab35ff5a07ac18bccb7a9b8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool LoggerManager::_dailyFiles</definition>
        <argsstring></argsstring>
        <name>_dailyFiles</name>
        <qualifiedname>LoggerManager::_dailyFiles</qualifiedname>
        <briefdescription>
<para>Create new file each day. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="52" column="10" bodyfile="include/LoggerManager.h" bodystart="52" bodyend="-1"/>
        <referencedby refid="class_logger_manager_1ad4435bf2def9d476eae4614ffd58bb56" compoundref="_logger_manager_8cpp" startline="132" endline="134">isDailyFiles</referencedby>
        <referencedby refid="class_logger_manager_1a321bbaf7cc3b3aa05c8ec036d4dbfea0" compoundref="_logger_manager_8cpp" startline="8" endline="16">LoggerManager</referencedby>
        <referencedby refid="class_logger_manager_1a85a982d8f23de55b8e81759d014a0595" compoundref="_logger_manager_8cpp" startline="128" endline="130">setDailyFiles</referencedby>
        <referencedby refid="class_logger_manager_1a830c86f1f27d3799eab1de908fc6b647" compoundref="_logger_manager_8cpp" startline="147" endline="185">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_logger_manager_1a68e9c97c6ed88bdaeb91f2a11d4b16d7" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String LoggerManager::_lastLogDate</definition>
        <argsstring></argsstring>
        <name>_lastLogDate</name>
        <qualifiedname>LoggerManager::_lastLogDate</qualifiedname>
        <briefdescription>
<para>Track date for daily file creation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="53" column="12" bodyfile="include/LoggerManager.h" bodystart="53" bodyend="-1"/>
        <referencedby refid="class_logger_manager_1a4acf0149820d73f4ed11340f63706841" compoundref="_logger_manager_8cpp" startline="23" endline="69">begin</referencedby>
        <referencedby refid="class_logger_manager_1a830c86f1f27d3799eab1de908fc6b647" compoundref="_logger_manager_8cpp" startline="147" endline="185">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_logger_manager_1a8ea4030601d5e8af884bedc9d7d430aa" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String LoggerManager::_lastGeneratedHeader</definition>
        <argsstring></argsstring>
        <name>_lastGeneratedHeader</name>
        <qualifiedname>LoggerManager::_lastGeneratedHeader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="74" column="12" bodyfile="include/LoggerManager.h" bodystart="74" bodyend="-1"/>
        <referencedby refid="class_logger_manager_1a829c2f8dcde77d6506f1d664a291969a" compoundref="_logger_manager_8cpp" startline="424" endline="444">_hasHeaderChanged</referencedby>
        <referencedby refid="class_logger_manager_1a4acf0149820d73f4ed11340f63706841" compoundref="_logger_manager_8cpp" startline="23" endline="69">begin</referencedby>
        <referencedby refid="class_logger_manager_1a445856fb9bb37bd5e61d5242d8996c1f" compoundref="_logger_manager_8cpp" startline="641" endline="655">createNewLogFile</referencedby>
        <referencedby refid="class_logger_manager_1a321bbaf7cc3b3aa05c8ec036d4dbfea0" compoundref="_logger_manager_8cpp" startline="8" endline="16">LoggerManager</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_logger_manager_1aae032051a9478b9221328cc0027d3503" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool LoggerManager::_headerChanged</definition>
        <argsstring></argsstring>
        <name>_headerChanged</name>
        <qualifiedname>LoggerManager::_headerChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="75" column="10" bodyfile="include/LoggerManager.h" bodystart="75" bodyend="-1"/>
        <referencedby refid="class_logger_manager_1a321bbaf7cc3b3aa05c8ec036d4dbfea0" compoundref="_logger_manager_8cpp" startline="8" endline="16">LoggerManager</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_logger_manager_1acac1c36f44bdfa0ade62054d82ee6a7e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int LoggerManager::_fileSequenceNumber</definition>
        <argsstring></argsstring>
        <name>_fileSequenceNumber</name>
        <qualifiedname>LoggerManager::_fileSequenceNumber</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="76" column="9" bodyfile="include/LoggerManager.h" bodystart="76" bodyend="-1"/>
        <referencedby refid="class_logger_manager_1ad3276c1ba03fe7e5b98e33cd207baf1f" compoundref="_logger_manager_8cpp" startline="237" endline="255">_generateLogFileNameWithSequence</referencedby>
        <referencedby refid="class_logger_manager_1abb3a1d7dfa336be59051e566de3fce9d" compoundref="_logger_manager_8cpp" startline="446" endline="449">_incrementSequenceNumber</referencedby>
        <referencedby refid="class_logger_manager_1ac7866b2b0244358be6a1cfe8d245cc7d" compoundref="_logger_manager_8cpp" startline="471" endline="530">_recoverFromExistingFiles</referencedby>
        <referencedby refid="class_logger_manager_1a4acf0149820d73f4ed11340f63706841" compoundref="_logger_manager_8cpp" startline="23" endline="69">begin</referencedby>
        <referencedby refid="class_logger_manager_1a445856fb9bb37bd5e61d5242d8996c1f" compoundref="_logger_manager_8cpp" startline="641" endline="655">createNewLogFile</referencedby>
        <referencedby refid="class_logger_manager_1a37f830ae3adab9014190bb644ececfb7" compoundref="_logger_manager_8cpp" startline="462" endline="464">getCurrentSequenceNumber</referencedby>
        <referencedby refid="class_logger_manager_1a321bbaf7cc3b3aa05c8ec036d4dbfea0" compoundref="_logger_manager_8cpp" startline="8" endline="16">LoggerManager</referencedby>
        <referencedby refid="class_logger_manager_1aa6525b4dc09697af48a605841bae72cb" compoundref="_logger_manager_8cpp" startline="466" endline="469">resetSequenceNumber</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_logger_manager_1ab62809d7cac3fe5c42d4afca0dc3bcc3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool LoggerManager::_eventLoggingEnabled</definition>
        <argsstring></argsstring>
        <name>_eventLoggingEnabled</name>
        <qualifiedname>LoggerManager::_eventLoggingEnabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="84" column="10" bodyfile="include/LoggerManager.h" bodystart="84" bodyend="-1"/>
        <referencedby refid="class_logger_manager_1a59e0690d922ec968bf64b1b5dda8fcbe" compoundref="_logger_manager_8cpp" startline="71" endline="105">init</referencedby>
        <referencedby refid="class_logger_manager_1a2bfeb0cc175868b8e60a74c589fd21d7" compoundref="_logger_manager_8cpp" startline="665" endline="667">isEventLoggingEnabled</referencedby>
        <referencedby refid="class_logger_manager_1a0df2f2c96123da1989d0aaf6a4dc1615" compoundref="_logger_manager_8cpp" startline="681" endline="702">logEvent</referencedby>
        <referencedby refid="class_logger_manager_1a321bbaf7cc3b3aa05c8ec036d4dbfea0" compoundref="_logger_manager_8cpp" startline="8" endline="16">LoggerManager</referencedby>
        <referencedby refid="class_logger_manager_1aa290d5afed0df250460f715736ef006c" compoundref="_logger_manager_8cpp" startline="660" endline="663">setEventLoggingEnabled</referencedby>
        <referencedby refid="class_logger_manager_1a830c86f1f27d3799eab1de908fc6b647" compoundref="_logger_manager_8cpp" startline="147" endline="185">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_logger_manager_1a2c3e32eee0e7f26dfe62f90b6210483c" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String LoggerManager::_eventLogDirectory</definition>
        <argsstring></argsstring>
        <name>_eventLogDirectory</name>
        <qualifiedname>LoggerManager::_eventLogDirectory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="85" column="12" bodyfile="include/LoggerManager.h" bodystart="85" bodyend="-1"/>
        <referencedby refid="class_logger_manager_1a9cf35430e1e61515c6fb12524a58f1ab" compoundref="_logger_manager_8cpp" startline="766" endline="781">_generateEventLogFileName</referencedby>
        <referencedby refid="class_logger_manager_1a90c66b71788381dafdde9233d557c5b2" compoundref="_logger_manager_8cpp" startline="757" endline="763">deleteEventLogFile</referencedby>
        <referencedby refid="class_logger_manager_1ae9493b5afe93d2dd87a1d6dbb7d3516a" compoundref="_logger_manager_8cpp" startline="676" endline="678">getEventLogDirectory</referencedby>
        <referencedby refid="class_logger_manager_1a30a7b6f03fe07435ba9ce9d7b0d2ef64" compoundref="_logger_manager_8cpp" startline="730" endline="755">getEventLogFiles</referencedby>
        <referencedby refid="class_logger_manager_1a321bbaf7cc3b3aa05c8ec036d4dbfea0" compoundref="_logger_manager_8cpp" startline="8" endline="16">LoggerManager</referencedby>
        <referencedby refid="class_logger_manager_1ad1c59dedddacc97e10bc64a3aa1d6931" compoundref="_logger_manager_8cpp" startline="669" endline="674">setEventLogDirectory</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_logger_manager_1a01add21d20302650f59d7edb1bd556af" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String LoggerManager::_currentEventLogFile</definition>
        <argsstring></argsstring>
        <name>_currentEventLogFile</name>
        <qualifiedname>LoggerManager::_currentEventLogFile</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="86" column="12" bodyfile="include/LoggerManager.h" bodystart="86" bodyend="-1"/>
        <referencedby refid="class_logger_manager_1a4f7591a3b5cb024b7354005b4362e049" compoundref="_logger_manager_8cpp" startline="784" endline="795">_ensureEventLogExists</referencedby>
        <referencedby refid="class_logger_manager_1a515beeaa428acafce139d79b41fe9d0a" compoundref="_logger_manager_8cpp" startline="797" endline="816">_writeEventHeader</referencedby>
        <referencedby refid="class_logger_manager_1a472884ce9e2aed6a1570187dd37cc006" compoundref="_logger_manager_8cpp" startline="818" endline="845">_writeEventRow</referencedby>
        <referencedby refid="class_logger_manager_1aff6bc1919e8abe9ba6dc22321dc23305" compoundref="_logger_manager_8cpp" startline="726" endline="728">getCurrentEventLogFile</referencedby>
        <referencedby refid="class_logger_manager_1a59e0690d922ec968bf64b1b5dda8fcbe" compoundref="_logger_manager_8cpp" startline="71" endline="105">init</referencedby>
        <referencedby refid="class_logger_manager_1a0df2f2c96123da1989d0aaf6a4dc1615" compoundref="_logger_manager_8cpp" startline="681" endline="702">logEvent</referencedby>
        <referencedby refid="class_logger_manager_1a321bbaf7cc3b3aa05c8ec036d4dbfea0" compoundref="_logger_manager_8cpp" startline="8" endline="16">LoggerManager</referencedby>
        <referencedby refid="class_logger_manager_1a830c86f1f27d3799eab1de908fc6b647" compoundref="_logger_manager_8cpp" startline="147" endline="185">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_logger_manager_1abb5c0705894baacf08645d31486f97e6" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String LoggerManager::_lastEventLogDate</definition>
        <argsstring></argsstring>
        <name>_lastEventLogDate</name>
        <qualifiedname>LoggerManager::_lastEventLogDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="87" column="12" bodyfile="include/LoggerManager.h" bodystart="87" bodyend="-1"/>
        <referencedby refid="class_logger_manager_1a59e0690d922ec968bf64b1b5dda8fcbe" compoundref="_logger_manager_8cpp" startline="71" endline="105">init</referencedby>
        <referencedby refid="class_logger_manager_1a0df2f2c96123da1989d0aaf6a4dc1615" compoundref="_logger_manager_8cpp" startline="681" endline="702">logEvent</referencedby>
        <referencedby refid="class_logger_manager_1a321bbaf7cc3b3aa05c8ec036d4dbfea0" compoundref="_logger_manager_8cpp" startline="8" endline="16">LoggerManager</referencedby>
        <referencedby refid="class_logger_manager_1a830c86f1f27d3799eab1de908fc6b647" compoundref="_logger_manager_8cpp" startline="147" endline="185">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_logger_manager_1a0ac1b76305a4723d964c25ce4130692a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool LoggerManager::_alarmStateLoggingEnabled</definition>
        <argsstring></argsstring>
        <name>_alarmStateLoggingEnabled</name>
        <qualifiedname>LoggerManager::_alarmStateLoggingEnabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="97" column="10" bodyfile="include/LoggerManager.h" bodystart="97" bodyend="-1"/>
        <referencedby refid="class_logger_manager_1a4acf0149820d73f4ed11340f63706841" compoundref="_logger_manager_8cpp" startline="23" endline="69">begin</referencedby>
        <referencedby refid="class_logger_manager_1ae77701c6eaf88fccdce6ded3e9e0f195" compoundref="_logger_manager_8cpp" startline="854" endline="856">isAlarmStateLoggingEnabled</referencedby>
        <referencedby refid="class_logger_manager_1af736040bd57412bef8981960e6df3bda" compoundref="_logger_manager_8cpp" startline="880" endline="905">logAlarmState</referencedby>
        <referencedby refid="class_logger_manager_1a321bbaf7cc3b3aa05c8ec036d4dbfea0" compoundref="_logger_manager_8cpp" startline="8" endline="16">LoggerManager</referencedby>
        <referencedby refid="class_logger_manager_1a19e95a6505d565628548b6436b3c1851" compoundref="_logger_manager_8cpp" startline="849" endline="852">setAlarmStateLoggingEnabled</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_logger_manager_1aafa084a85db9c6a3f3e56d3f1bc3d1f9" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String LoggerManager::_alarmStateLogDirectory</definition>
        <argsstring></argsstring>
        <name>_alarmStateLogDirectory</name>
        <qualifiedname>LoggerManager::_alarmStateLogDirectory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="98" column="12" bodyfile="include/LoggerManager.h" bodystart="98" bodyend="-1"/>
        <referencedby refid="class_logger_manager_1ae1e64f32a756b1a0f481eb1d57e8026e" compoundref="_logger_manager_8cpp" startline="908" endline="924">_generateAlarmStateLogFileName</referencedby>
        <referencedby refid="class_logger_manager_1a647d06128ee720bed0022299f97b37b4" compoundref="_logger_manager_8cpp" startline="1030" endline="1035">deleteAlarmStateLogFile</referencedby>
        <referencedby refid="class_logger_manager_1a5f39c08c459e18d2729e42a65bc36b8b" compoundref="_logger_manager_8cpp" startline="865" endline="867">getAlarmStateLogDirectory</referencedby>
        <referencedby refid="class_logger_manager_1a321bbaf7cc3b3aa05c8ec036d4dbfea0" compoundref="_logger_manager_8cpp" startline="8" endline="16">LoggerManager</referencedby>
        <referencedby refid="class_logger_manager_1a7c154712739b91425fd3ae48330771e1" compoundref="_logger_manager_8cpp" startline="858" endline="863">setAlarmStateLogDirectory</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_logger_manager_1ad98e4e5ce78d523e913ad993e7c568d8" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String LoggerManager::_currentAlarmStateLogFile</definition>
        <argsstring></argsstring>
        <name>_currentAlarmStateLogFile</name>
        <qualifiedname>LoggerManager::_currentAlarmStateLogFile</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="99" column="12" bodyfile="include/LoggerManager.h" bodystart="99" bodyend="-1"/>
        <referencedby refid="class_logger_manager_1a0bb3b084e2a16c2d089e8761a093bef5" compoundref="_logger_manager_8cpp" startline="926" endline="937">_ensureAlarmStateLogExists</referencedby>
        <referencedby refid="class_logger_manager_1a58657d1fbd45469bb67c2c4d07c5a730" compoundref="_logger_manager_8cpp" startline="939" endline="958">_writeAlarmStateHeader</referencedby>
        <referencedby refid="class_logger_manager_1a72dc7742fbeeba07932fc5cb730c26d5" compoundref="_logger_manager_8cpp" startline="960" endline="996">_writeAlarmStateRow</referencedby>
        <referencedby refid="class_logger_manager_1a4acf0149820d73f4ed11340f63706841" compoundref="_logger_manager_8cpp" startline="23" endline="69">begin</referencedby>
        <referencedby refid="class_logger_manager_1afcfd2d250390c756a7dc77c63e7b86a0" compoundref="_logger_manager_8cpp" startline="999" endline="1001">getCurrentAlarmStateLogFile</referencedby>
        <referencedby refid="class_logger_manager_1af736040bd57412bef8981960e6df3bda" compoundref="_logger_manager_8cpp" startline="880" endline="905">logAlarmState</referencedby>
        <referencedby refid="class_logger_manager_1a321bbaf7cc3b3aa05c8ec036d4dbfea0" compoundref="_logger_manager_8cpp" startline="8" endline="16">LoggerManager</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_logger_manager_1a2acd013849032fc4918b43750fec3721" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String LoggerManager::_lastAlarmStateLogDate</definition>
        <argsstring></argsstring>
        <name>_lastAlarmStateLogDate</name>
        <qualifiedname>LoggerManager::_lastAlarmStateLogDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="100" column="12" bodyfile="include/LoggerManager.h" bodystart="100" bodyend="-1"/>
        <referencedby refid="class_logger_manager_1a4acf0149820d73f4ed11340f63706841" compoundref="_logger_manager_8cpp" startline="23" endline="69">begin</referencedby>
        <referencedby refid="class_logger_manager_1af736040bd57412bef8981960e6df3bda" compoundref="_logger_manager_8cpp" startline="880" endline="905">logAlarmState</referencedby>
        <referencedby refid="class_logger_manager_1a321bbaf7cc3b3aa05c8ec036d4dbfea0" compoundref="_logger_manager_8cpp" startline="8" endline="16">LoggerManager</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_logger_manager_1aaef1cc5e819158cfd0197151bc7a74f2" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String LoggerManager::_lastError</definition>
        <argsstring></argsstring>
        <name>_lastError</name>
        <qualifiedname>LoggerManager::_lastError</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="339" column="12" bodyfile="include/LoggerManager.h" bodystart="339" bodyend="-1"/>
        <referencedby refid="class_logger_manager_1a58657d1fbd45469bb67c2c4d07c5a730" compoundref="_logger_manager_8cpp" startline="939" endline="958">_writeAlarmStateHeader</referencedby>
        <referencedby refid="class_logger_manager_1a72dc7742fbeeba07932fc5cb730c26d5" compoundref="_logger_manager_8cpp" startline="960" endline="996">_writeAlarmStateRow</referencedby>
        <referencedby refid="class_logger_manager_1aa6938b6a5c002d6ed72ef352f0cc7a19" compoundref="_logger_manager_8cpp" startline="301" endline="335">_writeDataRow</referencedby>
        <referencedby refid="class_logger_manager_1a515beeaa428acafce139d79b41fe9d0a" compoundref="_logger_manager_8cpp" startline="797" endline="816">_writeEventHeader</referencedby>
        <referencedby refid="class_logger_manager_1a472884ce9e2aed6a1570187dd37cc006" compoundref="_logger_manager_8cpp" startline="818" endline="845">_writeEventRow</referencedby>
        <referencedby refid="class_logger_manager_1a4095daee15dce39ba5f802ea5b5661a2" compoundref="_logger_manager_8cpp" startline="280" endline="299">_writeHeader</referencedby>
        <referencedby refid="class_logger_manager_1a4acf0149820d73f4ed11340f63706841" compoundref="_logger_manager_8cpp" startline="23" endline="69">begin</referencedby>
        <referencedby refid="class_logger_manager_1a7be61ed23c07303c8118316c315f4942" compoundref="_logger_manager_8cpp" startline="226" endline="228">getLastError</referencedby>
        <referencedby refid="class_logger_manager_1a59e0690d922ec968bf64b1b5dda8fcbe" compoundref="_logger_manager_8cpp" startline="71" endline="105">init</referencedby>
        <referencedby refid="class_logger_manager_1a321bbaf7cc3b3aa05c8ec036d4dbfea0" compoundref="_logger_manager_8cpp" startline="8" endline="16">LoggerManager</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_logger_manager_1ae7ff7b324efe85cc2ba892af36cf7e86" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String LoggerManager::_generateLogFileName</definition>
        <argsstring>()</argsstring>
        <name>_generateLogFileName</name>
        <qualifiedname>LoggerManager::_generateLogFileName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="56" column="12" bodyfile="src/LoggerManager.cpp" bodystart="232" bodyend="235"/>
        <references refid="class_logger_manager_1ad3276c1ba03fe7e5b98e33cd207baf1f" compoundref="_logger_manager_8cpp" startline="237" endline="255">_generateLogFileNameWithSequence</references>
        <references refid="class_logger_manager_1a3ca0b934265a4d9ce6391bf97dec179a" compoundref="_logger_manager_8cpp" startline="379" endline="387">_getCurrentDateString</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1aab43f573f73cfe426cfbea04a9fdd3ee" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String LoggerManager::_generateCSVHeader</definition>
        <argsstring>()</argsstring>
        <name>_generateCSVHeader</name>
        <qualifiedname>LoggerManager::_generateCSVHeader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="57" column="12" bodyfile="src/LoggerManager.cpp" bodystart="259" bodyend="278"/>
        <references refid="class_logger_manager_1ac79c2496082ce8e6ecd42c77e1c5292d" compoundref="_logger_manager_8h" startline="40">_controller</references>
        <references refid="class_logger_manager_1a57d230cd2896120a32ecf55a14895d55" compoundref="_logger_manager_8cpp" startline="337" endline="351">_escapeCSVField</references>
        <references refid="class_measurement_point_1aa3a80d373c7609c7b178bf7353ffdd7a" compoundref="_measurement_point_8cpp" startline="29" endline="31">MeasurementPoint::getName</references>
        <referencedby refid="class_logger_manager_1a829c2f8dcde77d6506f1d664a291969a" compoundref="_logger_manager_8cpp" startline="424" endline="444">_hasHeaderChanged</referencedby>
        <referencedby refid="class_logger_manager_1ac7866b2b0244358be6a1cfe8d245cc7d" compoundref="_logger_manager_8cpp" startline="471" endline="530">_recoverFromExistingFiles</referencedby>
        <referencedby refid="class_logger_manager_1a4095daee15dce39ba5f802ea5b5661a2" compoundref="_logger_manager_8cpp" startline="280" endline="299">_writeHeader</referencedby>
        <referencedby refid="class_logger_manager_1a4acf0149820d73f4ed11340f63706841" compoundref="_logger_manager_8cpp" startline="23" endline="69">begin</referencedby>
        <referencedby refid="class_logger_manager_1a445856fb9bb37bd5e61d5242d8996c1f" compoundref="_logger_manager_8cpp" startline="641" endline="655">createNewLogFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a4095daee15dce39ba5f802ea5b5661a2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::_writeHeader</definition>
        <argsstring>()</argsstring>
        <name>_writeHeader</name>
        <qualifiedname>LoggerManager::_writeHeader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="58" column="10" bodyfile="src/LoggerManager.cpp" bodystart="280" bodyend="299"/>
        <references refid="class_logger_manager_1abd02a9be4279f066d2a7d0ac17a1d392" compoundref="_logger_manager_8h" startline="46">_currentLogFile</references>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
        <references refid="class_logger_manager_1af144897db95f5165f66ba0937d23847d" compoundref="_logger_manager_8h" startline="42">_fs</references>
        <references refid="class_logger_manager_1aab43f573f73cfe426cfbea04a9fdd3ee" compoundref="_logger_manager_8cpp" startline="259" endline="278">_generateCSVHeader</references>
        <references refid="class_logger_manager_1aaef1cc5e819158cfd0197151bc7a74f2" compoundref="_logger_manager_8h" startline="339">_lastError</references>
        <referencedby refid="class_logger_manager_1a32ce9f462269787130bee46b2c34b632" compoundref="_logger_manager_8cpp" startline="190" endline="208">logDataNow</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1aa6938b6a5c002d6ed72ef352f0cc7a19" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::_writeDataRow</definition>
        <argsstring>()</argsstring>
        <name>_writeDataRow</name>
        <qualifiedname>LoggerManager::_writeDataRow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="59" column="10" bodyfile="src/LoggerManager.cpp" bodystart="301" bodyend="335"/>
        <references refid="class_logger_manager_1ac79c2496082ce8e6ecd42c77e1c5292d" compoundref="_logger_manager_8h" startline="40">_controller</references>
        <references refid="class_logger_manager_1abd02a9be4279f066d2a7d0ac17a1d392" compoundref="_logger_manager_8h" startline="46">_currentLogFile</references>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
        <references refid="class_logger_manager_1af144897db95f5165f66ba0937d23847d" compoundref="_logger_manager_8h" startline="42">_fs</references>
        <references refid="class_logger_manager_1a3ca0b934265a4d9ce6391bf97dec179a" compoundref="_logger_manager_8cpp" startline="379" endline="387">_getCurrentDateString</references>
        <references refid="class_logger_manager_1a4f31651f8963f741bfbdb944164ffc15" compoundref="_logger_manager_8cpp" startline="389" endline="403">_getCurrentTimeString</references>
        <references refid="class_logger_manager_1aaef1cc5e819158cfd0197151bc7a74f2" compoundref="_logger_manager_8h" startline="339">_lastError</references>
        <references refid="class_measurement_point_1a81c7ae93a9314344967d0f31c6fefe2f" compoundref="_measurement_point_8cpp" startline="106" endline="108">MeasurementPoint::getBoundSensor</references>
        <references refid="class_measurement_point_1aceaf14fde40bcd5331e5ea6a07d7dde8" compoundref="_measurement_point_8cpp" startline="33" endline="35">MeasurementPoint::getCurrentTemp</references>
        <referencedby refid="class_logger_manager_1a32ce9f462269787130bee46b2c34b632" compoundref="_logger_manager_8cpp" startline="190" endline="208">logDataNow</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a57d230cd2896120a32ecf55a14895d55" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String LoggerManager::_escapeCSVField</definition>
        <argsstring>(const String &amp;field)</argsstring>
        <name>_escapeCSVField</name>
        <qualifiedname>LoggerManager::_escapeCSVField</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="60" column="12" bodyfile="src/LoggerManager.cpp" bodystart="337" bodyend="351"/>
        <referencedby refid="class_logger_manager_1aab43f573f73cfe426cfbea04a9fdd3ee" compoundref="_logger_manager_8cpp" startline="259" endline="278">_generateCSVHeader</referencedby>
        <referencedby refid="class_logger_manager_1a72dc7742fbeeba07932fc5cb730c26d5" compoundref="_logger_manager_8cpp" startline="960" endline="996">_writeAlarmStateRow</referencedby>
        <referencedby refid="class_logger_manager_1a472884ce9e2aed6a1570187dd37cc006" compoundref="_logger_manager_8cpp" startline="818" endline="845">_writeEventRow</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a27150c2682f4f8fa6bef8b5bb1b25e52" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::_ensureDirectoryExists</definition>
        <argsstring>()</argsstring>
        <name>_ensureDirectoryExists</name>
        <qualifiedname>LoggerManager::_ensureDirectoryExists</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="61" column="10" bodyfile="src/LoggerManager.cpp" bodystart="353" bodyend="377"/>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
        <references refid="class_logger_manager_1af144897db95f5165f66ba0937d23847d" compoundref="_logger_manager_8h" startline="42">_fs</references>
        <references refid="class_logger_manager_1a554f37e268c3aed53fba8c1af1f63ef4" compoundref="_logger_manager_8h" startline="51">_logDirectory</references>
        <referencedby refid="class_logger_manager_1a4acf0149820d73f4ed11340f63706841" compoundref="_logger_manager_8cpp" startline="23" endline="69">begin</referencedby>
        <referencedby refid="class_logger_manager_1a59e0690d922ec968bf64b1b5dda8fcbe" compoundref="_logger_manager_8cpp" startline="71" endline="105">init</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a3ca0b934265a4d9ce6391bf97dec179a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String LoggerManager::_getCurrentDateString</definition>
        <argsstring>()</argsstring>
        <name>_getCurrentDateString</name>
        <qualifiedname>LoggerManager::_getCurrentDateString</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="62" column="12" bodyfile="src/LoggerManager.cpp" bodystart="379" bodyend="387"/>
        <references refid="class_logger_manager_1aaa946fe85923b5fd13ff8bb1c9a3e011" compoundref="_logger_manager_8h" startline="41">_timeManager</references>
        <referencedby refid="class_logger_manager_1ae1e64f32a756b1a0f481eb1d57e8026e" compoundref="_logger_manager_8cpp" startline="908" endline="924">_generateAlarmStateLogFileName</referencedby>
        <referencedby refid="class_logger_manager_1a9cf35430e1e61515c6fb12524a58f1ab" compoundref="_logger_manager_8cpp" startline="766" endline="781">_generateEventLogFileName</referencedby>
        <referencedby refid="class_logger_manager_1ae7ff7b324efe85cc2ba892af36cf7e86" compoundref="_logger_manager_8cpp" startline="232" endline="235">_generateLogFileName</referencedby>
        <referencedby refid="class_logger_manager_1ad3276c1ba03fe7e5b98e33cd207baf1f" compoundref="_logger_manager_8cpp" startline="237" endline="255">_generateLogFileNameWithSequence</referencedby>
        <referencedby refid="class_logger_manager_1ac7866b2b0244358be6a1cfe8d245cc7d" compoundref="_logger_manager_8cpp" startline="471" endline="530">_recoverFromExistingFiles</referencedby>
        <referencedby refid="class_logger_manager_1aa6938b6a5c002d6ed72ef352f0cc7a19" compoundref="_logger_manager_8cpp" startline="301" endline="335">_writeDataRow</referencedby>
        <referencedby refid="class_logger_manager_1a4acf0149820d73f4ed11340f63706841" compoundref="_logger_manager_8cpp" startline="23" endline="69">begin</referencedby>
        <referencedby refid="class_logger_manager_1a59e0690d922ec968bf64b1b5dda8fcbe" compoundref="_logger_manager_8cpp" startline="71" endline="105">init</referencedby>
        <referencedby refid="class_logger_manager_1af736040bd57412bef8981960e6df3bda" compoundref="_logger_manager_8cpp" startline="880" endline="905">logAlarmState</referencedby>
        <referencedby refid="class_logger_manager_1a0df2f2c96123da1989d0aaf6a4dc1615" compoundref="_logger_manager_8cpp" startline="681" endline="702">logEvent</referencedby>
        <referencedby refid="class_logger_manager_1a830c86f1f27d3799eab1de908fc6b647" compoundref="_logger_manager_8cpp" startline="147" endline="185">update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a4f31651f8963f741bfbdb944164ffc15" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String LoggerManager::_getCurrentTimeString</definition>
        <argsstring>()</argsstring>
        <name>_getCurrentTimeString</name>
        <qualifiedname>LoggerManager::_getCurrentTimeString</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="63" column="12" bodyfile="src/LoggerManager.cpp" bodystart="389" bodyend="403"/>
        <references refid="class_logger_manager_1aaa946fe85923b5fd13ff8bb1c9a3e011" compoundref="_logger_manager_8h" startline="41">_timeManager</references>
        <referencedby refid="class_logger_manager_1aa6938b6a5c002d6ed72ef352f0cc7a19" compoundref="_logger_manager_8cpp" startline="301" endline="335">_writeDataRow</referencedby>
        <referencedby refid="class_logger_manager_1af736040bd57412bef8981960e6df3bda" compoundref="_logger_manager_8cpp" startline="880" endline="905">logAlarmState</referencedby>
        <referencedby refid="class_logger_manager_1a0df2f2c96123da1989d0aaf6a4dc1615" compoundref="_logger_manager_8cpp" startline="681" endline="702">logEvent</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1ac7866b2b0244358be6a1cfe8d245cc7d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::_recoverFromExistingFiles</definition>
        <argsstring>()</argsstring>
        <name>_recoverFromExistingFiles</name>
        <qualifiedname>LoggerManager::_recoverFromExistingFiles</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="66" column="10" bodyfile="src/LoggerManager.cpp" bodystart="471" bodyend="530"/>
        <references refid="class_logger_manager_1abd02a9be4279f066d2a7d0ac17a1d392" compoundref="_logger_manager_8h" startline="46">_currentLogFile</references>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
        <references refid="class_logger_manager_1acac1c36f44bdfa0ade62054d82ee6a7e" compoundref="_logger_manager_8h" startline="76">_fileSequenceNumber</references>
        <references refid="class_logger_manager_1a0efdffdaa8b90ec4a896c5ac52cd2856" compoundref="_logger_manager_8cpp" startline="569" endline="581">_findHighestSequenceForDate</references>
        <references refid="class_logger_manager_1a485fea5149ef2e0199671ad2dcadbcf4" compoundref="_logger_manager_8cpp" startline="583" endline="597">_findLatestFileForDate</references>
        <references refid="class_logger_manager_1aab43f573f73cfe426cfbea04a9fdd3ee" compoundref="_logger_manager_8cpp" startline="259" endline="278">_generateCSVHeader</references>
        <references refid="class_logger_manager_1a3ca0b934265a4d9ce6391bf97dec179a" compoundref="_logger_manager_8cpp" startline="379" endline="387">_getCurrentDateString</references>
        <references refid="class_logger_manager_1a21b4985f38a484ab83b984ab285ea32e" compoundref="_logger_manager_8cpp" startline="532" endline="567">_getFilesForDate</references>
        <references refid="class_logger_manager_1a049ebea196586a38022577833f2883e8" compoundref="_logger_manager_8h" startline="47">_headerWritten</references>
        <references refid="class_logger_manager_1ac50bc65494e34dca73f6ee0745a8b6e6" compoundref="_logger_manager_8cpp" startline="612" endline="638">_readHeaderFromFile</references>
        <referencedby refid="class_logger_manager_1a4acf0149820d73f4ed11340f63706841" compoundref="_logger_manager_8cpp" startline="23" endline="69">begin</referencedby>
        <referencedby refid="class_logger_manager_1a830c86f1f27d3799eab1de908fc6b647" compoundref="_logger_manager_8cpp" startline="147" endline="185">update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a485fea5149ef2e0199671ad2dcadbcf4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String LoggerManager::_findLatestFileForDate</definition>
        <argsstring>(const String &amp;dateStr)</argsstring>
        <name>_findLatestFileForDate</name>
        <qualifiedname>LoggerManager::_findLatestFileForDate</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>dateStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="67" column="12" bodyfile="src/LoggerManager.cpp" bodystart="583" bodyend="597"/>
        <references refid="class_logger_manager_1aa19a1b81e99d510ce23068e320305675" compoundref="_logger_manager_8cpp" startline="599" endline="610">_extractSequenceNumber</references>
        <references refid="class_logger_manager_1a21b4985f38a484ab83b984ab285ea32e" compoundref="_logger_manager_8cpp" startline="532" endline="567">_getFilesForDate</references>
        <referencedby refid="class_logger_manager_1ac7866b2b0244358be6a1cfe8d245cc7d" compoundref="_logger_manager_8cpp" startline="471" endline="530">_recoverFromExistingFiles</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1aa19a1b81e99d510ce23068e320305675" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LoggerManager::_extractSequenceNumber</definition>
        <argsstring>(const String &amp;filename)</argsstring>
        <name>_extractSequenceNumber</name>
        <qualifiedname>LoggerManager::_extractSequenceNumber</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="68" column="9" bodyfile="src/LoggerManager.cpp" bodystart="599" bodyend="610"/>
        <referencedby refid="class_logger_manager_1a0efdffdaa8b90ec4a896c5ac52cd2856" compoundref="_logger_manager_8cpp" startline="569" endline="581">_findHighestSequenceForDate</referencedby>
        <referencedby refid="class_logger_manager_1a485fea5149ef2e0199671ad2dcadbcf4" compoundref="_logger_manager_8cpp" startline="583" endline="597">_findLatestFileForDate</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1ac50bc65494e34dca73f6ee0745a8b6e6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String LoggerManager::_readHeaderFromFile</definition>
        <argsstring>(const String &amp;filename)</argsstring>
        <name>_readHeaderFromFile</name>
        <qualifiedname>LoggerManager::_readHeaderFromFile</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="69" column="12" bodyfile="src/LoggerManager.cpp" bodystart="612" bodyend="638"/>
        <references refid="class_logger_manager_1af144897db95f5165f66ba0937d23847d" compoundref="_logger_manager_8h" startline="42">_fs</references>
        <referencedby refid="class_logger_manager_1ac7866b2b0244358be6a1cfe8d245cc7d" compoundref="_logger_manager_8cpp" startline="471" endline="530">_recoverFromExistingFiles</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a21b4985f38a484ab83b984ab285ea32e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; String &gt;</type>
        <definition>std::vector&lt; String &gt; LoggerManager::_getFilesForDate</definition>
        <argsstring>(const String &amp;dateStr)</argsstring>
        <name>_getFilesForDate</name>
        <qualifiedname>LoggerManager::_getFilesForDate</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>dateStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="70" column="17" bodyfile="src/LoggerManager.cpp" bodystart="532" bodyend="567"/>
        <references refid="class_logger_manager_1af144897db95f5165f66ba0937d23847d" compoundref="_logger_manager_8h" startline="42">_fs</references>
        <references refid="class_logger_manager_1a554f37e268c3aed53fba8c1af1f63ef4" compoundref="_logger_manager_8h" startline="51">_logDirectory</references>
        <referencedby refid="class_logger_manager_1a0efdffdaa8b90ec4a896c5ac52cd2856" compoundref="_logger_manager_8cpp" startline="569" endline="581">_findHighestSequenceForDate</referencedby>
        <referencedby refid="class_logger_manager_1a485fea5149ef2e0199671ad2dcadbcf4" compoundref="_logger_manager_8cpp" startline="583" endline="597">_findLatestFileForDate</referencedby>
        <referencedby refid="class_logger_manager_1ac7866b2b0244358be6a1cfe8d245cc7d" compoundref="_logger_manager_8cpp" startline="471" endline="530">_recoverFromExistingFiles</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a0efdffdaa8b90ec4a896c5ac52cd2856" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LoggerManager::_findHighestSequenceForDate</definition>
        <argsstring>(const String &amp;dateStr)</argsstring>
        <name>_findHighestSequenceForDate</name>
        <qualifiedname>LoggerManager::_findHighestSequenceForDate</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>dateStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="71" column="9" bodyfile="src/LoggerManager.cpp" bodystart="569" bodyend="581"/>
        <references refid="class_logger_manager_1aa19a1b81e99d510ce23068e320305675" compoundref="_logger_manager_8cpp" startline="599" endline="610">_extractSequenceNumber</references>
        <references refid="class_logger_manager_1a21b4985f38a484ab83b984ab285ea32e" compoundref="_logger_manager_8cpp" startline="532" endline="567">_getFilesForDate</references>
        <referencedby refid="class_logger_manager_1ac7866b2b0244358be6a1cfe8d245cc7d" compoundref="_logger_manager_8cpp" startline="471" endline="530">_recoverFromExistingFiles</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a829c2f8dcde77d6506f1d664a291969a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::_hasHeaderChanged</definition>
        <argsstring>()</argsstring>
        <name>_hasHeaderChanged</name>
        <qualifiedname>LoggerManager::_hasHeaderChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="79" column="10" bodyfile="src/LoggerManager.cpp" bodystart="424" bodyend="444"/>
        <references refid="class_logger_manager_1aab43f573f73cfe426cfbea04a9fdd3ee" compoundref="_logger_manager_8cpp" startline="259" endline="278">_generateCSVHeader</references>
        <references refid="class_logger_manager_1a8ea4030601d5e8af884bedc9d7d430aa" compoundref="_logger_manager_8h" startline="74">_lastGeneratedHeader</references>
        <referencedby refid="class_logger_manager_1a830c86f1f27d3799eab1de908fc6b647" compoundref="_logger_manager_8cpp" startline="147" endline="185">update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1ad3276c1ba03fe7e5b98e33cd207baf1f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String LoggerManager::_generateLogFileNameWithSequence</definition>
        <argsstring>()</argsstring>
        <name>_generateLogFileNameWithSequence</name>
        <qualifiedname>LoggerManager::_generateLogFileNameWithSequence</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="80" column="12" bodyfile="src/LoggerManager.cpp" bodystart="237" bodyend="255"/>
        <references refid="class_logger_manager_1acac1c36f44bdfa0ade62054d82ee6a7e" compoundref="_logger_manager_8h" startline="76">_fileSequenceNumber</references>
        <references refid="class_logger_manager_1a3ca0b934265a4d9ce6391bf97dec179a" compoundref="_logger_manager_8cpp" startline="379" endline="387">_getCurrentDateString</references>
        <references refid="class_logger_manager_1a554f37e268c3aed53fba8c1af1f63ef4" compoundref="_logger_manager_8h" startline="51">_logDirectory</references>
        <referencedby refid="class_logger_manager_1ae7ff7b324efe85cc2ba892af36cf7e86" compoundref="_logger_manager_8cpp" startline="232" endline="235">_generateLogFileName</referencedby>
        <referencedby refid="class_logger_manager_1a4acf0149820d73f4ed11340f63706841" compoundref="_logger_manager_8cpp" startline="23" endline="69">begin</referencedby>
        <referencedby refid="class_logger_manager_1a445856fb9bb37bd5e61d5242d8996c1f" compoundref="_logger_manager_8cpp" startline="641" endline="655">createNewLogFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1abb3a1d7dfa336be59051e566de3fce9d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LoggerManager::_incrementSequenceNumber</definition>
        <argsstring>()</argsstring>
        <name>_incrementSequenceNumber</name>
        <qualifiedname>LoggerManager::_incrementSequenceNumber</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="81" column="10" bodyfile="src/LoggerManager.cpp" bodystart="446" bodyend="449"/>
        <references refid="class_logger_manager_1acac1c36f44bdfa0ade62054d82ee6a7e" compoundref="_logger_manager_8h" startline="76">_fileSequenceNumber</references>
        <referencedby refid="class_logger_manager_1a32e39dd8df48f64677732ede4066f01d" compoundref="_logger_manager_8cpp" startline="455" endline="460">forceNewFile</referencedby>
        <referencedby refid="class_logger_manager_1a830c86f1f27d3799eab1de908fc6b647" compoundref="_logger_manager_8cpp" startline="147" endline="185">update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a9cf35430e1e61515c6fb12524a58f1ab" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String LoggerManager::_generateEventLogFileName</definition>
        <argsstring>()</argsstring>
        <name>_generateEventLogFileName</name>
        <qualifiedname>LoggerManager::_generateEventLogFileName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="90" column="12" bodyfile="src/LoggerManager.cpp" bodystart="766" bodyend="781"/>
        <references refid="class_logger_manager_1a2c3e32eee0e7f26dfe62f90b6210483c" compoundref="_logger_manager_8h" startline="85">_eventLogDirectory</references>
        <references refid="class_logger_manager_1a3ca0b934265a4d9ce6391bf97dec179a" compoundref="_logger_manager_8cpp" startline="379" endline="387">_getCurrentDateString</references>
        <referencedby refid="class_logger_manager_1a59e0690d922ec968bf64b1b5dda8fcbe" compoundref="_logger_manager_8cpp" startline="71" endline="105">init</referencedby>
        <referencedby refid="class_logger_manager_1a0df2f2c96123da1989d0aaf6a4dc1615" compoundref="_logger_manager_8cpp" startline="681" endline="702">logEvent</referencedby>
        <referencedby refid="class_logger_manager_1a830c86f1f27d3799eab1de908fc6b647" compoundref="_logger_manager_8cpp" startline="147" endline="185">update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a515beeaa428acafce139d79b41fe9d0a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::_writeEventHeader</definition>
        <argsstring>()</argsstring>
        <name>_writeEventHeader</name>
        <qualifiedname>LoggerManager::_writeEventHeader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="91" column="10" bodyfile="src/LoggerManager.cpp" bodystart="797" bodyend="816"/>
        <references refid="class_logger_manager_1a01add21d20302650f59d7edb1bd556af" compoundref="_logger_manager_8h" startline="86">_currentEventLogFile</references>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
        <references refid="class_logger_manager_1af144897db95f5165f66ba0937d23847d" compoundref="_logger_manager_8h" startline="42">_fs</references>
        <references refid="class_logger_manager_1aaef1cc5e819158cfd0197151bc7a74f2" compoundref="_logger_manager_8h" startline="339">_lastError</references>
        <referencedby refid="class_logger_manager_1a4f7591a3b5cb024b7354005b4362e049" compoundref="_logger_manager_8cpp" startline="784" endline="795">_ensureEventLogExists</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a472884ce9e2aed6a1570187dd37cc006" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::_writeEventRow</definition>
        <argsstring>(const String &amp;timestamp, const String &amp;source, const String &amp;description, const String &amp;priority)</argsstring>
        <name>_writeEventRow</name>
        <qualifiedname>LoggerManager::_writeEventRow</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>timestamp</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>description</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>priority</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="92" column="10" bodyfile="src/LoggerManager.cpp" bodystart="818" bodyend="845"/>
        <references refid="class_logger_manager_1a01add21d20302650f59d7edb1bd556af" compoundref="_logger_manager_8h" startline="86">_currentEventLogFile</references>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
        <references refid="class_logger_manager_1a57d230cd2896120a32ecf55a14895d55" compoundref="_logger_manager_8cpp" startline="337" endline="351">_escapeCSVField</references>
        <references refid="class_logger_manager_1af144897db95f5165f66ba0937d23847d" compoundref="_logger_manager_8h" startline="42">_fs</references>
        <references refid="class_logger_manager_1aaef1cc5e819158cfd0197151bc7a74f2" compoundref="_logger_manager_8h" startline="339">_lastError</references>
        <referencedby refid="class_logger_manager_1a0df2f2c96123da1989d0aaf6a4dc1615" compoundref="_logger_manager_8cpp" startline="681" endline="702">logEvent</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a4f7591a3b5cb024b7354005b4362e049" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::_ensureEventLogExists</definition>
        <argsstring>()</argsstring>
        <name>_ensureEventLogExists</name>
        <qualifiedname>LoggerManager::_ensureEventLogExists</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="94" column="10" bodyfile="src/LoggerManager.cpp" bodystart="784" bodyend="795"/>
        <references refid="class_logger_manager_1a01add21d20302650f59d7edb1bd556af" compoundref="_logger_manager_8h" startline="86">_currentEventLogFile</references>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
        <references refid="class_logger_manager_1af144897db95f5165f66ba0937d23847d" compoundref="_logger_manager_8h" startline="42">_fs</references>
        <references refid="class_logger_manager_1a515beeaa428acafce139d79b41fe9d0a" compoundref="_logger_manager_8cpp" startline="797" endline="816">_writeEventHeader</references>
        <referencedby refid="class_logger_manager_1a59e0690d922ec968bf64b1b5dda8fcbe" compoundref="_logger_manager_8cpp" startline="71" endline="105">init</referencedby>
        <referencedby refid="class_logger_manager_1a0df2f2c96123da1989d0aaf6a4dc1615" compoundref="_logger_manager_8cpp" startline="681" endline="702">logEvent</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1ae1e64f32a756b1a0f481eb1d57e8026e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String LoggerManager::_generateAlarmStateLogFileName</definition>
        <argsstring>()</argsstring>
        <name>_generateAlarmStateLogFileName</name>
        <qualifiedname>LoggerManager::_generateAlarmStateLogFileName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="103" column="12" bodyfile="src/LoggerManager.cpp" bodystart="908" bodyend="924"/>
        <references refid="class_logger_manager_1aafa084a85db9c6a3f3e56d3f1bc3d1f9" compoundref="_logger_manager_8h" startline="98">_alarmStateLogDirectory</references>
        <references refid="class_logger_manager_1a3ca0b934265a4d9ce6391bf97dec179a" compoundref="_logger_manager_8cpp" startline="379" endline="387">_getCurrentDateString</references>
        <referencedby refid="class_logger_manager_1a4acf0149820d73f4ed11340f63706841" compoundref="_logger_manager_8cpp" startline="23" endline="69">begin</referencedby>
        <referencedby refid="class_logger_manager_1af736040bd57412bef8981960e6df3bda" compoundref="_logger_manager_8cpp" startline="880" endline="905">logAlarmState</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a58657d1fbd45469bb67c2c4d07c5a730" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::_writeAlarmStateHeader</definition>
        <argsstring>()</argsstring>
        <name>_writeAlarmStateHeader</name>
        <qualifiedname>LoggerManager::_writeAlarmStateHeader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="104" column="10" bodyfile="src/LoggerManager.cpp" bodystart="939" bodyend="958"/>
        <references refid="class_logger_manager_1ad98e4e5ce78d523e913ad993e7c568d8" compoundref="_logger_manager_8h" startline="99">_currentAlarmStateLogFile</references>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
        <references refid="class_logger_manager_1af144897db95f5165f66ba0937d23847d" compoundref="_logger_manager_8h" startline="42">_fs</references>
        <references refid="class_logger_manager_1aaef1cc5e819158cfd0197151bc7a74f2" compoundref="_logger_manager_8h" startline="339">_lastError</references>
        <referencedby refid="class_logger_manager_1a0bb3b084e2a16c2d089e8761a093bef5" compoundref="_logger_manager_8cpp" startline="926" endline="937">_ensureAlarmStateLogExists</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a0bb3b084e2a16c2d089e8761a093bef5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::_ensureAlarmStateLogExists</definition>
        <argsstring>()</argsstring>
        <name>_ensureAlarmStateLogExists</name>
        <qualifiedname>LoggerManager::_ensureAlarmStateLogExists</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="105" column="10" bodyfile="src/LoggerManager.cpp" bodystart="926" bodyend="937"/>
        <references refid="class_logger_manager_1ad98e4e5ce78d523e913ad993e7c568d8" compoundref="_logger_manager_8h" startline="99">_currentAlarmStateLogFile</references>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
        <references refid="class_logger_manager_1af144897db95f5165f66ba0937d23847d" compoundref="_logger_manager_8h" startline="42">_fs</references>
        <references refid="class_logger_manager_1a58657d1fbd45469bb67c2c4d07c5a730" compoundref="_logger_manager_8cpp" startline="939" endline="958">_writeAlarmStateHeader</references>
        <referencedby refid="class_logger_manager_1a4acf0149820d73f4ed11340f63706841" compoundref="_logger_manager_8cpp" startline="23" endline="69">begin</referencedby>
        <referencedby refid="class_logger_manager_1af736040bd57412bef8981960e6df3bda" compoundref="_logger_manager_8cpp" startline="880" endline="905">logAlarmState</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a72dc7742fbeeba07932fc5cb730c26d5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::_writeAlarmStateRow</definition>
        <argsstring>(const String &amp;timestamp, int pointNumber, const String &amp;pointName, const String &amp;alarmType, const String &amp;alarmPriority, const String &amp;previousState, const String &amp;newState, int16_t currentTemp, int16_t threshold)</argsstring>
        <name>_writeAlarmStateRow</name>
        <qualifiedname>LoggerManager::_writeAlarmStateRow</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>timestamp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pointNumber</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>pointName</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>alarmType</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>alarmPriority</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>previousState</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>newState</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>currentTemp</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="106" column="10" bodyfile="src/LoggerManager.cpp" bodystart="960" bodyend="996"/>
        <references refid="class_logger_manager_1ad98e4e5ce78d523e913ad993e7c568d8" compoundref="_logger_manager_8h" startline="99">_currentAlarmStateLogFile</references>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
        <references refid="class_logger_manager_1a57d230cd2896120a32ecf55a14895d55" compoundref="_logger_manager_8cpp" startline="337" endline="351">_escapeCSVField</references>
        <references refid="class_logger_manager_1af144897db95f5165f66ba0937d23847d" compoundref="_logger_manager_8h" startline="42">_fs</references>
        <references refid="class_logger_manager_1aaef1cc5e819158cfd0197151bc7a74f2" compoundref="_logger_manager_8h" startline="339">_lastError</references>
        <referencedby refid="class_logger_manager_1af736040bd57412bef8981960e6df3bda" compoundref="_logger_manager_8cpp" startline="880" endline="905">logAlarmState</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a45f8c21f50e1920b78d24e1007b6af7d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::_isSDCardAvailable</definition>
        <argsstring>()</argsstring>
        <name>_isSDCardAvailable</name>
        <qualifiedname>LoggerManager::_isSDCardAvailable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="112" column="10" bodyfile="src/LoggerManager.cpp" bodystart="1039" bodyend="1047"/>
        <references refid="class_logger_manager_1af144897db95f5165f66ba0937d23847d" compoundref="_logger_manager_8h" startline="42">_fs</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_logger_manager_1a321bbaf7cc3b3aa05c8ec036d4dbfea0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LoggerManager::LoggerManager</definition>
        <argsstring>(TemperatureController &amp;controller, TimeManager &amp;timeManager, fs::FS &amp;filesystem)</argsstring>
        <name>LoggerManager</name>
        <qualifiedname>LoggerManager::LoggerManager</qualifiedname>
        <param>
          <type><ref refid="class_temperature_controller" kindref="compound">TemperatureController</ref> &amp;</type>
          <declname>controller</declname>
        </param>
        <param>
          <type><ref refid="class_time_manager" kindref="compound">TimeManager</ref> &amp;</type>
          <declname>timeManager</declname>
        </param>
        <param>
          <type>fs::FS &amp;</type>
          <declname>filesystem</declname>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="class_logger_manager" kindref="compound">LoggerManager</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">controller</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to temperature controller </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeManager</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to time manager for timestamps </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">filesystem</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to file system (SD or LittleFS)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Initializes logging system with required dependencies </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="123" column="5" bodyfile="src/LoggerManager.cpp" bodystart="8" bodyend="16"/>
        <references refid="class_logger_manager_1aafa084a85db9c6a3f3e56d3f1bc3d1f9" compoundref="_logger_manager_8h" startline="98">_alarmStateLogDirectory</references>
        <references refid="class_logger_manager_1a0ac1b76305a4723d964c25ce4130692a" compoundref="_logger_manager_8h" startline="97">_alarmStateLoggingEnabled</references>
        <references refid="class_logger_manager_1ac79c2496082ce8e6ecd42c77e1c5292d" compoundref="_logger_manager_8h" startline="40">_controller</references>
        <references refid="class_logger_manager_1ad98e4e5ce78d523e913ad993e7c568d8" compoundref="_logger_manager_8h" startline="99">_currentAlarmStateLogFile</references>
        <references refid="class_logger_manager_1a01add21d20302650f59d7edb1bd556af" compoundref="_logger_manager_8h" startline="86">_currentEventLogFile</references>
        <references refid="class_logger_manager_1a998996a09ab35ff5a07ac18bccb7a9b8" compoundref="_logger_manager_8h" startline="52">_dailyFiles</references>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
        <references refid="class_logger_manager_1a2c3e32eee0e7f26dfe62f90b6210483c" compoundref="_logger_manager_8h" startline="85">_eventLogDirectory</references>
        <references refid="class_logger_manager_1ab62809d7cac3fe5c42d4afca0dc3bcc3" compoundref="_logger_manager_8h" startline="84">_eventLoggingEnabled</references>
        <references refid="class_logger_manager_1acac1c36f44bdfa0ade62054d82ee6a7e" compoundref="_logger_manager_8h" startline="76">_fileSequenceNumber</references>
        <references refid="class_logger_manager_1af144897db95f5165f66ba0937d23847d" compoundref="_logger_manager_8h" startline="42">_fs</references>
        <references refid="class_logger_manager_1aae032051a9478b9221328cc0027d3503" compoundref="_logger_manager_8h" startline="75">_headerChanged</references>
        <references refid="class_logger_manager_1a049ebea196586a38022577833f2883e8" compoundref="_logger_manager_8h" startline="47">_headerWritten</references>
        <references refid="class_logger_manager_1a3f4c0cc78425ddd99d489740be325f4d" compoundref="_logger_manager_8h" startline="39">_instance</references>
        <references refid="class_logger_manager_1a2acd013849032fc4918b43750fec3721" compoundref="_logger_manager_8h" startline="100">_lastAlarmStateLogDate</references>
        <references refid="class_logger_manager_1aaef1cc5e819158cfd0197151bc7a74f2" compoundref="_logger_manager_8h" startline="339">_lastError</references>
        <references refid="class_logger_manager_1abb5c0705894baacf08645d31486f97e6" compoundref="_logger_manager_8h" startline="87">_lastEventLogDate</references>
        <references refid="class_logger_manager_1a8ea4030601d5e8af884bedc9d7d430aa" compoundref="_logger_manager_8h" startline="74">_lastGeneratedHeader</references>
        <references refid="class_logger_manager_1a73cceb1b111822d8c701b75fcc966b44" compoundref="_logger_manager_8h" startline="45">_lastLogTime</references>
        <references refid="class_logger_manager_1a554f37e268c3aed53fba8c1af1f63ef4" compoundref="_logger_manager_8h" startline="51">_logDirectory</references>
        <references refid="class_logger_manager_1aef22c2918f9cf454cb5264145d507719" compoundref="_logger_manager_8h" startline="44">_logFrequency</references>
        <references refid="class_logger_manager_1aaa946fe85923b5fd13ff8bb1c9a3e011" compoundref="_logger_manager_8h" startline="41">_timeManager</references>
        <references refid="main_8cpp_1aecbe6ad38ed7d220ace280ea33d8ab45">controller</references>
        <references refid="main_8cpp_1ad27a531589f8fed0687abe50e4ab32dc">timeManager</references>
        <referencedby refid="class_logger_manager_1aa1d28a0eee6d794090563cdffe7f43c1" compoundref="_logger_manager_8h" startline="136" endline="136">getInstance</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a0738a5887eb50eba0f08a250b9aa7675" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LoggerManager::~LoggerManager</definition>
        <argsstring>()</argsstring>
        <name>~LoggerManager</name>
        <qualifiedname>LoggerManager::~LoggerManager</qualifiedname>
        <briefdescription>
<para>Destructor for <ref refid="class_logger_manager" kindref="compound">LoggerManager</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Closes any open files and cleans up resources </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="129" column="5" bodyfile="src/LoggerManager.cpp" bodystart="19" bodyend="21"/>
        <references refid="class_logger_manager_1ae88c89f897e9041a19ec8c68b5375034" compoundref="_logger_manager_8cpp" startline="217" endline="220">closeCurrentFile</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a59e0690d922ec968bf64b1b5dda8fcbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <qualifiedname>LoggerManager::init</qualifiedname>
        <briefdescription>
<para>Initialize the logging system. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool True if initialization successful</para>
</simplesect>
Sets up file system, directories, and initial configuration </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="185" column="10" bodyfile="src/LoggerManager.cpp" bodystart="71" bodyend="105"/>
        <references refid="class_logger_manager_1a01add21d20302650f59d7edb1bd556af" compoundref="_logger_manager_8h" startline="86">_currentEventLogFile</references>
        <references refid="class_logger_manager_1abd02a9be4279f066d2a7d0ac17a1d392" compoundref="_logger_manager_8h" startline="46">_currentLogFile</references>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
        <references refid="class_logger_manager_1a27150c2682f4f8fa6bef8b5bb1b25e52" compoundref="_logger_manager_8cpp" startline="353" endline="377">_ensureDirectoryExists</references>
        <references refid="class_logger_manager_1a4f7591a3b5cb024b7354005b4362e049" compoundref="_logger_manager_8cpp" startline="784" endline="795">_ensureEventLogExists</references>
        <references refid="class_logger_manager_1ab62809d7cac3fe5c42d4afca0dc3bcc3" compoundref="_logger_manager_8h" startline="84">_eventLoggingEnabled</references>
        <references refid="class_logger_manager_1a9cf35430e1e61515c6fb12524a58f1ab" compoundref="_logger_manager_8cpp" startline="766" endline="781">_generateEventLogFileName</references>
        <references refid="class_logger_manager_1a3ca0b934265a4d9ce6391bf97dec179a" compoundref="_logger_manager_8cpp" startline="379" endline="387">_getCurrentDateString</references>
        <references refid="class_logger_manager_1aaef1cc5e819158cfd0197151bc7a74f2" compoundref="_logger_manager_8h" startline="339">_lastError</references>
        <references refid="class_logger_manager_1abb5c0705894baacf08645d31486f97e6" compoundref="_logger_manager_8h" startline="87">_lastEventLogDate</references>
        <references refid="class_logger_manager_1a2503703714729cc95171579fe4ce0d4c" compoundref="_logger_manager_8cpp" startline="705" endline="708">logInfo</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a4acf0149820d73f4ed11340f63706841" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>LoggerManager::begin</qualifiedname>
        <briefdescription>
<para>Begin logging operations. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool True if startup successful</para>
</simplesect>
Starts the logging system and opens initial log files </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="192" column="10" bodyfile="src/LoggerManager.cpp" bodystart="23" bodyend="69"/>
        <references refid="class_logger_manager_1a0ac1b76305a4723d964c25ce4130692a" compoundref="_logger_manager_8h" startline="97">_alarmStateLoggingEnabled</references>
        <references refid="class_logger_manager_1ad98e4e5ce78d523e913ad993e7c568d8" compoundref="_logger_manager_8h" startline="99">_currentAlarmStateLogFile</references>
        <references refid="class_logger_manager_1abd02a9be4279f066d2a7d0ac17a1d392" compoundref="_logger_manager_8h" startline="46">_currentLogFile</references>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
        <references refid="class_logger_manager_1a0bb3b084e2a16c2d089e8761a093bef5" compoundref="_logger_manager_8cpp" startline="926" endline="937">_ensureAlarmStateLogExists</references>
        <references refid="class_logger_manager_1a27150c2682f4f8fa6bef8b5bb1b25e52" compoundref="_logger_manager_8cpp" startline="353" endline="377">_ensureDirectoryExists</references>
        <references refid="class_logger_manager_1acac1c36f44bdfa0ade62054d82ee6a7e" compoundref="_logger_manager_8h" startline="76">_fileSequenceNumber</references>
        <references refid="class_logger_manager_1ae1e64f32a756b1a0f481eb1d57e8026e" compoundref="_logger_manager_8cpp" startline="908" endline="924">_generateAlarmStateLogFileName</references>
        <references refid="class_logger_manager_1aab43f573f73cfe426cfbea04a9fdd3ee" compoundref="_logger_manager_8cpp" startline="259" endline="278">_generateCSVHeader</references>
        <references refid="class_logger_manager_1ad3276c1ba03fe7e5b98e33cd207baf1f" compoundref="_logger_manager_8cpp" startline="237" endline="255">_generateLogFileNameWithSequence</references>
        <references refid="class_logger_manager_1a3ca0b934265a4d9ce6391bf97dec179a" compoundref="_logger_manager_8cpp" startline="379" endline="387">_getCurrentDateString</references>
        <references refid="class_logger_manager_1a049ebea196586a38022577833f2883e8" compoundref="_logger_manager_8h" startline="47">_headerWritten</references>
        <references refid="class_logger_manager_1a2acd013849032fc4918b43750fec3721" compoundref="_logger_manager_8h" startline="100">_lastAlarmStateLogDate</references>
        <references refid="class_logger_manager_1aaef1cc5e819158cfd0197151bc7a74f2" compoundref="_logger_manager_8h" startline="339">_lastError</references>
        <references refid="class_logger_manager_1a8ea4030601d5e8af884bedc9d7d430aa" compoundref="_logger_manager_8h" startline="74">_lastGeneratedHeader</references>
        <references refid="class_logger_manager_1a68e9c97c6ed88bdaeb91f2a11d4b16d7" compoundref="_logger_manager_8h" startline="53">_lastLogDate</references>
        <references refid="class_logger_manager_1aef22c2918f9cf454cb5264145d507719" compoundref="_logger_manager_8h" startline="44">_logFrequency</references>
        <references refid="class_logger_manager_1ac7866b2b0244358be6a1cfe8d245cc7d" compoundref="_logger_manager_8cpp" startline="471" endline="530">_recoverFromExistingFiles</references>
        <references refid="class_logger_manager_1a2503703714729cc95171579fe4ce0d4c" compoundref="_logger_manager_8cpp" startline="705" endline="708">logInfo</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1aaa96d30e5c7f752d4ca86b651058b1a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LoggerManager::setLogFrequency</definition>
        <argsstring>(unsigned long frequencyMs)</argsstring>
        <name>setLogFrequency</name>
        <qualifiedname>LoggerManager::setLogFrequency</qualifiedname>
        <param>
          <type>unsigned long</type>
          <declname>frequencyMs</declname>
        </param>
        <briefdescription>
<para>Set logging frequency. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">frequencyMs</parametername>
</parameternamelist>
<parameterdescription>
<para>Frequency in milliseconds between log entries </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="199" column="10" bodyfile="src/LoggerManager.cpp" bodystart="109" bodyend="113"/>
        <references refid="class_logger_manager_1aef22c2918f9cf454cb5264145d507719" compoundref="_logger_manager_8h" startline="44">_logFrequency</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a32f3dead07eaf23b6722f70a1da049a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long LoggerManager::getLogFrequency</definition>
        <argsstring>() const</argsstring>
        <name>getLogFrequency</name>
        <qualifiedname>LoggerManager::getLogFrequency</qualifiedname>
        <briefdescription>
<para>Get current logging frequency. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>unsigned long Frequency in milliseconds </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="205" column="19" bodyfile="src/LoggerManager.cpp" bodystart="115" bodyend="117"/>
        <references refid="class_logger_manager_1aef22c2918f9cf454cb5264145d507719" compoundref="_logger_manager_8h" startline="44">_logFrequency</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a91a4ca2debe482ad07e93c50ba4b0828" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LoggerManager::setEnabled</definition>
        <argsstring>(bool enabled)</argsstring>
        <name>setEnabled</name>
        <qualifiedname>LoggerManager::setEnabled</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
<para>Enable or disable logging. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enabled</parametername>
</parameternamelist>
<parameterdescription>
<para>True to enable logging </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="211" column="10" bodyfile="src/LoggerManager.cpp" bodystart="119" bodyend="122"/>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a185630e50e91531684cb325d035cbacc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::isEnabled</definition>
        <argsstring>() const</argsstring>
        <name>isEnabled</name>
        <qualifiedname>LoggerManager::isEnabled</qualifiedname>
        <briefdescription>
<para>Check if logging is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool True if logging is enabled </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="217" column="10" bodyfile="src/LoggerManager.cpp" bodystart="124" bodyend="126"/>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a85a982d8f23de55b8e81759d014a0595" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LoggerManager::setDailyFiles</definition>
        <argsstring>(bool enabled)</argsstring>
        <name>setDailyFiles</name>
        <qualifiedname>LoggerManager::setDailyFiles</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
<para>Enable or disable daily file creation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enabled</parametername>
</parameternamelist>
<parameterdescription>
<para>True to create new files daily </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="223" column="10" bodyfile="src/LoggerManager.cpp" bodystart="128" bodyend="130"/>
        <references refid="class_logger_manager_1a998996a09ab35ff5a07ac18bccb7a9b8" compoundref="_logger_manager_8h" startline="52">_dailyFiles</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1ad4435bf2def9d476eae4614ffd58bb56" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::isDailyFiles</definition>
        <argsstring>() const</argsstring>
        <name>isDailyFiles</name>
        <qualifiedname>LoggerManager::isDailyFiles</qualifiedname>
        <briefdescription>
<para>Check if daily files are enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool True if daily files are enabled </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="229" column="10" bodyfile="src/LoggerManager.cpp" bodystart="132" bodyend="134"/>
        <references refid="class_logger_manager_1a998996a09ab35ff5a07ac18bccb7a9b8" compoundref="_logger_manager_8h" startline="52">_dailyFiles</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a96c328bee3d3cd89e2131595906ef776" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LoggerManager::setLogDirectory</definition>
        <argsstring>(const String &amp;directory)</argsstring>
        <name>setLogDirectory</name>
        <qualifiedname>LoggerManager::setLogDirectory</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>directory</declname>
        </param>
        <briefdescription>
<para>Set base log directory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">directory</parametername>
</parameternamelist>
<parameterdescription>
<para>Directory path for log files </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="235" column="10" bodyfile="src/LoggerManager.cpp" bodystart="136" bodyend="141"/>
        <references refid="class_logger_manager_1a554f37e268c3aed53fba8c1af1f63ef4" compoundref="_logger_manager_8h" startline="51">_logDirectory</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a830c86f1f27d3799eab1de908fc6b647" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LoggerManager::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <qualifiedname>LoggerManager::update</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="244" column="10" bodyfile="src/LoggerManager.cpp" bodystart="147" bodyend="185"/>
        <references refid="class_logger_manager_1a01add21d20302650f59d7edb1bd556af" compoundref="_logger_manager_8h" startline="86">_currentEventLogFile</references>
        <references refid="class_logger_manager_1a998996a09ab35ff5a07ac18bccb7a9b8" compoundref="_logger_manager_8h" startline="52">_dailyFiles</references>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
        <references refid="class_logger_manager_1ab62809d7cac3fe5c42d4afca0dc3bcc3" compoundref="_logger_manager_8h" startline="84">_eventLoggingEnabled</references>
        <references refid="class_logger_manager_1a9cf35430e1e61515c6fb12524a58f1ab" compoundref="_logger_manager_8cpp" startline="766" endline="781">_generateEventLogFileName</references>
        <references refid="class_logger_manager_1a3ca0b934265a4d9ce6391bf97dec179a" compoundref="_logger_manager_8cpp" startline="379" endline="387">_getCurrentDateString</references>
        <references refid="class_logger_manager_1a829c2f8dcde77d6506f1d664a291969a" compoundref="_logger_manager_8cpp" startline="424" endline="444">_hasHeaderChanged</references>
        <references refid="class_logger_manager_1abb3a1d7dfa336be59051e566de3fce9d" compoundref="_logger_manager_8cpp" startline="446" endline="449">_incrementSequenceNumber</references>
        <references refid="class_logger_manager_1abb5c0705894baacf08645d31486f97e6" compoundref="_logger_manager_8h" startline="87">_lastEventLogDate</references>
        <references refid="class_logger_manager_1a68e9c97c6ed88bdaeb91f2a11d4b16d7" compoundref="_logger_manager_8h" startline="53">_lastLogDate</references>
        <references refid="class_logger_manager_1a73cceb1b111822d8c701b75fcc966b44" compoundref="_logger_manager_8h" startline="45">_lastLogTime</references>
        <references refid="class_logger_manager_1aef22c2918f9cf454cb5264145d507719" compoundref="_logger_manager_8h" startline="44">_logFrequency</references>
        <references refid="class_logger_manager_1ac7866b2b0244358be6a1cfe8d245cc7d" compoundref="_logger_manager_8cpp" startline="471" endline="530">_recoverFromExistingFiles</references>
        <references refid="class_logger_manager_1a445856fb9bb37bd5e61d5242d8996c1f" compoundref="_logger_manager_8cpp" startline="641" endline="655">createNewLogFile</references>
        <references refid="class_logger_manager_1a32ce9f462269787130bee46b2c34b632" compoundref="_logger_manager_8cpp" startline="190" endline="208">logDataNow</references>
        <references refid="class_logger_manager_1a2503703714729cc95171579fe4ce0d4c" compoundref="_logger_manager_8cpp" startline="705" endline="708">logInfo</references>
        <references refid="class_logger_manager_1a5768a8a1983298c5b94e23dabe18f3bb" compoundref="_logger_manager_8cpp" startline="710" endline="713">logWarning</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a32ce9f462269787130bee46b2c34b632" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::logDataNow</definition>
        <argsstring>()</argsstring>
        <name>logDataNow</name>
        <qualifiedname>LoggerManager::logDataNow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="245" column="10" bodyfile="src/LoggerManager.cpp" bodystart="190" bodyend="208"/>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
        <references refid="class_logger_manager_1a049ebea196586a38022577833f2883e8" compoundref="_logger_manager_8h" startline="47">_headerWritten</references>
        <references refid="class_logger_manager_1a73cceb1b111822d8c701b75fcc966b44" compoundref="_logger_manager_8h" startline="45">_lastLogTime</references>
        <references refid="class_logger_manager_1aa6938b6a5c002d6ed72ef352f0cc7a19" compoundref="_logger_manager_8cpp" startline="301" endline="335">_writeDataRow</references>
        <references refid="class_logger_manager_1a4095daee15dce39ba5f802ea5b5661a2" compoundref="_logger_manager_8cpp" startline="280" endline="299">_writeHeader</references>
        <referencedby refid="class_logger_manager_1a830c86f1f27d3799eab1de908fc6b647" compoundref="_logger_manager_8cpp" startline="147" endline="185">update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a445856fb9bb37bd5e61d5242d8996c1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::createNewLogFile</definition>
        <argsstring>()</argsstring>
        <name>createNewLogFile</name>
        <qualifiedname>LoggerManager::createNewLogFile</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="246" column="10" bodyfile="src/LoggerManager.cpp" bodystart="641" bodyend="655"/>
        <references refid="class_logger_manager_1abd02a9be4279f066d2a7d0ac17a1d392" compoundref="_logger_manager_8h" startline="46">_currentLogFile</references>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
        <references refid="class_logger_manager_1acac1c36f44bdfa0ade62054d82ee6a7e" compoundref="_logger_manager_8h" startline="76">_fileSequenceNumber</references>
        <references refid="class_logger_manager_1aab43f573f73cfe426cfbea04a9fdd3ee" compoundref="_logger_manager_8cpp" startline="259" endline="278">_generateCSVHeader</references>
        <references refid="class_logger_manager_1ad3276c1ba03fe7e5b98e33cd207baf1f" compoundref="_logger_manager_8cpp" startline="237" endline="255">_generateLogFileNameWithSequence</references>
        <references refid="class_logger_manager_1a049ebea196586a38022577833f2883e8" compoundref="_logger_manager_8h" startline="47">_headerWritten</references>
        <references refid="class_logger_manager_1a8ea4030601d5e8af884bedc9d7d430aa" compoundref="_logger_manager_8h" startline="74">_lastGeneratedHeader</references>
        <references refid="class_logger_manager_1ae88c89f897e9041a19ec8c68b5375034" compoundref="_logger_manager_8cpp" startline="217" endline="220">closeCurrentFile</references>
        <referencedby refid="class_logger_manager_1a32e39dd8df48f64677732ede4066f01d" compoundref="_logger_manager_8cpp" startline="455" endline="460">forceNewFile</referencedby>
        <referencedby refid="class_logger_manager_1a830c86f1f27d3799eab1de908fc6b647" compoundref="_logger_manager_8cpp" startline="147" endline="185">update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1aeae443ce9fe2e6c5b0174f5f2267ca07" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String LoggerManager::getCurrentLogFile</definition>
        <argsstring>() const</argsstring>
        <name>getCurrentLogFile</name>
        <qualifiedname>LoggerManager::getCurrentLogFile</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="249" column="12" bodyfile="src/LoggerManager.cpp" bodystart="213" bodyend="215"/>
        <references refid="class_logger_manager_1abd02a9be4279f066d2a7d0ac17a1d392" compoundref="_logger_manager_8h" startline="46">_currentLogFile</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1ae88c89f897e9041a19ec8c68b5375034" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::closeCurrentFile</definition>
        <argsstring>()</argsstring>
        <name>closeCurrentFile</name>
        <qualifiedname>LoggerManager::closeCurrentFile</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="250" column="10" bodyfile="src/LoggerManager.cpp" bodystart="217" bodyend="220"/>
        <referencedby refid="class_logger_manager_1a445856fb9bb37bd5e61d5242d8996c1f" compoundref="_logger_manager_8cpp" startline="641" endline="655">createNewLogFile</referencedby>
        <referencedby refid="class_logger_manager_1a0738a5887eb50eba0f08a250b9aa7675" compoundref="_logger_manager_8cpp" startline="19" endline="21">~LoggerManager</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a89aa88d2ed6cf85f31383bbce566c318" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::deleteLogFile</definition>
        <argsstring>(const String &amp;filename)</argsstring>
        <name>deleteLogFile</name>
        <qualifiedname>LoggerManager::deleteLogFile</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="252" column="10" bodyfile="src/LoggerManager.cpp" bodystart="407" bodyend="411"/>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
        <references refid="class_logger_manager_1af144897db95f5165f66ba0937d23847d" compoundref="_logger_manager_8h" startline="42">_fs</references>
        <references refid="class_logger_manager_1a554f37e268c3aed53fba8c1af1f63ef4" compoundref="_logger_manager_8h" startline="51">_logDirectory</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a152a9994818e1aa679f740ae17647ba9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long LoggerManager::getLastLogTime</definition>
        <argsstring>() const</argsstring>
        <name>getLastLogTime</name>
        <qualifiedname>LoggerManager::getLastLogTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="255" column="19" bodyfile="src/LoggerManager.cpp" bodystart="222" bodyend="224"/>
        <references refid="class_logger_manager_1a73cceb1b111822d8c701b75fcc966b44" compoundref="_logger_manager_8h" startline="45">_lastLogTime</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a88c591ed5570ceb8c0f20a3af4092229" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t LoggerManager::getLogFileSize</definition>
        <argsstring>() const</argsstring>
        <name>getLogFileSize</name>
        <qualifiedname>LoggerManager::getLogFileSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="256" column="12" bodyfile="src/LoggerManager.cpp" bodystart="413" bodyend="421"/>
        <references refid="class_logger_manager_1abd02a9be4279f066d2a7d0ac17a1d392" compoundref="_logger_manager_8h" startline="46">_currentLogFile</references>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
        <references refid="class_logger_manager_1af144897db95f5165f66ba0937d23847d" compoundref="_logger_manager_8h" startline="42">_fs</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a7be61ed23c07303c8118316c315f4942" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String LoggerManager::getLastError</definition>
        <argsstring>() const</argsstring>
        <name>getLastError</name>
        <qualifiedname>LoggerManager::getLastError</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="259" column="12" bodyfile="src/LoggerManager.cpp" bodystart="226" bodyend="228"/>
        <references refid="class_logger_manager_1aaef1cc5e819158cfd0197151bc7a74f2" compoundref="_logger_manager_8h" startline="339">_lastError</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a32e39dd8df48f64677732ede4066f01d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LoggerManager::forceNewFile</definition>
        <argsstring>()</argsstring>
        <name>forceNewFile</name>
        <qualifiedname>LoggerManager::forceNewFile</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="261" column="10" bodyfile="src/LoggerManager.cpp" bodystart="455" bodyend="460"/>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
        <references refid="class_logger_manager_1abb3a1d7dfa336be59051e566de3fce9d" compoundref="_logger_manager_8cpp" startline="446" endline="449">_incrementSequenceNumber</references>
        <references refid="class_logger_manager_1a445856fb9bb37bd5e61d5242d8996c1f" compoundref="_logger_manager_8cpp" startline="641" endline="655">createNewLogFile</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a37f830ae3adab9014190bb644ececfb7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LoggerManager::getCurrentSequenceNumber</definition>
        <argsstring>() const</argsstring>
        <name>getCurrentSequenceNumber</name>
        <qualifiedname>LoggerManager::getCurrentSequenceNumber</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="262" column="9" bodyfile="src/LoggerManager.cpp" bodystart="462" bodyend="464"/>
        <references refid="class_logger_manager_1acac1c36f44bdfa0ade62054d82ee6a7e" compoundref="_logger_manager_8h" startline="76">_fileSequenceNumber</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1aa6525b4dc09697af48a605841bae72cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LoggerManager::resetSequenceNumber</definition>
        <argsstring>()</argsstring>
        <name>resetSequenceNumber</name>
        <qualifiedname>LoggerManager::resetSequenceNumber</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="263" column="10" bodyfile="src/LoggerManager.cpp" bodystart="466" bodyend="469"/>
        <references refid="class_logger_manager_1acac1c36f44bdfa0ade62054d82ee6a7e" compoundref="_logger_manager_8h" startline="76">_fileSequenceNumber</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1aa290d5afed0df250460f715736ef006c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LoggerManager::setEventLoggingEnabled</definition>
        <argsstring>(bool enabled)</argsstring>
        <name>setEventLoggingEnabled</name>
        <qualifiedname>LoggerManager::setEventLoggingEnabled</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="266" column="14" bodyfile="src/LoggerManager.cpp" bodystart="660" bodyend="663"/>
        <references refid="class_logger_manager_1ab62809d7cac3fe5c42d4afca0dc3bcc3" compoundref="_logger_manager_8h" startline="84">_eventLoggingEnabled</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a2bfeb0cc175868b8e60a74c589fd21d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::isEventLoggingEnabled</definition>
        <argsstring>() const</argsstring>
        <name>isEventLoggingEnabled</name>
        <qualifiedname>LoggerManager::isEventLoggingEnabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="267" column="14" bodyfile="src/LoggerManager.cpp" bodystart="665" bodyend="667"/>
        <references refid="class_logger_manager_1ab62809d7cac3fe5c42d4afca0dc3bcc3" compoundref="_logger_manager_8h" startline="84">_eventLoggingEnabled</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1ad1c59dedddacc97e10bc64a3aa1d6931" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LoggerManager::setEventLogDirectory</definition>
        <argsstring>(const String &amp;directory)</argsstring>
        <name>setEventLogDirectory</name>
        <qualifiedname>LoggerManager::setEventLogDirectory</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>directory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="268" column="14" bodyfile="src/LoggerManager.cpp" bodystart="669" bodyend="674"/>
        <references refid="class_logger_manager_1a2c3e32eee0e7f26dfe62f90b6210483c" compoundref="_logger_manager_8h" startline="85">_eventLogDirectory</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1ae9493b5afe93d2dd87a1d6dbb7d3516a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String LoggerManager::getEventLogDirectory</definition>
        <argsstring>() const</argsstring>
        <name>getEventLogDirectory</name>
        <qualifiedname>LoggerManager::getEventLogDirectory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="269" column="16" bodyfile="src/LoggerManager.cpp" bodystart="676" bodyend="678"/>
        <references refid="class_logger_manager_1a2c3e32eee0e7f26dfe62f90b6210483c" compoundref="_logger_manager_8h" startline="85">_eventLogDirectory</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a0df2f2c96123da1989d0aaf6a4dc1615" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::logEvent</definition>
        <argsstring>(const String &amp;source, const String &amp;description, const String &amp;priority=&quot;INFO&quot;)</argsstring>
        <name>logEvent</name>
        <qualifiedname>LoggerManager::logEvent</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>description</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>priority</declname>
          <defval>&quot;INFO&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="272" column="14" bodyfile="src/LoggerManager.cpp" bodystart="681" bodyend="702"/>
        <references refid="class_logger_manager_1a01add21d20302650f59d7edb1bd556af" compoundref="_logger_manager_8h" startline="86">_currentEventLogFile</references>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
        <references refid="class_logger_manager_1a4f7591a3b5cb024b7354005b4362e049" compoundref="_logger_manager_8cpp" startline="784" endline="795">_ensureEventLogExists</references>
        <references refid="class_logger_manager_1ab62809d7cac3fe5c42d4afca0dc3bcc3" compoundref="_logger_manager_8h" startline="84">_eventLoggingEnabled</references>
        <references refid="class_logger_manager_1a9cf35430e1e61515c6fb12524a58f1ab" compoundref="_logger_manager_8cpp" startline="766" endline="781">_generateEventLogFileName</references>
        <references refid="class_logger_manager_1a3ca0b934265a4d9ce6391bf97dec179a" compoundref="_logger_manager_8cpp" startline="379" endline="387">_getCurrentDateString</references>
        <references refid="class_logger_manager_1a4f31651f8963f741bfbdb944164ffc15" compoundref="_logger_manager_8cpp" startline="389" endline="403">_getCurrentTimeString</references>
        <references refid="class_logger_manager_1abb5c0705894baacf08645d31486f97e6" compoundref="_logger_manager_8h" startline="87">_lastEventLogDate</references>
        <references refid="class_logger_manager_1a472884ce9e2aed6a1570187dd37cc006" compoundref="_logger_manager_8cpp" startline="818" endline="845">_writeEventRow</references>
        <referencedby refid="class_logger_manager_1a5bda848c9bd87201bf6addd035c493b1" compoundref="_logger_manager_8cpp" startline="720" endline="723">logCritical</referencedby>
        <referencedby refid="class_logger_manager_1a181e69ea6fe3c7e07e708eada2cc8024" compoundref="_logger_manager_8cpp" startline="715" endline="718">logError</referencedby>
        <referencedby refid="class_logger_manager_1a2503703714729cc95171579fe4ce0d4c" compoundref="_logger_manager_8cpp" startline="705" endline="708">logInfo</referencedby>
        <referencedby refid="class_logger_manager_1a5768a8a1983298c5b94e23dabe18f3bb" compoundref="_logger_manager_8cpp" startline="710" endline="713">logWarning</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a2503703714729cc95171579fe4ce0d4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::logInfo</definition>
        <argsstring>(const String &amp;source, const String &amp;description)</argsstring>
        <name>logInfo</name>
        <qualifiedname>LoggerManager::logInfo</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="273" column="14" bodyfile="src/LoggerManager.cpp" bodystart="705" bodyend="708"/>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
        <references refid="class_logger_manager_1a0df2f2c96123da1989d0aaf6a4dc1615" compoundref="_logger_manager_8cpp" startline="681" endline="702">logEvent</references>
        <referencedby refid="class_logger_manager_1a4acf0149820d73f4ed11340f63706841" compoundref="_logger_manager_8cpp" startline="23" endline="69">begin</referencedby>
        <referencedby refid="class_logger_manager_1a59e0690d922ec968bf64b1b5dda8fcbe" compoundref="_logger_manager_8cpp" startline="71" endline="105">init</referencedby>
        <referencedby refid="class_logger_manager_1a830c86f1f27d3799eab1de908fc6b647" compoundref="_logger_manager_8cpp" startline="147" endline="185">update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a5768a8a1983298c5b94e23dabe18f3bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::logWarning</definition>
        <argsstring>(const String &amp;source, const String &amp;description)</argsstring>
        <name>logWarning</name>
        <qualifiedname>LoggerManager::logWarning</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="274" column="14" bodyfile="src/LoggerManager.cpp" bodystart="710" bodyend="713"/>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
        <references refid="class_logger_manager_1a0df2f2c96123da1989d0aaf6a4dc1615" compoundref="_logger_manager_8cpp" startline="681" endline="702">logEvent</references>
        <referencedby refid="class_logger_manager_1a830c86f1f27d3799eab1de908fc6b647" compoundref="_logger_manager_8cpp" startline="147" endline="185">update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a181e69ea6fe3c7e07e708eada2cc8024" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::logError</definition>
        <argsstring>(const String &amp;source, const String &amp;description)</argsstring>
        <name>logError</name>
        <qualifiedname>LoggerManager::logError</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="275" column="14" bodyfile="src/LoggerManager.cpp" bodystart="715" bodyend="718"/>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
        <references refid="class_logger_manager_1a0df2f2c96123da1989d0aaf6a4dc1615" compoundref="_logger_manager_8cpp" startline="681" endline="702">logEvent</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a5bda848c9bd87201bf6addd035c493b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::logCritical</definition>
        <argsstring>(const String &amp;source, const String &amp;description)</argsstring>
        <name>logCritical</name>
        <qualifiedname>LoggerManager::logCritical</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="276" column="14" bodyfile="src/LoggerManager.cpp" bodystart="720" bodyend="723"/>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
        <references refid="class_logger_manager_1a0df2f2c96123da1989d0aaf6a4dc1615" compoundref="_logger_manager_8cpp" startline="681" endline="702">logEvent</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1aff6bc1919e8abe9ba6dc22321dc23305" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String LoggerManager::getCurrentEventLogFile</definition>
        <argsstring>() const</argsstring>
        <name>getCurrentEventLogFile</name>
        <qualifiedname>LoggerManager::getCurrentEventLogFile</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="279" column="16" bodyfile="src/LoggerManager.cpp" bodystart="726" bodyend="728"/>
        <references refid="class_logger_manager_1a01add21d20302650f59d7edb1bd556af" compoundref="_logger_manager_8h" startline="86">_currentEventLogFile</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a30a7b6f03fe07435ba9ce9d7b0d2ef64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; String &gt;</type>
        <definition>std::vector&lt; String &gt; LoggerManager::getEventLogFiles</definition>
        <argsstring>()</argsstring>
        <name>getEventLogFiles</name>
        <qualifiedname>LoggerManager::getEventLogFiles</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="280" column="21" bodyfile="src/LoggerManager.cpp" bodystart="730" bodyend="755"/>
        <references refid="class_logger_manager_1a2c3e32eee0e7f26dfe62f90b6210483c" compoundref="_logger_manager_8h" startline="85">_eventLogDirectory</references>
        <references refid="class_logger_manager_1af144897db95f5165f66ba0937d23847d" compoundref="_logger_manager_8h" startline="42">_fs</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a90c66b71788381dafdde9233d557c5b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::deleteEventLogFile</definition>
        <argsstring>(const String &amp;filename)</argsstring>
        <name>deleteEventLogFile</name>
        <qualifiedname>LoggerManager::deleteEventLogFile</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="281" column="14" bodyfile="src/LoggerManager.cpp" bodystart="757" bodyend="763"/>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
        <references refid="class_logger_manager_1a2c3e32eee0e7f26dfe62f90b6210483c" compoundref="_logger_manager_8h" startline="85">_eventLogDirectory</references>
        <references refid="class_logger_manager_1af144897db95f5165f66ba0937d23847d" compoundref="_logger_manager_8h" startline="42">_fs</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a19e95a6505d565628548b6436b3c1851" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LoggerManager::setAlarmStateLoggingEnabled</definition>
        <argsstring>(bool enabled)</argsstring>
        <name>setAlarmStateLoggingEnabled</name>
        <qualifiedname>LoggerManager::setAlarmStateLoggingEnabled</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="285" column="10" bodyfile="src/LoggerManager.cpp" bodystart="849" bodyend="852"/>
        <references refid="class_logger_manager_1a0ac1b76305a4723d964c25ce4130692a" compoundref="_logger_manager_8h" startline="97">_alarmStateLoggingEnabled</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1ae77701c6eaf88fccdce6ded3e9e0f195" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::isAlarmStateLoggingEnabled</definition>
        <argsstring>() const</argsstring>
        <name>isAlarmStateLoggingEnabled</name>
        <qualifiedname>LoggerManager::isAlarmStateLoggingEnabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="286" column="10" bodyfile="src/LoggerManager.cpp" bodystart="854" bodyend="856"/>
        <references refid="class_logger_manager_1a0ac1b76305a4723d964c25ce4130692a" compoundref="_logger_manager_8h" startline="97">_alarmStateLoggingEnabled</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a7c154712739b91425fd3ae48330771e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LoggerManager::setAlarmStateLogDirectory</definition>
        <argsstring>(const String &amp;directory)</argsstring>
        <name>setAlarmStateLogDirectory</name>
        <qualifiedname>LoggerManager::setAlarmStateLogDirectory</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>directory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="287" column="10" bodyfile="src/LoggerManager.cpp" bodystart="858" bodyend="863"/>
        <references refid="class_logger_manager_1aafa084a85db9c6a3f3e56d3f1bc3d1f9" compoundref="_logger_manager_8h" startline="98">_alarmStateLogDirectory</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a5f39c08c459e18d2729e42a65bc36b8b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String LoggerManager::getAlarmStateLogDirectory</definition>
        <argsstring>() const</argsstring>
        <name>getAlarmStateLogDirectory</name>
        <qualifiedname>LoggerManager::getAlarmStateLogDirectory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="288" column="12" bodyfile="src/LoggerManager.cpp" bodystart="865" bodyend="867"/>
        <references refid="class_logger_manager_1aafa084a85db9c6a3f3e56d3f1bc3d1f9" compoundref="_logger_manager_8h" startline="98">_alarmStateLogDirectory</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1af736040bd57412bef8981960e6df3bda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::logAlarmState</definition>
        <argsstring>(int pointNumber, const String &amp;pointName, const String &amp;alarmType, const String &amp;alarmPriority, const String &amp;previousState, const String &amp;newState, int16_t currentTemp, int16_t threshold)</argsstring>
        <name>logAlarmState</name>
        <qualifiedname>LoggerManager::logAlarmState</qualifiedname>
        <param>
          <type>int</type>
          <declname>pointNumber</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>pointName</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>alarmType</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>alarmPriority</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>previousState</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>newState</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>currentTemp</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="297" column="10" bodyfile="src/LoggerManager.cpp" bodystart="880" bodyend="905"/>
        <references refid="class_logger_manager_1a0ac1b76305a4723d964c25ce4130692a" compoundref="_logger_manager_8h" startline="97">_alarmStateLoggingEnabled</references>
        <references refid="class_logger_manager_1ad98e4e5ce78d523e913ad993e7c568d8" compoundref="_logger_manager_8h" startline="99">_currentAlarmStateLogFile</references>
        <references refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" compoundref="_logger_manager_8h" startline="50">_enabled</references>
        <references refid="class_logger_manager_1a0bb3b084e2a16c2d089e8761a093bef5" compoundref="_logger_manager_8cpp" startline="926" endline="937">_ensureAlarmStateLogExists</references>
        <references refid="class_logger_manager_1ae1e64f32a756b1a0f481eb1d57e8026e" compoundref="_logger_manager_8cpp" startline="908" endline="924">_generateAlarmStateLogFileName</references>
        <references refid="class_logger_manager_1a3ca0b934265a4d9ce6391bf97dec179a" compoundref="_logger_manager_8cpp" startline="379" endline="387">_getCurrentDateString</references>
        <references refid="class_logger_manager_1a4f31651f8963f741bfbdb944164ffc15" compoundref="_logger_manager_8cpp" startline="389" endline="403">_getCurrentTimeString</references>
        <references refid="class_logger_manager_1a2acd013849032fc4918b43750fec3721" compoundref="_logger_manager_8h" startline="100">_lastAlarmStateLogDate</references>
        <references refid="class_logger_manager_1a72dc7742fbeeba07932fc5cb730c26d5" compoundref="_logger_manager_8cpp" startline="960" endline="996">_writeAlarmStateRow</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1afcfd2d250390c756a7dc77c63e7b86a0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String LoggerManager::getCurrentAlarmStateLogFile</definition>
        <argsstring>() const</argsstring>
        <name>getCurrentAlarmStateLogFile</name>
        <qualifiedname>LoggerManager::getCurrentAlarmStateLogFile</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="303" column="12" bodyfile="src/LoggerManager.cpp" bodystart="999" bodyend="1001"/>
        <references refid="class_logger_manager_1ad98e4e5ce78d523e913ad993e7c568d8" compoundref="_logger_manager_8h" startline="99">_currentAlarmStateLogFile</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a647d06128ee720bed0022299f97b37b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::deleteAlarmStateLogFile</definition>
        <argsstring>(const String &amp;filename)</argsstring>
        <name>deleteAlarmStateLogFile</name>
        <qualifiedname>LoggerManager::deleteAlarmStateLogFile</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="305" column="10" bodyfile="src/LoggerManager.cpp" bodystart="1030" bodyend="1035"/>
        <references refid="class_logger_manager_1aafa084a85db9c6a3f3e56d3f1bc3d1f9" compoundref="_logger_manager_8h" startline="98">_alarmStateLogDirectory</references>
        <references refid="class_logger_manager_1af144897db95f5165f66ba0937d23847d" compoundref="_logger_manager_8h" startline="42">_fs</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_logger_manager_1aa1d28a0eee6d794090563cdffe7f43c1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_logger_manager" kindref="compound">LoggerManager</ref> *</type>
        <definition>static LoggerManager * LoggerManager::getInstance</definition>
        <argsstring>()</argsstring>
        <name>getInstance</name>
        <qualifiedname>LoggerManager::getInstance</qualifiedname>
        <briefdescription>
<para>Get singleton instance. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>LoggerManager* Pointer to singleton instance</para>
</simplesect>
Provides access to the global logger instance </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="136" column="26" bodyfile="include/LoggerManager.h" bodystart="136" bodyend="136"/>
        <references refid="class_logger_manager_1a3f4c0cc78425ddd99d489740be325f4d" compoundref="_logger_manager_8h" startline="39">_instance</references>
        <references refid="class_logger_manager_1a321bbaf7cc3b3aa05c8ec036d4dbfea0" compoundref="_logger_manager_8cpp" startline="8" endline="16">LoggerManager</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool LoggerManager::info</definition>
        <argsstring>(const String &amp;source, const String &amp;description)</argsstring>
        <name>info</name>
        <qualifiedname>LoggerManager::info</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>description</declname>
        </param>
        <briefdescription>
<para>Log informational message (static convenience method) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">source</parametername>
</parameternamelist>
<parameterdescription>
<para>Source component or module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">description</parametername>
</parameternamelist>
<parameterdescription>
<para>Description of the event </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool True if logging successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="145" column="17" bodyfile="include/LoggerManager.h" bodystart="145" bodyend="147"/>
        <references refid="class_logger_manager_1a3f4c0cc78425ddd99d489740be325f4d" compoundref="_logger_manager_8h" startline="39">_instance</references>
        <referencedby refid="class_alarm_1aa14f5a764303b269f04573867e2e4fc8" compoundref="_alarm_8cpp" startline="107" endline="136">Alarm::acknowledge</referencedby>
        <referencedby refid="class_temperature_controller_1ac5c3403746d7c850bf7929bf5ee3448a" compoundref="_temperature_controller_8cpp" startline="1290" endline="1346">TemperatureController::addAlarm</referencedby>
        <referencedby refid="class_alarm_1abf159b68e429d66de4ab2d10c2ccd44b" compoundref="_alarm_8cpp" startline="46" endline="73">Alarm::Alarm</referencedby>
        <referencedby refid="class_config_manager_1a0497343220fc493f5cf9574922508908" compoundref="_config_manager_8cpp" startline="103" endline="215">ConfigManager::begin</referencedby>
        <referencedby refid="class_temperature_controller_1af59d6d6d48ed8ddfb968a1fa2dce6768" compoundref="_temperature_controller_8cpp" startline="60" endline="123">TemperatureController::begin</referencedby>
        <referencedby refid="class_temp_modbus_server_1aac671b84770f4139745d08d05b5c1d92" compoundref="_temp_modbus_server_8cpp" startline="63" endline="102">TempModbusServer::begin</referencedby>
        <referencedby refid="class_temperature_controller_1a84937fc1aed30193b817f3b062ce0cfc" compoundref="_temperature_controller_8cpp" startline="802" endline="823">TemperatureController::bindSensorToPointByChipSelect</referencedby>
        <referencedby refid="class_temperature_controller_1a5d8f7c51bb176435a5035293a2db78f7" compoundref="_temperature_controller_8cpp" startline="775" endline="800">TemperatureController::bindSensorToPointByRom</referencedby>
        <referencedby refid="class_alarm_1adc66e3d22e173b00c59b040369030a17" compoundref="_alarm_8cpp" startline="140" endline="157">Alarm::clear</referencedby>
        <referencedby refid="class_config_manager_1a9b7af07b85bf9cc3ac05603db6e89fd2" compoundref="_config_manager_8cpp" startline="841" endline="969">ConfigManager::csvImportExportAPI</referencedby>
        <referencedby refid="class_temperature_controller_1a57b74b40c88016965d07248981412f7d" compoundref="_temperature_controller_8cpp" startline="881" endline="953">TemperatureController::discoverDS18B20Sensors</referencedby>
        <referencedby refid="class_temperature_controller_1a79e98c9a1d42de787a66e02b250b7a74" compoundref="_temperature_controller_8cpp" startline="956" endline="1005">TemperatureController::discoverPTSensors</referencedby>
        <referencedby refid="class_temperature_controller_1a82e4c37ff4121eaf5e00e9c52381e840" compoundref="_temperature_controller_8cpp" startline="408" endline="536">TemperatureController::handleAlarmOutputs</referencedby>
        <referencedby refid="class_config_manager_1a04edc14e642ecadb9ccb87be05d1d878" compoundref="_config_manager_8cpp" startline="361" endline="425">ConfigManager::loadPointsConfig</referencedby>
        <referencedby refid="class_temp_modbus_server_1a7d4a0ced2cfd174a4697a85492e12a58" compoundref="_temp_modbus_server_8cpp" startline="154" endline="216">TempModbusServer::readHoldingRegistersWorker</referencedby>
        <referencedby refid="class_temperature_controller_1ac39c426da2e1f9dff4abe1d9b550b723" compoundref="_temperature_controller_8cpp" startline="1348" endline="1361">TemperatureController::removeAlarm</referencedby>
        <referencedby refid="class_temperature_controller_1a1ecad2d878922493c93fe9baa9be10d3" compoundref="_temperature_controller_8cpp" startline="1146" endline="1152">TemperatureController::resetMinMaxValues</referencedby>
        <referencedby refid="class_alarm_1a73e7673d61f82aa21441c75f2cee2c6f" compoundref="_alarm_8cpp" startline="159" endline="173">Alarm::resolve</referencedby>
        <referencedby refid="class_config_manager_1a55b79da91c57039c483ddf5fceabbd64" compoundref="_config_manager_8cpp" startline="279" endline="320">ConfigManager::savePointsConfig</referencedby>
        <referencedby refid="class_temperature_controller_1a5a9f98c140498fee9a3dba8f8af1cb49" compoundref="_temperature_controller_8cpp" startline="1154" endline="1160">TemperatureController::setDeviceId</referencedby>
        <referencedby refid="class_alarm_1acb8f203b2e2317c1f835bb4b19123f3f" compoundref="_alarm_8cpp" startline="461" endline="470">Alarm::setEnabled</referencedby>
        <referencedby refid="class_measurement_point_1aefb47fef40f33161be5c6fddf0cf6329" compoundref="_measurement_point_8cpp" startline="86" endline="96">MeasurementPoint::setHighAlarmThreshold</referencedby>
        <referencedby refid="class_alarm_1a8d031874090c0c0e548a1f2e41ea4979" compoundref="_alarm_8cpp" startline="447" endline="459">Alarm::setHysteresis</referencedby>
        <referencedby refid="class_measurement_point_1ac780917beebc11d705824cab8f43b94d" compoundref="_measurement_point_8cpp" startline="72" endline="84">MeasurementPoint::setLowAlarmThreshold</referencedby>
        <referencedby refid="class_temperature_controller_1a08f5d97d74f6364588cf22dadd9a746e" compoundref="_temperature_controller_8cpp" startline="1171" endline="1180">TemperatureController::setMeasurementPeriod</referencedby>
        <referencedby refid="class_measurement_point_1ae3abe83ed3e7979a906c7d753ac9d22d" compoundref="_measurement_point_8cpp" startline="61" endline="70">MeasurementPoint::setName</referencedby>
        <referencedby refid="class_alarm_1a5095c54c304a52ebbaca5a2ea74059cd" compoundref="_alarm_8cpp" startline="433" endline="445">Alarm::setPriority</referencedby>
        <referencedby refid="class_indicator_interface_1aafa418167df7eb74fc90fca14818a5eb" compoundref="_indicator_interface_8cpp" startline="966" endline="993">IndicatorInterface::startBlinking</referencedby>
        <referencedby refid="class_indicator_interface_1a4458930151b73e21364fada5ba6fe129" compoundref="_indicator_interface_8cpp" startline="995" endline="1007">IndicatorInterface::stopBlinking</referencedby>
        <referencedby refid="class_temp_modbus_server_1a32478c395aa45fcdcafcd8790de50691" compoundref="_temp_modbus_server_8cpp" startline="3" endline="26">TempModbusServer::TempModbusServer</referencedby>
        <referencedby refid="class_temperature_controller_1a261c9b96540ec6680dfffd3a26e4ca00" compoundref="_temperature_controller_8cpp" startline="825" endline="846">TemperatureController::unbindSensorFromPoint</referencedby>
        <referencedby refid="class_alarm_1abc87fe39e6a9b5beb9f09df780f67621" compoundref="_alarm_8cpp" startline="479" endline="624">Alarm::updateCondition</referencedby>
        <referencedby refid="class_temp_modbus_server_1a88b7288d622b52f9e28b7c6075b75fe0" compoundref="_temp_modbus_server_8cpp" startline="241" endline="269">TempModbusServer::writeHoldingRegisterWorker</referencedby>
        <referencedby refid="class_temp_modbus_server_1a52236f3c77c42d126dcaee7515fa37d3" compoundref="_temp_modbus_server_8cpp" startline="315" endline="380">TempModbusServer::writeMultipleRegistersWorker</referencedby>
        <referencedby refid="class_alarm_1adb5fc73041badc6a082b78874559c002" compoundref="_alarm_8cpp" startline="88" endline="99">Alarm::~Alarm</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a0d52b0ff7bff22817e987ad753102854" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool LoggerManager::warning</definition>
        <argsstring>(const String &amp;source, const String &amp;description)</argsstring>
        <name>warning</name>
        <qualifiedname>LoggerManager::warning</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>description</declname>
        </param>
        <briefdescription>
<para>Log warning message (static convenience method) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">source</parametername>
</parameternamelist>
<parameterdescription>
<para>Source component or module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">description</parametername>
</parameternamelist>
<parameterdescription>
<para>Description of the warning </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool True if logging successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="155" column="17" bodyfile="include/LoggerManager.h" bodystart="155" bodyend="157"/>
        <references refid="class_logger_manager_1a3f4c0cc78425ddd99d489740be325f4d" compoundref="_logger_manager_8h" startline="39">_instance</references>
        <referencedby refid="class_temperature_controller_1ac5c3403746d7c850bf7929bf5ee3448a" compoundref="_temperature_controller_8cpp" startline="1290" endline="1346">TemperatureController::addAlarm</referencedby>
        <referencedby refid="class_config_manager_1a0497343220fc493f5cf9574922508908" compoundref="_config_manager_8cpp" startline="103" endline="215">ConfigManager::begin</referencedby>
        <referencedby refid="class_temp_modbus_server_1aac671b84770f4139745d08d05b5c1d92" compoundref="_temp_modbus_server_8cpp" startline="63" endline="102">TempModbusServer::begin</referencedby>
        <referencedby refid="class_temperature_controller_1a84937fc1aed30193b817f3b062ce0cfc" compoundref="_temperature_controller_8cpp" startline="802" endline="823">TemperatureController::bindSensorToPointByChipSelect</referencedby>
        <referencedby refid="class_temperature_controller_1a5d8f7c51bb176435a5035293a2db78f7" compoundref="_temperature_controller_8cpp" startline="775" endline="800">TemperatureController::bindSensorToPointByRom</referencedby>
        <referencedby refid="class_alarm_1af8d75ee8622a2a96f4bc9b408e9668e5" compoundref="_alarm_8cpp" startline="176" endline="193">Alarm::reactivate</referencedby>
        <referencedby refid="class_alarm_1abc87fe39e6a9b5beb9f09df780f67621" compoundref="_alarm_8cpp" startline="479" endline="624">Alarm::updateCondition</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1aef24f00186213fa78be3b104a50d58e6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool LoggerManager::error</definition>
        <argsstring>(const String &amp;source, const String &amp;description)</argsstring>
        <name>error</name>
        <qualifiedname>LoggerManager::error</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>description</declname>
        </param>
        <briefdescription>
<para>Log error message (static convenience method) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">source</parametername>
</parameternamelist>
<parameterdescription>
<para>Source component or module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">description</parametername>
</parameternamelist>
<parameterdescription>
<para>Description of the error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool True if logging successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="165" column="17" bodyfile="include/LoggerManager.h" bodystart="165" bodyend="167"/>
        <references refid="class_logger_manager_1a3f4c0cc78425ddd99d489740be325f4d" compoundref="_logger_manager_8h" startline="39">_instance</references>
        <referencedby refid="class_config_manager_1a9b7af07b85bf9cc3ac05603db6e89fd2" compoundref="_config_manager_8cpp" startline="841" endline="969">ConfigManager::csvImportExportAPI</referencedby>
        <referencedby refid="class_temp_modbus_server_1a7d4a0ced2cfd174a4697a85492e12a58" compoundref="_temp_modbus_server_8cpp" startline="154" endline="216">TempModbusServer::readHoldingRegistersWorker</referencedby>
        <referencedby refid="class_temperature_controller_1a261c9b96540ec6680dfffd3a26e4ca00" compoundref="_temperature_controller_8cpp" startline="825" endline="846">TemperatureController::unbindSensorFromPoint</referencedby>
        <referencedby refid="class_temperature_controller_1a23dca296a268baa9b8234c8bf9cf0c3e" compoundref="_temperature_controller_8cpp" startline="1210" endline="1234">TemperatureController::updateAllSensors</referencedby>
        <referencedby refid="class_alarm_1abc87fe39e6a9b5beb9f09df780f67621" compoundref="_alarm_8cpp" startline="479" endline="624">Alarm::updateCondition</referencedby>
        <referencedby refid="class_temp_modbus_server_1a88b7288d622b52f9e28b7c6075b75fe0" compoundref="_temp_modbus_server_8cpp" startline="241" endline="269">TempModbusServer::writeHoldingRegisterWorker</referencedby>
        <referencedby refid="class_temp_modbus_server_1a52236f3c77c42d126dcaee7515fa37d3" compoundref="_temp_modbus_server_8cpp" startline="315" endline="380">TempModbusServer::writeMultipleRegistersWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1adec54c926cce1f89ac492f0c647e2ba1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool LoggerManager::critical</definition>
        <argsstring>(const String &amp;source, const String &amp;description)</argsstring>
        <name>critical</name>
        <qualifiedname>LoggerManager::critical</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>description</declname>
        </param>
        <briefdescription>
<para>Log critical message (static convenience method) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">source</parametername>
</parameternamelist>
<parameterdescription>
<para>Source component or module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">description</parametername>
</parameternamelist>
<parameterdescription>
<para>Description of the critical event </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool True if logging successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="175" column="17" bodyfile="include/LoggerManager.h" bodystart="175" bodyend="177"/>
        <references refid="class_logger_manager_1a3f4c0cc78425ddd99d489740be325f4d" compoundref="_logger_manager_8h" startline="39">_instance</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1af7630428e323854b0bcf5e2159511f84" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String LoggerManager::getLogDirectory</definition>
        <argsstring>()</argsstring>
        <name>getLogDirectory</name>
        <qualifiedname>LoggerManager::getLogDirectory</qualifiedname>
        <briefdescription>
<para>Get current log directory. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String Current log directory path </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="241" column="19" bodyfile="src/LoggerManager.cpp" bodystart="143" bodyend="145"/>
        <references refid="class_logger_manager_1a3f4c0cc78425ddd99d489740be325f4d" compoundref="_logger_manager_8h" startline="39">_instance</references>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a2b670504d6ebd0c2c2f833caed6842d5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; String &gt;</type>
        <definition>std::vector&lt; String &gt; LoggerManager::getLogFiles</definition>
        <argsstring>()</argsstring>
        <name>getLogFiles</name>
        <qualifiedname>LoggerManager::getLogFiles</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="251" column="24" bodyfile="src/LoggerManager.cpp" bodystart="1838" bodyend="1862"/>
        <references refid="class_logger_manager_1a3f4c0cc78425ddd99d489740be325f4d" compoundref="_logger_manager_8h" startline="39">_instance</references>
        <referencedby refid="class_config_manager_1a3b28982c79587a287c8ddf0acf47f71d" compoundref="_config_manager_8cpp" startline="1682" endline="1883">ConfigManager::downloadAPI</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1aa74d58708cf5cdf8ddafad648edadcf7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::logAlarmStateChange</definition>
        <argsstring>(int pointNumber, const String &amp;pointName, const String &amp;alarmType, const String &amp;alarmPriority, const String &amp;previousState, const String &amp;newState, int16_t currentTemp, int16_t threshold)</argsstring>
        <name>logAlarmStateChange</name>
        <qualifiedname>LoggerManager::logAlarmStateChange</qualifiedname>
        <param>
          <type>int</type>
          <declname>pointNumber</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>pointName</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>alarmType</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>alarmPriority</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>previousState</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>newState</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>currentTemp</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="291" column="17" bodyfile="src/LoggerManager.cpp" bodystart="870" bodyend="877"/>
        <references refid="class_logger_manager_1a3f4c0cc78425ddd99d489740be325f4d" compoundref="_logger_manager_8h" startline="39">_instance</references>
        <referencedby refid="class_alarm_1aa14f5a764303b269f04573867e2e4fc8" compoundref="_alarm_8cpp" startline="107" endline="136">Alarm::acknowledge</referencedby>
        <referencedby refid="class_alarm_1abc87fe39e6a9b5beb9f09df780f67621" compoundref="_alarm_8cpp" startline="479" endline="624">Alarm::updateCondition</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a8e154caf5cdb9dd50722e2f52314e383" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String LoggerManager::getEventLogsJson</definition>
        <argsstring>(const String &amp;startDate, const String &amp;endDate)</argsstring>
        <name>getEventLogsJson</name>
        <qualifiedname>LoggerManager::getEventLogsJson</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>startDate</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>endDate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="316" column="19" bodyfile="src/LoggerManager.cpp" bodystart="1511" bodyend="1574"/>
        <references refid="class_logger_manager_1ad3222128e4c210c2006e314966c511f5" compoundref="_logger_manager_8cpp" startline="1623" endline="1675">_getEventLogFilesInRange</references>
        <references refid="class_logger_manager_1a3f4c0cc78425ddd99d489740be325f4d" compoundref="_logger_manager_8h" startline="39">_instance</references>
        <references refid="class_logger_manager_1a26f82b651be286678438022bbfbd21d7" compoundref="_logger_manager_8cpp" startline="1678" endline="1715">_parseEventLogEntry</references>
        <referencedby refid="class_config_manager_1a9e977107b4795fcbce0482711ff1ce7a" compoundref="_config_manager_8cpp" startline="1550" endline="1680">ConfigManager::logsAPI</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a752cebdb1c0344890d265af9daee8313" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String LoggerManager::getEventLogsCsv</definition>
        <argsstring>(const String &amp;startDate, const String &amp;endDate)</argsstring>
        <name>getEventLogsCsv</name>
        <qualifiedname>LoggerManager::getEventLogsCsv</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>startDate</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>endDate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="317" column="19" bodyfile="src/LoggerManager.cpp" bodystart="1577" bodyend="1620"/>
        <references refid="class_logger_manager_1ad3222128e4c210c2006e314966c511f5" compoundref="_logger_manager_8cpp" startline="1623" endline="1675">_getEventLogFilesInRange</references>
        <references refid="class_logger_manager_1a3f4c0cc78425ddd99d489740be325f4d" compoundref="_logger_manager_8h" startline="39">_instance</references>
        <referencedby refid="class_config_manager_1a9e977107b4795fcbce0482711ff1ce7a" compoundref="_config_manager_8cpp" startline="1550" endline="1680">ConfigManager::logsAPI</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1ab16e7ab4b0cc70674b9b87118f72d805" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String LoggerManager::getEventLogStatsJson</definition>
        <argsstring>(const String &amp;startDate, const String &amp;endDate)</argsstring>
        <name>getEventLogStatsJson</name>
        <qualifiedname>LoggerManager::getEventLogStatsJson</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>startDate</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>endDate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="318" column="19" bodyfile="src/LoggerManager.cpp" bodystart="1718" bodyend="1801"/>
        <references refid="class_logger_manager_1ad3222128e4c210c2006e314966c511f5" compoundref="_logger_manager_8cpp" startline="1623" endline="1675">_getEventLogFilesInRange</references>
        <references refid="class_logger_manager_1a3f4c0cc78425ddd99d489740be325f4d" compoundref="_logger_manager_8h" startline="39">_instance</references>
        <referencedby refid="class_config_manager_1a9e977107b4795fcbce0482711ff1ce7a" compoundref="_config_manager_8cpp" startline="1550" endline="1680">ConfigManager::logsAPI</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1af04d8d79f7bcb9ff4dace5b490502b50" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String LoggerManager::getAlarmHistoryJson</definition>
        <argsstring>(const String &amp;startDate, const String &amp;endDate)</argsstring>
        <name>getAlarmHistoryJson</name>
        <qualifiedname>LoggerManager::getAlarmHistoryJson</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>startDate</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>endDate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="322" column="19" bodyfile="src/LoggerManager.cpp" bodystart="1050" bodyend="1128"/>
        <references refid="class_logger_manager_1a0bd4f43205e247f114f1a49a8de438d5" compoundref="_logger_manager_8cpp" startline="1175" endline="1230">_getAlarmLogFilesInRange</references>
        <references refid="class_logger_manager_1a3f4c0cc78425ddd99d489740be325f4d" compoundref="_logger_manager_8h" startline="39">_instance</references>
        <references refid="class_logger_manager_1a5ec50d53433ca34a292d19dfb30042fc" compoundref="_logger_manager_8cpp" startline="1231" endline="1274">_parseAlarmStateLogEntry</references>
        <referencedby refid="class_config_manager_1a9e977107b4795fcbce0482711ff1ce7a" compoundref="_config_manager_8cpp" startline="1550" endline="1680">ConfigManager::logsAPI</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a612d1bdfbfd0d93f9452fd7bac8775ca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String LoggerManager::getAlarmHistoryCsv</definition>
        <argsstring>(const String &amp;startDate, const String &amp;endDate)</argsstring>
        <name>getAlarmHistoryCsv</name>
        <qualifiedname>LoggerManager::getAlarmHistoryCsv</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>startDate</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>endDate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="323" column="19" bodyfile="src/LoggerManager.cpp" bodystart="1130" bodyend="1173"/>
        <references refid="class_logger_manager_1a0bd4f43205e247f114f1a49a8de438d5" compoundref="_logger_manager_8cpp" startline="1175" endline="1230">_getAlarmLogFilesInRange</references>
        <references refid="class_logger_manager_1a3f4c0cc78425ddd99d489740be325f4d" compoundref="_logger_manager_8h" startline="39">_instance</references>
        <referencedby refid="class_config_manager_1a9e977107b4795fcbce0482711ff1ce7a" compoundref="_config_manager_8cpp" startline="1550" endline="1680">ConfigManager::logsAPI</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a782a868803b4e2861169796aad7b8b60" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; String &gt;</type>
        <definition>std::vector&lt; String &gt; LoggerManager::getEventLogFilesStatic</definition>
        <argsstring>()</argsstring>
        <name>getEventLogFilesStatic</name>
        <qualifiedname>LoggerManager::getEventLogFilesStatic</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="327" column="24" bodyfile="src/LoggerManager.cpp" bodystart="1804" bodyend="1833"/>
        <references refid="class_logger_manager_1a3f4c0cc78425ddd99d489740be325f4d" compoundref="_logger_manager_8h" startline="39">_instance</references>
        <referencedby refid="class_config_manager_1a3b28982c79587a287c8ddf0acf47f71d" compoundref="_config_manager_8cpp" startline="1682" endline="1883">ConfigManager::downloadAPI</referencedby>
        <referencedby refid="class_config_manager_1a9e977107b4795fcbce0482711ff1ce7a" compoundref="_config_manager_8cpp" startline="1550" endline="1680">ConfigManager::logsAPI</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a19e6a7d2c3ad2b1d3fa5acb578fb1619" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; String &gt;</type>
        <definition>std::vector&lt; String &gt; LoggerManager::getAlarmStateLogFiles</definition>
        <argsstring>()</argsstring>
        <name>getAlarmStateLogFiles</name>
        <qualifiedname>LoggerManager::getAlarmStateLogFiles</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="328" column="24" bodyfile="src/LoggerManager.cpp" bodystart="1865" bodyend="1889"/>
        <references refid="class_logger_manager_1a3f4c0cc78425ddd99d489740be325f4d" compoundref="_logger_manager_8h" startline="39">_instance</references>
        <referencedby refid="class_config_manager_1a3b28982c79587a287c8ddf0acf47f71d" compoundref="_config_manager_8cpp" startline="1682" endline="1883">ConfigManager::downloadAPI</referencedby>
        <referencedby refid="class_config_manager_1a9e977107b4795fcbce0482711ff1ce7a" compoundref="_config_manager_8cpp" startline="1550" endline="1680">ConfigManager::logsAPI</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1acb4313c65e6a661229f2c3d662f1c059" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::getFileInfo</definition>
        <argsstring>(const String &amp;filename, const String &amp;type, size_t &amp;fileSize, String &amp;date)</argsstring>
        <name>getFileInfo</name>
        <qualifiedname>LoggerManager::getFileInfo</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>fileSize</declname>
        </param>
        <param>
          <type>String &amp;</type>
          <declname>date</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="331" column="17" bodyfile="src/LoggerManager.cpp" bodystart="1892" bodyend="1924"/>
        <references refid="class_logger_manager_1a3f4c0cc78425ddd99d489740be325f4d" compoundref="_logger_manager_8h" startline="39">_instance</references>
        <references refid="class_logger_manager_1a72c969cc82b969c4899dc4d2c8280f0b" compoundref="_logger_manager_8cpp" startline="1941" endline="1955">getLogDirectoryPath</references>
        <referencedby refid="class_config_manager_1a3b28982c79587a287c8ddf0acf47f71d" compoundref="_config_manager_8cpp" startline="1682" endline="1883">ConfigManager::downloadAPI</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a92719154d919a9bd45a8ea192e70dfcc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>File</type>
        <definition>File LoggerManager::openLogFile</definition>
        <argsstring>(const String &amp;filename, const String &amp;type)</argsstring>
        <name>openLogFile</name>
        <qualifiedname>LoggerManager::openLogFile</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="334" column="17" bodyfile="src/LoggerManager.cpp" bodystart="1927" bodyend="1938"/>
        <references refid="class_logger_manager_1a3f4c0cc78425ddd99d489740be325f4d" compoundref="_logger_manager_8h" startline="39">_instance</references>
        <references refid="class_logger_manager_1a72c969cc82b969c4899dc4d2c8280f0b" compoundref="_logger_manager_8cpp" startline="1941" endline="1955">getLogDirectoryPath</references>
        <referencedby refid="class_config_manager_1a3b28982c79587a287c8ddf0acf47f71d" compoundref="_config_manager_8cpp" startline="1682" endline="1883">ConfigManager::downloadAPI</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a72c969cc82b969c4899dc4d2c8280f0b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String LoggerManager::getLogDirectoryPath</definition>
        <argsstring>(const String &amp;type)</argsstring>
        <name>getLogDirectoryPath</name>
        <qualifiedname>LoggerManager::getLogDirectoryPath</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="335" column="19" bodyfile="src/LoggerManager.cpp" bodystart="1941" bodyend="1955"/>
        <references refid="class_logger_manager_1a3f4c0cc78425ddd99d489740be325f4d" compoundref="_logger_manager_8h" startline="39">_instance</references>
        <referencedby refid="class_logger_manager_1acb4313c65e6a661229f2c3d662f1c059" compoundref="_logger_manager_8cpp" startline="1892" endline="1924">getFileInfo</referencedby>
        <referencedby refid="class_logger_manager_1a92719154d919a9bd45a8ea192e70dfcc" compoundref="_logger_manager_8cpp" startline="1927" endline="1938">openLogFile</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_logger_manager_1ad3222128e4c210c2006e314966c511f5" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; String &gt;</type>
        <definition>std::vector&lt; String &gt; LoggerManager::_getEventLogFilesInRange</definition>
        <argsstring>(const String &amp;startDate, const String &amp;endDate)</argsstring>
        <name>_getEventLogFilesInRange</name>
        <qualifiedname>LoggerManager::_getEventLogFilesInRange</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>startDate</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>endDate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="350" column="24" bodyfile="src/LoggerManager.cpp" bodystart="1623" bodyend="1675"/>
        <references refid="class_logger_manager_1a3f4c0cc78425ddd99d489740be325f4d" compoundref="_logger_manager_8h" startline="39">_instance</references>
        <references refid="class_logger_manager_1ab4c92b3ff3b5f56dc21d6ef8835c310b" compoundref="_logger_manager_8cpp" startline="1276" endline="1302">_normalizeDate</references>
        <referencedby refid="class_logger_manager_1a752cebdb1c0344890d265af9daee8313" compoundref="_logger_manager_8cpp" startline="1577" endline="1620">getEventLogsCsv</referencedby>
        <referencedby refid="class_logger_manager_1a8e154caf5cdb9dd50722e2f52314e383" compoundref="_logger_manager_8cpp" startline="1511" endline="1574">getEventLogsJson</referencedby>
        <referencedby refid="class_logger_manager_1ab16e7ab4b0cc70674b9b87118f72d805" compoundref="_logger_manager_8cpp" startline="1718" endline="1801">getEventLogStatsJson</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a26f82b651be286678438022bbfbd21d7" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::_parseEventLogEntry</definition>
        <argsstring>(const String &amp;line, DynamicJsonDocument &amp;entry)</argsstring>
        <name>_parseEventLogEntry</name>
        <qualifiedname>LoggerManager::_parseEventLogEntry</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>line</declname>
        </param>
        <param>
          <type>DynamicJsonDocument &amp;</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="351" column="17" bodyfile="src/LoggerManager.cpp" bodystart="1678" bodyend="1715"/>
        <referencedby refid="class_logger_manager_1a8e154caf5cdb9dd50722e2f52314e383" compoundref="_logger_manager_8cpp" startline="1511" endline="1574">getEventLogsJson</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a0bd4f43205e247f114f1a49a8de438d5" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; String &gt;</type>
        <definition>std::vector&lt; String &gt; LoggerManager::_getAlarmLogFilesInRange</definition>
        <argsstring>(const String &amp;startDate, const String &amp;endDate)</argsstring>
        <name>_getAlarmLogFilesInRange</name>
        <qualifiedname>LoggerManager::_getAlarmLogFilesInRange</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>startDate</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>endDate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="354" column="24" bodyfile="src/LoggerManager.cpp" bodystart="1175" bodyend="1230"/>
        <references refid="class_logger_manager_1a3f4c0cc78425ddd99d489740be325f4d" compoundref="_logger_manager_8h" startline="39">_instance</references>
        <references refid="class_logger_manager_1ab4c92b3ff3b5f56dc21d6ef8835c310b" compoundref="_logger_manager_8cpp" startline="1276" endline="1302">_normalizeDate</references>
        <referencedby refid="class_logger_manager_1a612d1bdfbfd0d93f9452fd7bac8775ca" compoundref="_logger_manager_8cpp" startline="1130" endline="1173">getAlarmHistoryCsv</referencedby>
        <referencedby refid="class_logger_manager_1af04d8d79f7bcb9ff4dace5b490502b50" compoundref="_logger_manager_8cpp" startline="1050" endline="1128">getAlarmHistoryJson</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1a5ec50d53433ca34a292d19dfb30042fc" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoggerManager::_parseAlarmStateLogEntry</definition>
        <argsstring>(const String &amp;line, DynamicJsonDocument &amp;entry)</argsstring>
        <name>_parseAlarmStateLogEntry</name>
        <qualifiedname>LoggerManager::_parseAlarmStateLogEntry</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>line</declname>
        </param>
        <param>
          <type>DynamicJsonDocument &amp;</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="355" column="17" bodyfile="src/LoggerManager.cpp" bodystart="1231" bodyend="1274"/>
        <referencedby refid="class_logger_manager_1af04d8d79f7bcb9ff4dace5b490502b50" compoundref="_logger_manager_8cpp" startline="1050" endline="1128">getAlarmHistoryJson</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_logger_manager_1ab4c92b3ff3b5f56dc21d6ef8835c310b" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String LoggerManager::_normalizeDate</definition>
        <argsstring>(const String &amp;dateStr)</argsstring>
        <name>_normalizeDate</name>
        <qualifiedname>LoggerManager::_normalizeDate</qualifiedname>
        <param>
          <type>const String &amp;</type>
          <declname>dateStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/LoggerManager.h" line="356" column="19" bodyfile="src/LoggerManager.cpp" bodystart="1276" bodyend="1302"/>
        <referencedby refid="class_logger_manager_1a0bd4f43205e247f114f1a49a8de438d5" compoundref="_logger_manager_8cpp" startline="1175" endline="1230">_getAlarmLogFilesInRange</referencedby>
        <referencedby refid="class_logger_manager_1ad3222128e4c210c2006e314966c511f5" compoundref="_logger_manager_8cpp" startline="1623" endline="1675">_getEventLogFilesInRange</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Forward declaration for measurement point class. </para>
    </briefdescription>
    <detaileddescription>
<para>Singleton logger manager for comprehensive system logging</para>
<para>Provides measurement data logging, event logging, and alarm state logging with automatic file management, CSV formatting, and date-based organization </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="7">
        <label>Alarm</label>
        <link refid="class_alarm"/>
        <childnode refid="4" relation="usage">
          <edgelabel>-_source</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>IndicatorInterface</label>
        <link refid="class_indicator_interface"/>
        <childnode refid="3" relation="usage">
          <edgelabel>-_instance</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>LoggerManager</label>
        <link refid="class_logger_manager"/>
        <childnode refid="1" relation="usage">
          <edgelabel>-_instance</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>-_controller</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>-_timeManager</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>MeasurementPoint</label>
        <link refid="class_measurement_point"/>
        <childnode refid="5" relation="usage">
          <edgelabel>-boundSensor</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>RegisterMap</label>
        <link refid="class_register_map"/>
      </node>
      <node id="5">
        <label>Sensor</label>
        <link refid="class_sensor"/>
      </node>
      <node id="2">
        <label>TemperatureController</label>
        <link refid="class_temperature_controller"/>
        <childnode refid="3" relation="usage">
          <edgelabel>-indicator</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>-dsPoints</edgelabel>
          <edgelabel>-ptPoints</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>-registerMap</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>-_currentDisplayedAlarm</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>TimeManager</label>
        <link refid="class_time_manager"/>
      </node>
    </collaborationgraph>
    <location file="include/LoggerManager.h" line="37" column="1" bodyfile="include/LoggerManager.h" bodystart="37" bodyend="357"/>
    <listofallmembers>
      <member refid="class_logger_manager_1aafa084a85db9c6a3f3e56d3f1bc3d1f9" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_alarmStateLogDirectory</name></member>
      <member refid="class_logger_manager_1a0ac1b76305a4723d964c25ce4130692a" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_alarmStateLoggingEnabled</name></member>
      <member refid="class_logger_manager_1ac79c2496082ce8e6ecd42c77e1c5292d" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_controller</name></member>
      <member refid="class_logger_manager_1ad98e4e5ce78d523e913ad993e7c568d8" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_currentAlarmStateLogFile</name></member>
      <member refid="class_logger_manager_1a01add21d20302650f59d7edb1bd556af" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_currentEventLogFile</name></member>
      <member refid="class_logger_manager_1abd02a9be4279f066d2a7d0ac17a1d392" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_currentLogFile</name></member>
      <member refid="class_logger_manager_1a998996a09ab35ff5a07ac18bccb7a9b8" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_dailyFiles</name></member>
      <member refid="class_logger_manager_1af1b758d10f352dc29e116a087a182531" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_enabled</name></member>
      <member refid="class_logger_manager_1a0bb3b084e2a16c2d089e8761a093bef5" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_ensureAlarmStateLogExists</name></member>
      <member refid="class_logger_manager_1a27150c2682f4f8fa6bef8b5bb1b25e52" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_ensureDirectoryExists</name></member>
      <member refid="class_logger_manager_1a4f7591a3b5cb024b7354005b4362e049" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_ensureEventLogExists</name></member>
      <member refid="class_logger_manager_1a57d230cd2896120a32ecf55a14895d55" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_escapeCSVField</name></member>
      <member refid="class_logger_manager_1a2c3e32eee0e7f26dfe62f90b6210483c" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_eventLogDirectory</name></member>
      <member refid="class_logger_manager_1ab62809d7cac3fe5c42d4afca0dc3bcc3" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_eventLoggingEnabled</name></member>
      <member refid="class_logger_manager_1aa19a1b81e99d510ce23068e320305675" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_extractSequenceNumber</name></member>
      <member refid="class_logger_manager_1acac1c36f44bdfa0ade62054d82ee6a7e" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_fileSequenceNumber</name></member>
      <member refid="class_logger_manager_1a0efdffdaa8b90ec4a896c5ac52cd2856" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_findHighestSequenceForDate</name></member>
      <member refid="class_logger_manager_1a485fea5149ef2e0199671ad2dcadbcf4" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_findLatestFileForDate</name></member>
      <member refid="class_logger_manager_1af144897db95f5165f66ba0937d23847d" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_fs</name></member>
      <member refid="class_logger_manager_1ae1e64f32a756b1a0f481eb1d57e8026e" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_generateAlarmStateLogFileName</name></member>
      <member refid="class_logger_manager_1aab43f573f73cfe426cfbea04a9fdd3ee" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_generateCSVHeader</name></member>
      <member refid="class_logger_manager_1a9cf35430e1e61515c6fb12524a58f1ab" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_generateEventLogFileName</name></member>
      <member refid="class_logger_manager_1ae7ff7b324efe85cc2ba892af36cf7e86" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_generateLogFileName</name></member>
      <member refid="class_logger_manager_1ad3276c1ba03fe7e5b98e33cd207baf1f" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_generateLogFileNameWithSequence</name></member>
      <member refid="class_logger_manager_1a0bd4f43205e247f114f1a49a8de438d5" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_getAlarmLogFilesInRange</name></member>
      <member refid="class_logger_manager_1a3ca0b934265a4d9ce6391bf97dec179a" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_getCurrentDateString</name></member>
      <member refid="class_logger_manager_1a4f31651f8963f741bfbdb944164ffc15" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_getCurrentTimeString</name></member>
      <member refid="class_logger_manager_1ad3222128e4c210c2006e314966c511f5" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_getEventLogFilesInRange</name></member>
      <member refid="class_logger_manager_1a21b4985f38a484ab83b984ab285ea32e" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_getFilesForDate</name></member>
      <member refid="class_logger_manager_1a829c2f8dcde77d6506f1d664a291969a" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_hasHeaderChanged</name></member>
      <member refid="class_logger_manager_1aae032051a9478b9221328cc0027d3503" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_headerChanged</name></member>
      <member refid="class_logger_manager_1a049ebea196586a38022577833f2883e8" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_headerWritten</name></member>
      <member refid="class_logger_manager_1abb3a1d7dfa336be59051e566de3fce9d" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_incrementSequenceNumber</name></member>
      <member refid="class_logger_manager_1a3f4c0cc78425ddd99d489740be325f4d" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_instance</name></member>
      <member refid="class_logger_manager_1a45f8c21f50e1920b78d24e1007b6af7d" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_isSDCardAvailable</name></member>
      <member refid="class_logger_manager_1a2acd013849032fc4918b43750fec3721" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_lastAlarmStateLogDate</name></member>
      <member refid="class_logger_manager_1aaef1cc5e819158cfd0197151bc7a74f2" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_lastError</name></member>
      <member refid="class_logger_manager_1abb5c0705894baacf08645d31486f97e6" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_lastEventLogDate</name></member>
      <member refid="class_logger_manager_1a8ea4030601d5e8af884bedc9d7d430aa" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_lastGeneratedHeader</name></member>
      <member refid="class_logger_manager_1a68e9c97c6ed88bdaeb91f2a11d4b16d7" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_lastLogDate</name></member>
      <member refid="class_logger_manager_1a73cceb1b111822d8c701b75fcc966b44" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_lastLogTime</name></member>
      <member refid="class_logger_manager_1a554f37e268c3aed53fba8c1af1f63ef4" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_logDirectory</name></member>
      <member refid="class_logger_manager_1aef22c2918f9cf454cb5264145d507719" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_logFrequency</name></member>
      <member refid="class_logger_manager_1ab4c92b3ff3b5f56dc21d6ef8835c310b" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_normalizeDate</name></member>
      <member refid="class_logger_manager_1a5ec50d53433ca34a292d19dfb30042fc" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_parseAlarmStateLogEntry</name></member>
      <member refid="class_logger_manager_1a26f82b651be286678438022bbfbd21d7" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_parseEventLogEntry</name></member>
      <member refid="class_logger_manager_1ac50bc65494e34dca73f6ee0745a8b6e6" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_readHeaderFromFile</name></member>
      <member refid="class_logger_manager_1ac7866b2b0244358be6a1cfe8d245cc7d" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_recoverFromExistingFiles</name></member>
      <member refid="class_logger_manager_1aaa946fe85923b5fd13ff8bb1c9a3e011" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_timeManager</name></member>
      <member refid="class_logger_manager_1a58657d1fbd45469bb67c2c4d07c5a730" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_writeAlarmStateHeader</name></member>
      <member refid="class_logger_manager_1a72dc7742fbeeba07932fc5cb730c26d5" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_writeAlarmStateRow</name></member>
      <member refid="class_logger_manager_1aa6938b6a5c002d6ed72ef352f0cc7a19" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_writeDataRow</name></member>
      <member refid="class_logger_manager_1a515beeaa428acafce139d79b41fe9d0a" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_writeEventHeader</name></member>
      <member refid="class_logger_manager_1a472884ce9e2aed6a1570187dd37cc006" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_writeEventRow</name></member>
      <member refid="class_logger_manager_1a4095daee15dce39ba5f802ea5b5661a2" prot="private" virt="non-virtual"><scope>LoggerManager</scope><name>_writeHeader</name></member>
      <member refid="class_logger_manager_1a4acf0149820d73f4ed11340f63706841" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>begin</name></member>
      <member refid="class_logger_manager_1ae88c89f897e9041a19ec8c68b5375034" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>closeCurrentFile</name></member>
      <member refid="class_logger_manager_1a445856fb9bb37bd5e61d5242d8996c1f" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>createNewLogFile</name></member>
      <member refid="class_logger_manager_1adec54c926cce1f89ac492f0c647e2ba1" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>critical</name></member>
      <member refid="class_logger_manager_1a647d06128ee720bed0022299f97b37b4" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>deleteAlarmStateLogFile</name></member>
      <member refid="class_logger_manager_1a90c66b71788381dafdde9233d557c5b2" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>deleteEventLogFile</name></member>
      <member refid="class_logger_manager_1a89aa88d2ed6cf85f31383bbce566c318" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>deleteLogFile</name></member>
      <member refid="class_logger_manager_1aef24f00186213fa78be3b104a50d58e6" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>error</name></member>
      <member refid="class_logger_manager_1a32e39dd8df48f64677732ede4066f01d" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>forceNewFile</name></member>
      <member refid="class_logger_manager_1a612d1bdfbfd0d93f9452fd7bac8775ca" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>getAlarmHistoryCsv</name></member>
      <member refid="class_logger_manager_1af04d8d79f7bcb9ff4dace5b490502b50" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>getAlarmHistoryJson</name></member>
      <member refid="class_logger_manager_1a5f39c08c459e18d2729e42a65bc36b8b" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>getAlarmStateLogDirectory</name></member>
      <member refid="class_logger_manager_1a19e6a7d2c3ad2b1d3fa5acb578fb1619" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>getAlarmStateLogFiles</name></member>
      <member refid="class_logger_manager_1afcfd2d250390c756a7dc77c63e7b86a0" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>getCurrentAlarmStateLogFile</name></member>
      <member refid="class_logger_manager_1aff6bc1919e8abe9ba6dc22321dc23305" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>getCurrentEventLogFile</name></member>
      <member refid="class_logger_manager_1aeae443ce9fe2e6c5b0174f5f2267ca07" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>getCurrentLogFile</name></member>
      <member refid="class_logger_manager_1a37f830ae3adab9014190bb644ececfb7" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>getCurrentSequenceNumber</name></member>
      <member refid="class_logger_manager_1ae9493b5afe93d2dd87a1d6dbb7d3516a" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>getEventLogDirectory</name></member>
      <member refid="class_logger_manager_1a30a7b6f03fe07435ba9ce9d7b0d2ef64" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>getEventLogFiles</name></member>
      <member refid="class_logger_manager_1a782a868803b4e2861169796aad7b8b60" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>getEventLogFilesStatic</name></member>
      <member refid="class_logger_manager_1a752cebdb1c0344890d265af9daee8313" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>getEventLogsCsv</name></member>
      <member refid="class_logger_manager_1a8e154caf5cdb9dd50722e2f52314e383" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>getEventLogsJson</name></member>
      <member refid="class_logger_manager_1ab16e7ab4b0cc70674b9b87118f72d805" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>getEventLogStatsJson</name></member>
      <member refid="class_logger_manager_1acb4313c65e6a661229f2c3d662f1c059" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>getFileInfo</name></member>
      <member refid="class_logger_manager_1aa1d28a0eee6d794090563cdffe7f43c1" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>getInstance</name></member>
      <member refid="class_logger_manager_1a7be61ed23c07303c8118316c315f4942" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>getLastError</name></member>
      <member refid="class_logger_manager_1a152a9994818e1aa679f740ae17647ba9" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>getLastLogTime</name></member>
      <member refid="class_logger_manager_1af7630428e323854b0bcf5e2159511f84" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>getLogDirectory</name></member>
      <member refid="class_logger_manager_1a72c969cc82b969c4899dc4d2c8280f0b" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>getLogDirectoryPath</name></member>
      <member refid="class_logger_manager_1a2b670504d6ebd0c2c2f833caed6842d5" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>getLogFiles</name></member>
      <member refid="class_logger_manager_1a88c591ed5570ceb8c0f20a3af4092229" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>getLogFileSize</name></member>
      <member refid="class_logger_manager_1a32f3dead07eaf23b6722f70a1da049a4" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>getLogFrequency</name></member>
      <member refid="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>info</name></member>
      <member refid="class_logger_manager_1a59e0690d922ec968bf64b1b5dda8fcbe" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>init</name></member>
      <member refid="class_logger_manager_1ae77701c6eaf88fccdce6ded3e9e0f195" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>isAlarmStateLoggingEnabled</name></member>
      <member refid="class_logger_manager_1ad4435bf2def9d476eae4614ffd58bb56" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>isDailyFiles</name></member>
      <member refid="class_logger_manager_1a185630e50e91531684cb325d035cbacc" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>isEnabled</name></member>
      <member refid="class_logger_manager_1a2bfeb0cc175868b8e60a74c589fd21d7" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>isEventLoggingEnabled</name></member>
      <member refid="class_logger_manager_1af736040bd57412bef8981960e6df3bda" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>logAlarmState</name></member>
      <member refid="class_logger_manager_1aa74d58708cf5cdf8ddafad648edadcf7" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>logAlarmStateChange</name></member>
      <member refid="class_logger_manager_1a5bda848c9bd87201bf6addd035c493b1" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>logCritical</name></member>
      <member refid="class_logger_manager_1a32ce9f462269787130bee46b2c34b632" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>logDataNow</name></member>
      <member refid="class_logger_manager_1a181e69ea6fe3c7e07e708eada2cc8024" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>logError</name></member>
      <member refid="class_logger_manager_1a0df2f2c96123da1989d0aaf6a4dc1615" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>logEvent</name></member>
      <member refid="class_logger_manager_1a321bbaf7cc3b3aa05c8ec036d4dbfea0" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>LoggerManager</name></member>
      <member refid="class_logger_manager_1a2503703714729cc95171579fe4ce0d4c" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>logInfo</name></member>
      <member refid="class_logger_manager_1a5768a8a1983298c5b94e23dabe18f3bb" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>logWarning</name></member>
      <member refid="class_logger_manager_1a92719154d919a9bd45a8ea192e70dfcc" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>openLogFile</name></member>
      <member refid="class_logger_manager_1aa6525b4dc09697af48a605841bae72cb" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>resetSequenceNumber</name></member>
      <member refid="class_logger_manager_1a7c154712739b91425fd3ae48330771e1" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>setAlarmStateLogDirectory</name></member>
      <member refid="class_logger_manager_1a19e95a6505d565628548b6436b3c1851" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>setAlarmStateLoggingEnabled</name></member>
      <member refid="class_logger_manager_1a85a982d8f23de55b8e81759d014a0595" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>setDailyFiles</name></member>
      <member refid="class_logger_manager_1a91a4ca2debe482ad07e93c50ba4b0828" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>setEnabled</name></member>
      <member refid="class_logger_manager_1ad1c59dedddacc97e10bc64a3aa1d6931" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>setEventLogDirectory</name></member>
      <member refid="class_logger_manager_1aa290d5afed0df250460f715736ef006c" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>setEventLoggingEnabled</name></member>
      <member refid="class_logger_manager_1a96c328bee3d3cd89e2131595906ef776" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>setLogDirectory</name></member>
      <member refid="class_logger_manager_1aaa96d30e5c7f752d4ca86b651058b1a5" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>setLogFrequency</name></member>
      <member refid="class_logger_manager_1a830c86f1f27d3799eab1de908fc6b647" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>update</name></member>
      <member refid="class_logger_manager_1a0d52b0ff7bff22817e987ad753102854" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>warning</name></member>
      <member refid="class_logger_manager_1a0738a5887eb50eba0f08a250b9aa7675" prot="public" virt="non-virtual"><scope>LoggerManager</scope><name>~LoggerManager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
