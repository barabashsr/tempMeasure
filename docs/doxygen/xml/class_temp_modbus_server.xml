<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="class_temp_modbus_server" kind="class" language="C++" prot="public">
    <compoundname>TempModbusServer</compoundname>
    <includes refid="_temp_modbus_server_8h" local="no">TempModbusServer.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_temp_modbus_server_1a84bf329562ebb8bb9b9b55c120a4ddae" prot="private" static="no" mutable="no">
        <type>ModbusServerRTU *</type>
        <definition>ModbusServerRTU* TempModbusServer::mbServer</definition>
        <argsstring></argsstring>
        <name>mbServer</name>
        <qualifiedname>TempModbusServer::mbServer</qualifiedname>
        <briefdescription>
<para>Modbus RTU server instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TempModbusServer.h" line="38" column="21" bodyfile="include/TempModbusServer.h" bodystart="38" bodyend="-1"/>
        <referencedby refid="class_temp_modbus_server_1aac671b84770f4139745d08d05b5c1d92" compoundref="_temp_modbus_server_8cpp" startline="83" endline="122">begin</referencedby>
        <referencedby refid="class_temp_modbus_server_1a32478c395aa45fcdcafcd8790de50691" compoundref="_temp_modbus_server_8cpp" startline="23" endline="46">TempModbusServer</referencedby>
        <referencedby refid="class_temp_modbus_server_1ac703f8733fd8afdec9b315b266f5204a" compoundref="_temp_modbus_server_8cpp" startline="51" endline="57">~TempModbusServer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_temp_modbus_server_1a9caa115b3b1a8131680cdc620a23139e" prot="private" static="no" mutable="no">
        <type><ref refid="class_register_map" kindref="compound">RegisterMap</ref> &amp;</type>
        <definition>RegisterMap&amp; TempModbusServer::registerMap</definition>
        <argsstring></argsstring>
        <name>registerMap</name>
        <qualifiedname>TempModbusServer::registerMap</qualifiedname>
        <briefdescription>
<para>Reference to register map. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TempModbusServer.h" line="39" column="17" bodyfile="include/TempModbusServer.h" bodystart="39" bodyend="-1"/>
        <referencedby refid="class_temp_modbus_server_1a32478c395aa45fcdcafcd8790de50691" compoundref="_temp_modbus_server_8cpp" startline="23" endline="46">TempModbusServer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_temp_modbus_server_1a4db19b8c522c7241cc8507b26dae6997" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t TempModbusServer::serverID</definition>
        <argsstring></argsstring>
        <name>serverID</name>
        <qualifiedname>TempModbusServer::serverID</qualifiedname>
        <briefdescription>
<para>Modbus server ID (1-247) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TempModbusServer.h" line="40" column="13" bodyfile="include/TempModbusServer.h" bodystart="40" bodyend="-1"/>
        <referencedby refid="class_temp_modbus_server_1aac671b84770f4139745d08d05b5c1d92" compoundref="_temp_modbus_server_8cpp" startline="83" endline="122">begin</referencedby>
        <referencedby refid="class_temp_modbus_server_1a32478c395aa45fcdcafcd8790de50691" compoundref="_temp_modbus_server_8cpp" startline="23" endline="46">TempModbusServer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_temp_modbus_server_1afecdc5347ebf2b0a5729b2e8e2cb0642" prot="private" static="no" mutable="no">
        <type>HardwareSerial &amp;</type>
        <definition>HardwareSerial&amp; TempModbusServer::serial</definition>
        <argsstring></argsstring>
        <name>serial</name>
        <qualifiedname>TempModbusServer::serial</qualifiedname>
        <briefdescription>
<para>Hardware serial port reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TempModbusServer.h" line="41" column="20" bodyfile="include/TempModbusServer.h" bodystart="41" bodyend="-1"/>
        <referencedby refid="class_temp_modbus_server_1aac671b84770f4139745d08d05b5c1d92" compoundref="_temp_modbus_server_8cpp" startline="83" endline="122">begin</referencedby>
        <referencedby refid="class_temp_modbus_server_1a32478c395aa45fcdcafcd8790de50691" compoundref="_temp_modbus_server_8cpp" startline="23" endline="46">TempModbusServer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_temp_modbus_server_1ae3a8fcae5056d16b97c0281fc4bddf74" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int TempModbusServer::rxPin</definition>
        <argsstring></argsstring>
        <name>rxPin</name>
        <qualifiedname>TempModbusServer::rxPin</qualifiedname>
        <briefdescription>
<para>UART RX pin. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TempModbusServer.h" line="42" column="9" bodyfile="include/TempModbusServer.h" bodystart="42" bodyend="-1"/>
        <referencedby refid="class_temp_modbus_server_1aac671b84770f4139745d08d05b5c1d92" compoundref="_temp_modbus_server_8cpp" startline="83" endline="122">begin</referencedby>
        <referencedby refid="class_temp_modbus_server_1a32478c395aa45fcdcafcd8790de50691" compoundref="_temp_modbus_server_8cpp" startline="23" endline="46">TempModbusServer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_temp_modbus_server_1ab07ddf78bd3b4f6fde1f0e86e6eb4449" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int TempModbusServer::txPin</definition>
        <argsstring></argsstring>
        <name>txPin</name>
        <qualifiedname>TempModbusServer::txPin</qualifiedname>
        <briefdescription>
<para>UART TX pin. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TempModbusServer.h" line="43" column="9" bodyfile="include/TempModbusServer.h" bodystart="43" bodyend="-1"/>
        <referencedby refid="class_temp_modbus_server_1aac671b84770f4139745d08d05b5c1d92" compoundref="_temp_modbus_server_8cpp" startline="83" endline="122">begin</referencedby>
        <referencedby refid="class_temp_modbus_server_1a32478c395aa45fcdcafcd8790de50691" compoundref="_temp_modbus_server_8cpp" startline="23" endline="46">TempModbusServer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_temp_modbus_server_1a91abdc37c36d4d2a8b070bd3031a2373" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int TempModbusServer::dePin</definition>
        <argsstring></argsstring>
        <name>dePin</name>
        <qualifiedname>TempModbusServer::dePin</qualifiedname>
        <briefdescription>
<para>RS485 Driver Enable pin. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TempModbusServer.h" line="44" column="9" bodyfile="include/TempModbusServer.h" bodystart="44" bodyend="-1"/>
        <referencedby refid="class_temp_modbus_server_1a32478c395aa45fcdcafcd8790de50691" compoundref="_temp_modbus_server_8cpp" startline="23" endline="46">TempModbusServer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_temp_modbus_server_1acd386ba587dcfd86230f2f4156ee7303" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int TempModbusServer::baudRate</definition>
        <argsstring></argsstring>
        <name>baudRate</name>
        <qualifiedname>TempModbusServer::baudRate</qualifiedname>
        <briefdescription>
<para>Serial baud rate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TempModbusServer.h" line="45" column="9" bodyfile="include/TempModbusServer.h" bodystart="45" bodyend="-1"/>
        <referencedby refid="class_temp_modbus_server_1aac671b84770f4139745d08d05b5c1d92" compoundref="_temp_modbus_server_8cpp" startline="83" endline="122">begin</referencedby>
        <referencedby refid="class_temp_modbus_server_1a32478c395aa45fcdcafcd8790de50691" compoundref="_temp_modbus_server_8cpp" startline="23" endline="46">TempModbusServer</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_temp_modbus_server_1a512f10fc6c18f19302b042bfc97bac80" prot="private" static="yes" mutable="no">
        <type><ref refid="class_register_map" kindref="compound">RegisterMap</ref> *</type>
        <definition>RegisterMap * TempModbusServer::registerMapPtr</definition>
        <argsstring></argsstring>
        <name>registerMapPtr</name>
        <qualifiedname>TempModbusServer::registerMapPtr</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>Static pointer for worker functions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TempModbusServer.h" line="73" column="24" bodyfile="include/TempModbusServer.h" bodystart="73" bodyend="-1"/>
        <referencedby refid="class_temp_modbus_server_1a7d4a0ced2cfd174a4697a85492e12a58" compoundref="_temp_modbus_server_8cpp" startline="174" endline="236">readHoldingRegistersWorker</referencedby>
        <referencedby refid="class_temp_modbus_server_1a32478c395aa45fcdcafcd8790de50691" compoundref="_temp_modbus_server_8cpp" startline="23" endline="46">TempModbusServer</referencedby>
        <referencedby refid="class_temp_modbus_server_1a88b7288d622b52f9e28b7c6075b75fe0" compoundref="_temp_modbus_server_8cpp" startline="261" endline="289">writeHoldingRegisterWorker</referencedby>
        <referencedby refid="class_temp_modbus_server_1a52236f3c77c42d126dcaee7515fa37d3" compoundref="_temp_modbus_server_8cpp" startline="335" endline="400">writeMultipleRegistersWorker</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_temp_modbus_server_1a7d4a0ced2cfd174a4697a85492e12a58" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ModbusMessage</type>
        <definition>ModbusMessage TempModbusServer::readHoldingRegistersWorker</definition>
        <argsstring>(ModbusMessage request)</argsstring>
        <name>readHoldingRegistersWorker</name>
        <qualifiedname>TempModbusServer::readHoldingRegistersWorker</qualifiedname>
        <param>
          <type>ModbusMessage</type>
          <declname>request</declname>
        </param>
        <briefdescription>
<para>Worker function for Read Holding Registers (FC03) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">request</parametername>
</parameternamelist>
<parameterdescription>
<para>Modbus request message </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ModbusMessage Response message with register data </para>
</simplesect>
<simplesect kind="note"><para>Static function called by Modbus library </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TempModbusServer.h" line="54" column="26" bodyfile="src/TempModbusServer.cpp" bodystart="174" bodyend="236"/>
        <references refid="class_logger_manager_1aef24f00186213fa78be3b104a50d58e6" compoundref="_logger_manager_8h" startline="165" endline="167">LoggerManager::error</references>
        <references refid="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" compoundref="_logger_manager_8h" startline="145" endline="147">LoggerManager::info</references>
        <references refid="class_temp_modbus_server_1a512f10fc6c18f19302b042bfc97bac80" compoundref="_temp_modbus_server_8h" startline="73">registerMapPtr</references>
        <referencedby refid="class_temp_modbus_server_1aac671b84770f4139745d08d05b5c1d92" compoundref="_temp_modbus_server_8cpp" startline="83" endline="122">begin</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_temp_modbus_server_1a88b7288d622b52f9e28b7c6075b75fe0" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ModbusMessage</type>
        <definition>ModbusMessage TempModbusServer::writeHoldingRegisterWorker</definition>
        <argsstring>(ModbusMessage request)</argsstring>
        <name>writeHoldingRegisterWorker</name>
        <qualifiedname>TempModbusServer::writeHoldingRegisterWorker</qualifiedname>
        <param>
          <type>ModbusMessage</type>
          <declname>request</declname>
        </param>
        <briefdescription>
<para>Worker function for Write Single Register (FC06) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">request</parametername>
</parameternamelist>
<parameterdescription>
<para>Modbus request message </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ModbusMessage Response message with confirmation </para>
</simplesect>
<simplesect kind="note"><para>Static function called by Modbus library </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TempModbusServer.h" line="62" column="26" bodyfile="src/TempModbusServer.cpp" bodystart="261" bodyend="289"/>
        <references refid="class_logger_manager_1aef24f00186213fa78be3b104a50d58e6" compoundref="_logger_manager_8h" startline="165" endline="167">LoggerManager::error</references>
        <references refid="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" compoundref="_logger_manager_8h" startline="145" endline="147">LoggerManager::info</references>
        <references refid="class_temp_modbus_server_1a512f10fc6c18f19302b042bfc97bac80" compoundref="_temp_modbus_server_8h" startline="73">registerMapPtr</references>
        <referencedby refid="class_temp_modbus_server_1aac671b84770f4139745d08d05b5c1d92" compoundref="_temp_modbus_server_8cpp" startline="83" endline="122">begin</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_temp_modbus_server_1a52236f3c77c42d126dcaee7515fa37d3" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ModbusMessage</type>
        <definition>ModbusMessage TempModbusServer::writeMultipleRegistersWorker</definition>
        <argsstring>(ModbusMessage request)</argsstring>
        <name>writeMultipleRegistersWorker</name>
        <qualifiedname>TempModbusServer::writeMultipleRegistersWorker</qualifiedname>
        <param>
          <type>ModbusMessage</type>
          <declname>request</declname>
        </param>
        <briefdescription>
<para>Worker function for Write Multiple Registers (FC16) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">request</parametername>
</parameternamelist>
<parameterdescription>
<para>Modbus request message </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ModbusMessage Response message with confirmation </para>
</simplesect>
<simplesect kind="note"><para>Static function called by Modbus library </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TempModbusServer.h" line="70" column="26" bodyfile="src/TempModbusServer.cpp" bodystart="335" bodyend="400"/>
        <references refid="class_logger_manager_1aef24f00186213fa78be3b104a50d58e6" compoundref="_logger_manager_8h" startline="165" endline="167">LoggerManager::error</references>
        <references refid="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" compoundref="_logger_manager_8h" startline="145" endline="147">LoggerManager::info</references>
        <references refid="class_temp_modbus_server_1a512f10fc6c18f19302b042bfc97bac80" compoundref="_temp_modbus_server_8h" startline="73">registerMapPtr</references>
        <referencedby refid="class_temp_modbus_server_1aac671b84770f4139745d08d05b5c1d92" compoundref="_temp_modbus_server_8cpp" startline="83" endline="122">begin</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_temp_modbus_server_1a32478c395aa45fcdcafcd8790de50691" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TempModbusServer::TempModbusServer</definition>
        <argsstring>(RegisterMap &amp;regMap, uint8_t id, HardwareSerial &amp;serialPort, int rx, int tx, int de, int baud=9600)</argsstring>
        <name>TempModbusServer</name>
        <qualifiedname>TempModbusServer::TempModbusServer</qualifiedname>
        <param>
          <type><ref refid="class_register_map" kindref="compound">RegisterMap</ref> &amp;</type>
          <declname>regMap</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>HardwareSerial &amp;</type>
          <declname>serialPort</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>de</declname>
        </param>
        <param>
          <type>int</type>
          <declname>baud</declname>
          <defval>9600</defval>
        </param>
        <briefdescription>
<para>Construct a new Temp Modbus Server object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">regMap</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to register map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>Modbus server ID (1-247) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">serialPort</parametername>
</parameternamelist>
<parameterdescription>
<para>Hardware serial port to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rx</parametername>
</parameternamelist>
<parameterdescription>
<para>RX pin number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tx</parametername>
</parameternamelist>
<parameterdescription>
<para>TX pin number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">de</parametername>
</parameternamelist>
<parameterdescription>
<para>Driver Enable pin for RS485 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">baud</parametername>
</parameternamelist>
<parameterdescription>
<para>Baud rate (default: 9600) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TempModbusServer.h" line="86" column="5" bodyfile="src/TempModbusServer.cpp" bodystart="23" bodyend="46"/>
        <references refid="class_temp_modbus_server_1acd386ba587dcfd86230f2f4156ee7303" compoundref="_temp_modbus_server_8h" startline="45">baudRate</references>
        <references refid="class_temp_modbus_server_1a91abdc37c36d4d2a8b070bd3031a2373" compoundref="_temp_modbus_server_8h" startline="44">dePin</references>
        <references refid="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" compoundref="_logger_manager_8h" startline="145" endline="147">LoggerManager::info</references>
        <references refid="class_temp_modbus_server_1a84bf329562ebb8bb9b9b55c120a4ddae" compoundref="_temp_modbus_server_8h" startline="38">mbServer</references>
        <references refid="class_temp_modbus_server_1a9caa115b3b1a8131680cdc620a23139e" compoundref="_temp_modbus_server_8h" startline="39">registerMap</references>
        <references refid="class_temp_modbus_server_1a512f10fc6c18f19302b042bfc97bac80" compoundref="_temp_modbus_server_8h" startline="73">registerMapPtr</references>
        <references refid="class_temp_modbus_server_1ae3a8fcae5056d16b97c0281fc4bddf74" compoundref="_temp_modbus_server_8h" startline="42">rxPin</references>
        <references refid="class_temp_modbus_server_1afecdc5347ebf2b0a5729b2e8e2cb0642" compoundref="_temp_modbus_server_8h" startline="41">serial</references>
        <references refid="class_temp_modbus_server_1a4db19b8c522c7241cc8507b26dae6997" compoundref="_temp_modbus_server_8h" startline="40">serverID</references>
        <references refid="class_temp_modbus_server_1ab07ddf78bd3b4f6fde1f0e86e6eb4449" compoundref="_temp_modbus_server_8h" startline="43">txPin</references>
      </memberdef>
      <memberdef kind="function" id="class_temp_modbus_server_1ac703f8733fd8afdec9b315b266f5204a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TempModbusServer::~TempModbusServer</definition>
        <argsstring>()</argsstring>
        <name>~TempModbusServer</name>
        <qualifiedname>TempModbusServer::~TempModbusServer</qualifiedname>
        <briefdescription>
<para>Destroy the Temp Modbus Server object. </para>
        </briefdescription>
        <detaileddescription>
<para>Cleans up Modbus server resources </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TempModbusServer.h" line="93" column="5" bodyfile="src/TempModbusServer.cpp" bodystart="51" bodyend="57"/>
        <references refid="class_temp_modbus_server_1a84bf329562ebb8bb9b9b55c120a4ddae" compoundref="_temp_modbus_server_8h" startline="38">mbServer</references>
      </memberdef>
      <memberdef kind="function" id="class_temp_modbus_server_1aac671b84770f4139745d08d05b5c1d92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TempModbusServer::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>TempModbusServer::begin</qualifiedname>
        <briefdescription>
<para>Initialize and start Modbus server. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if server started successfully </para>
</simplesect>
<simplesect kind="return"><para>false if initialization failed</para>
</simplesect>
Configures serial port, registers worker functions, and starts listening for Modbus requests </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TempModbusServer.h" line="102" column="10" bodyfile="src/TempModbusServer.cpp" bodystart="83" bodyend="122"/>
        <references refid="class_temp_modbus_server_1acd386ba587dcfd86230f2f4156ee7303" compoundref="_temp_modbus_server_8h" startline="45">baudRate</references>
        <references refid="class_logger_manager_1a5c1373ccc47f4112b596fe6f84fbbc21" compoundref="_logger_manager_8h" startline="145" endline="147">LoggerManager::info</references>
        <references refid="class_temp_modbus_server_1a84bf329562ebb8bb9b9b55c120a4ddae" compoundref="_temp_modbus_server_8h" startline="38">mbServer</references>
        <references refid="class_temp_modbus_server_1a7d4a0ced2cfd174a4697a85492e12a58" compoundref="_temp_modbus_server_8cpp" startline="174" endline="236">readHoldingRegistersWorker</references>
        <references refid="class_temp_modbus_server_1ae3a8fcae5056d16b97c0281fc4bddf74" compoundref="_temp_modbus_server_8h" startline="42">rxPin</references>
        <references refid="class_temp_modbus_server_1afecdc5347ebf2b0a5729b2e8e2cb0642" compoundref="_temp_modbus_server_8h" startline="41">serial</references>
        <references refid="class_temp_modbus_server_1a4db19b8c522c7241cc8507b26dae6997" compoundref="_temp_modbus_server_8h" startline="40">serverID</references>
        <references refid="class_temp_modbus_server_1ab07ddf78bd3b4f6fde1f0e86e6eb4449" compoundref="_temp_modbus_server_8h" startline="43">txPin</references>
        <references refid="class_logger_manager_1a0d52b0ff7bff22817e987ad753102854" compoundref="_logger_manager_8h" startline="155" endline="157">LoggerManager::warning</references>
        <references refid="class_temp_modbus_server_1a88b7288d622b52f9e28b7c6075b75fe0" compoundref="_temp_modbus_server_8cpp" startline="261" endline="289">writeHoldingRegisterWorker</references>
        <references refid="class_temp_modbus_server_1a52236f3c77c42d126dcaee7515fa37d3" compoundref="_temp_modbus_server_8cpp" startline="335" endline="400">writeMultipleRegistersWorker</references>
      </memberdef>
      <memberdef kind="function" id="class_temp_modbus_server_1a8bbfa71756ccff5f4b80509c41078c6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TempModbusServer::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <qualifiedname>TempModbusServer::stop</qualifiedname>
        <briefdescription>
<para>Stop Modbus server. </para>
        </briefdescription>
        <detaileddescription>
<para>Stops server and releases resources </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TempModbusServer.h" line="108" column="10" bodyfile="src/TempModbusServer.cpp" bodystart="126" bodyend="129"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Modbus RTU server implementation for temperature monitoring. </para>
    </briefdescription>
    <detaileddescription>
<para>Provides Modbus RTU communication interface for reading temperature values, status information, and configuring alarm thresholds. Supports function codes 03 (Read Holding Registers), 06 (Write Single Register), and 16 (Write Multiple Registers). </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>RegisterMap</label>
        <link refid="class_register_map"/>
      </node>
      <node id="1">
        <label>TempModbusServer</label>
        <link refid="class_temp_modbus_server"/>
        <childnode refid="2" relation="usage">
          <edgelabel>-registerMap</edgelabel>
          <edgelabel>-registerMapPtr</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/TempModbusServer.h" line="36" column="1" bodyfile="include/TempModbusServer.h" bodystart="36" bodyend="109"/>
    <listofallmembers>
      <member refid="class_temp_modbus_server_1acd386ba587dcfd86230f2f4156ee7303" prot="private" virt="non-virtual"><scope>TempModbusServer</scope><name>baudRate</name></member>
      <member refid="class_temp_modbus_server_1aac671b84770f4139745d08d05b5c1d92" prot="public" virt="non-virtual"><scope>TempModbusServer</scope><name>begin</name></member>
      <member refid="class_temp_modbus_server_1a91abdc37c36d4d2a8b070bd3031a2373" prot="private" virt="non-virtual"><scope>TempModbusServer</scope><name>dePin</name></member>
      <member refid="class_temp_modbus_server_1a84bf329562ebb8bb9b9b55c120a4ddae" prot="private" virt="non-virtual"><scope>TempModbusServer</scope><name>mbServer</name></member>
      <member refid="class_temp_modbus_server_1a7d4a0ced2cfd174a4697a85492e12a58" prot="private" virt="non-virtual"><scope>TempModbusServer</scope><name>readHoldingRegistersWorker</name></member>
      <member refid="class_temp_modbus_server_1a9caa115b3b1a8131680cdc620a23139e" prot="private" virt="non-virtual"><scope>TempModbusServer</scope><name>registerMap</name></member>
      <member refid="class_temp_modbus_server_1a512f10fc6c18f19302b042bfc97bac80" prot="private" virt="non-virtual"><scope>TempModbusServer</scope><name>registerMapPtr</name></member>
      <member refid="class_temp_modbus_server_1ae3a8fcae5056d16b97c0281fc4bddf74" prot="private" virt="non-virtual"><scope>TempModbusServer</scope><name>rxPin</name></member>
      <member refid="class_temp_modbus_server_1afecdc5347ebf2b0a5729b2e8e2cb0642" prot="private" virt="non-virtual"><scope>TempModbusServer</scope><name>serial</name></member>
      <member refid="class_temp_modbus_server_1a4db19b8c522c7241cc8507b26dae6997" prot="private" virt="non-virtual"><scope>TempModbusServer</scope><name>serverID</name></member>
      <member refid="class_temp_modbus_server_1a8bbfa71756ccff5f4b80509c41078c6c" prot="public" virt="non-virtual"><scope>TempModbusServer</scope><name>stop</name></member>
      <member refid="class_temp_modbus_server_1a32478c395aa45fcdcafcd8790de50691" prot="public" virt="non-virtual"><scope>TempModbusServer</scope><name>TempModbusServer</name></member>
      <member refid="class_temp_modbus_server_1ab07ddf78bd3b4f6fde1f0e86e6eb4449" prot="private" virt="non-virtual"><scope>TempModbusServer</scope><name>txPin</name></member>
      <member refid="class_temp_modbus_server_1a88b7288d622b52f9e28b7c6075b75fe0" prot="private" virt="non-virtual"><scope>TempModbusServer</scope><name>writeHoldingRegisterWorker</name></member>
      <member refid="class_temp_modbus_server_1a52236f3c77c42d126dcaee7515fa37d3" prot="private" virt="non-virtual"><scope>TempModbusServer</scope><name>writeMultipleRegistersWorker</name></member>
      <member refid="class_temp_modbus_server_1ac703f8733fd8afdec9b315b266f5204a" prot="public" virt="non-virtual"><scope>TempModbusServer</scope><name>~TempModbusServer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
